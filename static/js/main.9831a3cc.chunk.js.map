{"version":3,"sources":["components/tasks/todaysplan.jsx","components/header.jsx","constants/ActionTypes.js","actions/index.js","selectors/index.js","containers/TodayContainer.js","components/tasks/todayscompleted.jsx","containers/TodayCompletedContainer.js","components/today.jsx","components/tasks/plannerwidget.jsx","containers/PlannerWidgetContainer.js","components/planner.jsx","components/past.jsx","components/settings.jsx","components/main.jsx","App.js","reducers/todos.js","reducers/index.js","index.js"],"names":["property","mapping","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","setState","react_default","a","createElement","Navbar","dark","expand","style","background","NavbarBrand","href","className","NavbarToggler","onClick","Collapse","navbar","Nav","NavLink","to","tag","RRNavLink","Component","ADD_TODO","EDIT_TODO","DELETE_TODO","addTodo","payload","type","types","editTodo","id","deleteTodo","completeTodo","completeAllTodos","clearCompleted","useStyles","makeStyles","theme","title_paper","backgroundColor","blue","padding","spacing","card","width","open_tasks_card","followup_task_card_header","grey","card_content","height","font_style","fontFamily","action_font_style","card_action","justifyContent","title","fontSize","avatar_red","red","avatar_blue","avatar_orange","orange","button_start","color","button_complete","margin","marginLeft","expandOpen","transform","root","StyledAvatar","withStyles","default","green","_ref","classes","other","objectWithoutProperties","Avatar","assign","aria-label","getAllTodos","createSelector","todos","TodaysPlan","connect","allTodos","dispatch","objectSpread","bindActionCreators","TodoActions","renderTasks","todaysOpenTasks","todaysTasks","numTodaysTasks","length","numTasksAtWork","getTasksByCategory","timeLeft","timeLeftAtWork","isAtWork","isMorning","isAfterWork","getTitle","reorderedTasks","openTasks","dayVal","isBeforeWork","workTasks","reorder","homeTasks","personalTasks","Array","prototype","push","apply","reorderTasks","Grid","justify","container","item","Typography","variant","component","Chip","size","label","Date","toDateString","renderOpenTasksTitle","map","renderTask","inprogressTasks","getTasksByStatus","pendingTasks","inprogress_high","getTasksByPriority","inprogress_med","inprogress_low","pending_high","pending_med","pending_low","task","taskJson","JSON","parse","effort","key","Slide","direction","in","mountOnEnter","unmountOnExit","Card","raised","CardHeader","avatar","renderCategoryAvatar","category","CardContent","CardActions","disableSpacing","Button","startIcon","AssignmentTurnedIn_default","handleActionChange","renderFollowupTask","action","align","renderEffortChip","renderPriorityChip","priority","status","PlayArrow_default","Pause_default","renderAction","tasks","filter","t","avatar_color","Computer_default","Home_default","EmojiPeople_default","priority_color","effort_color","effort_suffix","converted_effort","icon","AccessTime_default","newStatus","deadline","date","toString","d","getDate","m","getMonth","getFullYear","formatDate","jsonPayload","stringify","editTask","now","morningTime","setHours","setMinutes","getTime","workStartTime","workEndTime","eveningTime","getHours","filterTodaysTasks","someDate","today","parts","split","mydate","isToday","filterOpenTasks","todaysTodos","displayAll","completed_tasks_card","completed_card","completed_card_content","TodayCompletedPlan","renderCompletedTask","filterCompletedTasks","completedTasks","Paper","elevation","renderCompletedTasks","displayCompleted","Today","TodayContainer","TodayCompletedContainer","fab","AllTodoList","tableIcons","Add","forwardRef","ref","AddBox_default","Check","Check_default","Clear","Clear_default","Delete","DeleteOutline_default","DetailPanel","ChevronRight_default","Edit","Edit_default","Export","SaveAlt_default","Filter","FilterList_default","FirstPage","FirstPage_default","LastPage","LastPage_default","NextPage","PreviousPage","ChevronLeft_default","ResetSearch","Search","Search_default","SortArrow","ArrowUpward_default","ThirdStateCheck","Remove_default","ViewColumn","ViewColumn_default","_useState","useState","_useState2","slicedToArray","data","setData","_useState3","_useState4","placeholdertitle","_useState5","_useState6","loading","setLoading","_useState7","_useState8","collapse","setCollapse","transformOneTask","t_payload","handleTitleChange","event","target","value","handleFollowupChange","followup","checked","onPriorityBtnClick","onEffortBtnClick","onCatBtnClick","handleDeadlineChange","formattedDate","console","log","getCurrentDate","handleSubmit","hasOwnProperty","preventDefault","input","toJSON","timezoneOffsetInHours","getTimezoneOffset","sign","leadingZero","Math","abs","correctedDate","getMinutes","getSeconds","getMilliseconds","toISOString","replace","Fab","Add_default","Modal","Form","onSubmit","ModalHeader","ModalBody","es_Card","outline","CardBody","Row","Col","Input","name","placeholder","onChange","Switch","ButtonGroup","es_Button","disabled","active","InputGroup","InputGroupAddon","addonType","defaultValue","ModalFooter","Spinner","allTasks","table_data","columns","field","lookup","High","Medium","Low","Work","Home","Personal","filtering","Pending","InProgress","Completed","transformData","dist_default","icons","options","headerStyle","search","toolbar","actionsColumnIndex","paging","maxBodyHeight","editable","isEditable","rowData","onRowUpdate","newData","oldData","Promise","resolve","setTimeout","onRowDelete","actions","tooltip","completeTask","renderAllTasks","Planner","PlannerWidgetContainer","Past","Settings","Main","react_router","path","exact","from","App","header_Header","main_Main","initialState","rootReducer","combineReducers","arguments","undefined","concat","toConsumableArray","reduce","maxId","todo","max","persistConfig","storage","persistedReducer","persistReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","ReactDOM","render","es","integration_react","react_router_dom","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.9831a3cc.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid';\nimport Chip from '@material-ui/core/Chip';\nimport { red, grey, green } from '@material-ui/core/colors';\nimport { blue } from '@material-ui/core/colors';\nimport { orange } from '@material-ui/core/colors';\nimport HomeIcon from '@material-ui/icons/Home';\nimport EmojiPeopleIcon from '@material-ui/icons/EmojiPeople';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport ComputerIcon from '@material-ui/icons/Computer';\nimport Slide from '@material-ui/core/Slide';\nimport { editTodo } from '../../actions';\nimport './todaysplan.css';\n\nconst useStyles = makeStyles(theme => ({\n        title_paper: {\n            backgroundColor: blue[50],\n            padding: theme.spacing(3, 2),\n        },\n        card: {\n            width: 270,\n        },\n        open_tasks_card: {\n            backgroundColor: blue[50],\n            padding: theme.spacing(3, 2),\n        },\n        followup_task_card_header: {\n            backgroundColor: grey[400],\n        },\n        card_content: {\n            backgroundColor: grey[100],\n            height: 110,\n        },\n        font_style: {\n            fontFamily: ['Montserrat','sans-serif']\n        },\n        action_font_style: {\n            fontFamily: ['Karla','sans-serif']\n        },\n        card_action: {\n            justifyContent: \"flex-start\"\n        },\n        title: {\n            fontSize: 14,\n        },\n        avatar_red: {\n            backgroundColor: red[500],\n        },\n        avatar_blue: {\n            backgroundColor: blue[500],\n        },\n        avatar_orange: {\n            backgroundColor: orange[500],\n        },\n        button_start: {\n            color: 'black',\n        },\n        button_complete: {\n            margin: theme.spacing(1),\n            background: '#388e3c',\n            color: 'white',\n        },\n        expand: {\n            marginLeft: 'auto',\n        },\n        expandOpen: {\n            transform: 'rotate(180deg)',\n        },\n        root: {\n            padding: theme.spacing(3, 2),\n        },\n    }));\n\nconst styledBy = (property, mapping) => props => mapping[props[property]];\n\nconst StyledAvatar = withStyles({\n    root: {\n        backgroundColor: styledBy('color', {\n            default: red[500],\n            blue: blue[500],\n            red: red[500],\n            green: green[500],\n            orange: orange[500],\n        })\n    },\n})(({ classes, color, ...other }) => <Avatar aria-label=\"recipe\" className={classes.root} {...other} />);\n\n\nexport default function Today(props) {\n    const classes = useStyles();\n\n    function renderTasks(todaysOpenTasks) {\n        var title = getTitle(todaysOpenTasks)\n        var reorderedTasks = reorderTasks(todaysOpenTasks)\n        return (\n            <div>\n                { renderOpenTasksTitle(title) }\n                <Grid className={classes.root} container spacing={5}>\n                {\n                    reorderedTasks.map(renderTask)\n                }\n                </Grid>\n            </div>\n        );\n    }\n\n    function reorderTasks(openTasks) {\n        var reorderedTasks = []\n\n        var dayVal = getDayVal()\n\n        var workTasks = reorder(getTasksByCategory(openTasks, \"Work\"))\n        var homeTasks = reorder(getTasksByCategory(openTasks, \"Home\"))\n        var personalTasks = reorder(getTasksByCategory(openTasks, \"Personal\"))\n        if(dayVal == \"AT_WORK\") {\n            Array.prototype.push.apply(reorderedTasks, workTasks);\n            Array.prototype.push.apply(reorderedTasks, homeTasks);\n            Array.prototype.push.apply(reorderedTasks, personalTasks);\n        } else if(dayVal == \"BEFORE_WORK\") {\n            Array.prototype.push.apply(reorderedTasks, homeTasks);\n            Array.prototype.push.apply(reorderedTasks, workTasks);\n            Array.prototype.push.apply(reorderedTasks, personalTasks);\n        } else {\n            Array.prototype.push.apply(reorderedTasks, personalTasks);\n            Array.prototype.push.apply(reorderedTasks, homeTasks);\n            Array.prototype.push.apply(reorderedTasks, workTasks);\n        }\n\n        return reorderedTasks\n    }\n\n    function reorder(openTasks) {\n        var reorderedTasks = []\n\n        var inprogressTasks = getTasksByStatus(openTasks, \"InProgress\")\n        var pendingTasks = getTasksByStatus(openTasks, \"Pending\")\n\n        var inprogress_high = getTasksByPriority(inprogressTasks, \"High\")\n        var inprogress_med = getTasksByPriority(inprogressTasks, \"Medium\")\n        var inprogress_low = getTasksByPriority(inprogressTasks, \"Low\")\n\n        var pending_high = getTasksByPriority(pendingTasks, \"High\")\n        var pending_med = getTasksByPriority(pendingTasks, \"Medium\")\n        var pending_low = getTasksByPriority(pendingTasks, \"Low\")\n\n        Array.prototype.push.apply(reorderedTasks, inprogress_high);\n        Array.prototype.push.apply(reorderedTasks, inprogress_med);\n        Array.prototype.push.apply(reorderedTasks, inprogress_low);\n        Array.prototype.push.apply(reorderedTasks, pending_high);\n        Array.prototype.push.apply(reorderedTasks, pending_med);\n        Array.prototype.push.apply(reorderedTasks, pending_low);\n\n        return reorderedTasks\n    }\n\n    function renderTask(task) {\n        let taskJson = JSON.parse(task.payload);\n        if(taskJson.effort < 1) {\n            return (\n                renderFollowupTask(task)\n            )\n        } else {\n        return (\n            <Grid key={task.id} item>\n                <Slide direction=\"right\" in=\"true\" mountOnEnter unmountOnExit>\n                    <Card className={classes.card} raised={true}>\n                        <CardHeader \n                            avatar={renderCategoryAvatar(taskJson.category)}\n                            action={\n                                <div align=\"right\">\n                                    {renderEffortChip(taskJson.effort)}\n                                    <br />\n                                    {renderPriorityChip(taskJson.priority)}\n                                </div>\n                            }\n                        />\n                        <CardContent className={classes.card_content}>\n                            <Typography variant=\"h5\" component=\"h2\" className={classes.font_style}>\n                                {taskJson.title}\n                            </Typography>\n                        </CardContent>\n                        <CardActions disableSpacing>\n                        {\n                            renderAction(task.id, taskJson.status, taskJson)\n                        }\n                        </CardActions>\n                    </Card>\n                </Slide>\n            </Grid>\n            );\n        }\n    }\n\n    function renderFollowupTask(task) {\n        let taskJson = JSON.parse(task.payload);\n        return (\n            <Grid key={task.id} item>\n                <Slide direction=\"right\" in=\"true\" mountOnEnter unmountOnExit>\n                    <Card className={classes.card} raised={true}>\n                        <CardHeader \n                            className={classes.followup_task_card_header}\n                            avatar={renderCategoryAvatar(taskJson.category)}\n                            title={\n                                <Typography variant=\"h5\" component=\"h5\" className={classes.font_style}>\n                                    Follow-up\n                                </Typography>\n                            }\n                        />\n                        <CardContent className={classes.card_content}>\n                            <Typography variant=\"h5\" component=\"h2\" className={classes.font_style}>\n                                {taskJson.title}\n                            </Typography>\n                        </CardContent>\n                        <CardActions disableSpacing>\n                            <Button \n                                className={classes.button_start}\n                                startIcon={<AssignmentTurnedInIcon />}\n                                onClick={() => handleActionChange(task.id, \"Completed\", taskJson)}>\n                                <Typography className={classes.action_font_style}>\n                                    Done\n                                </Typography>\n                            </Button>\n                        </CardActions>\n                    </Card>\n                </Slide>\n            </Grid>\n        );\n    }\n\n    function getDayVal() {\n        var dayVal\n        if(isBeforeWork()) dayVal = 'BEFORE_WORK'\n        else if(isAfterWork()) dayVal = 'AFTER_WORK'\n        else dayVal = 'AT_WORK'\n\n        return dayVal\n    }\n\n    function getTasksByCategory(tasks, category) {\n        var filteredTasks = tasks.filter(function(t) {\n            return JSON.parse(t.payload).category == category;\n        });\n\n        return filteredTasks;\n    }\n\n    function getTasksByPriority(tasks, priority) {\n        var filteredTasks = tasks.filter(function(t) {\n            return JSON.parse(t.payload).priority == priority;\n        });\n\n        return filteredTasks;\n    }\n\n    function getTasksByStatus(tasks, status) {\n        var filteredTasks = tasks.filter(function(t) {\n            return JSON.parse(t.payload).status == status;\n        });\n\n        return filteredTasks;\n    }\n\n    function getTitle(todaysTasks) {\n        var title\n        var numTodaysTasks = todaysTasks.length\n        var numTasksAtWork = getTasksByCategory(todaysTasks, \"Work\").length\n        var timeLeft = timeLeftAtWork()\n        if(numTodaysTasks > 0) {\n            if(isAtWork()) {\n                if (numTasksAtWork == 0) {\n                    title = \"Plan your day at work.\"\n                } else {\n                    title = \"You have \" + (numTasksAtWork) + \" \"\n                    title += (numTasksAtWork == 1) ? \"task\" : \"tasks\"\n                    title += \" at work.\"\n                }\n                title += \" \" + timeLeft + \" hours left.\"\n            } else {\n                title = \"You have \" + (numTodaysTasks) + \" \"\n                title += (numTodaysTasks == 1) ? \"task\" : \"tasks\"\n                title += \" for the day.\"\n            }\n        } else if(isMorning()) {\n            title = \"Good Morning! Plan your day for today and get started.\"\n        } else if (isAfterWork()) {\n            title = \"No open tasks now!\"\n        } else {\n            title = timeLeftAtWork() +\" hours left at work. Everything done for now!\"\n        }\n        return title\n    }\n\n    function renderOpenTasksTitle(title) {\n        return (\n            <Grid justify='space-between' container className={classes.title_paper}>\n                <Grid item>\n                    <Typography variant=\"h4\" component=\"h4\" className={classes.font_style}>\n                        { title }\n                    </Typography>\n                </Grid>\n                <Grid item>\n                    { renderDate() }\n                </Grid>\n            </Grid>\n        );\n    }\n\n    function renderDate() {\n        return (\n            <Chip size=\"medium\" color=\"primary\" className={classes.font_style} label={new Date().toDateString()} />\n        );\n    }\n\n    function renderCategoryAvatar(category) {\n        var avatar_color\n        if(category == 'Work') {\n            avatar_color='blue'\n            return (\n                <StyledAvatar color={avatar_color}> <ComputerIcon color=\"action\" /> </StyledAvatar>\n            );\n        }\n        if(category == 'Home') {\n            avatar_color='orange'\n            return (\n                <StyledAvatar color={avatar_color}> <HomeIcon color=\"action\" /> </StyledAvatar>\n            );\n        }\n        if(category == 'Personal') {\n            avatar_color='green'\n            return (\n                <StyledAvatar color={avatar_color}> <EmojiPeopleIcon color=\"action\" /> </StyledAvatar>\n            );\n        }\n    }\n\n    function renderPriorityChip(priority) {\n        var priority_color\n        if(priority == 'High') {\n            priority_color='secondary'\n        }\n        if(priority == 'Medium') {\n            priority_color='primary'\n        }\n        if(priority == 'Low') {\n            priority_color='default'\n        }\n        return (\n            <Chip variant=\"outlined\" className={classes.font_style} size=\"small\"  color={priority_color} label={priority + \" Priority\"} />\n        );\n    }\n\n    function renderEffortChip(effort) {\n        var effort_color\n        var effort_suffix = 'hours'\n        var converted_effort = effort\n        if(effort >= 3) {\n            effort_color='secondary'\n        }\n        if(effort < 3) {\n            effort_color='primary'\n        }\n        if(effort < 1) {\n            effort_color='default'\n        }\n        \n        if(effort == 1) effort_suffix = 'hour'\n        if(effort < 1) {\n            converted_effort = effort * 60\n            effort_suffix = 'minutes'\n        }\n\n        return (\n            <Chip size=\"small\" className={classes.font_style} color={effort_color} icon={<AccessTimeIcon />} label={converted_effort + \" \" + effort_suffix} />\n        );\n    }\n\n    function handleActionChange(id, newStatus, task) {\n        task.status = newStatus\n        editTask(id, task)\n    }\n\n    function renderAction(id, status, task) {\n        if(status == \"Pending\") {\n            return (\n                <Button \n                className={classes.button_start}\n                startIcon={<PlayArrowIcon />}\n                onClick={() => handleActionChange(id, \"InProgress\", task)}\n                >\n                    <Typography className={classes.action_font_style}>\n                        Start\n                    </Typography>\n                </Button>\n            );\n        }\n        if(status == \"InProgress\") {\n            return (\n                <Grid container justify='space-between'>\n                    <Button \n                        className={classes.button_start}\n                        startIcon={<PauseIcon />}\n                        onClick={() => handleActionChange(id, \"Pending\", task)}>\n                            <Typography className={classes.action_font_style}>\n                                Pause\n                            </Typography>\n                    </Button>\n                    <Button \n                        className={classes.button_start}\n                        startIcon={<AssignmentTurnedInIcon />}\n                        onClick={() => handleActionChange(id, \"Completed\", task)}>\n                            <Typography className={classes.action_font_style}>\n                                Complete\n                            </Typography>\n                    </Button>\n                </Grid>\n            );\n        }\n    }\n\n    function formatDate(date) {\n        if(date.toString().length < 12) return date\n  \n        var d = date.getDate();\n        var m = date.getMonth()+1;\n        var y = date.getFullYear();\n  \n        var formattedDate = y+\"-\"+(m <= 9 ? '0' + m : m)+\"-\"+(d <= 9 ? '0' + d : d)\n        return formattedDate\n    }\n\n    function editTask(id, payload) {\n        payload.deadline = formatDate(payload.deadline)\n        var jsonPayload = JSON.stringify(payload)\n        props.dispatch(editTodo(id, jsonPayload))\n    }\n\n    const isMorning = () => {\n        var now = new Date();\n        var morningTime = new Date();\n        morningTime.setHours(11); morningTime.setMinutes(59);\n        return now.getTime() <= morningTime.getTime()\n    }\n\n    const isAtWork = () => {\n        var now = new Date();\n        var workStartTime = new Date();\n        workStartTime.setHours(9); workStartTime.setMinutes(0);\n        var workEndTime = new Date();\n        workEndTime.setHours(17); workEndTime.setMinutes(0);\n        return now.getTime() >= workStartTime.getTime() && now.getTime() <= workEndTime.getTime()\n    }\n\n    const isBeforeWork = () => {\n        var now = new Date();\n        var workStartTime = new Date();\n        workStartTime.setHours(9); workStartTime.setMinutes(0);\n        return now.getTime() < workStartTime.getTime()\n    }\n\n    const isAfterWork = () => {\n        var now = new Date();\n        var eveningTime = new Date();\n        eveningTime.setHours(17); eveningTime.setMinutes(0);\n        return now.getTime() >= eveningTime.getTime()\n    }\n\n    const timeLeftAtWork = () => {\n        var now = new Date();\n        var eveningTime = new Date();\n        eveningTime.setHours(17); eveningTime.setMinutes(0);\n        return eveningTime.getHours() - now.getHours()\n    }\n\n    const isToday = (someDate) => {\n        const today = new Date()\n        var parts = someDate.split('-')\n        var mydate = new Date(parts[0], parts[1] - 1, parts[2]); \n        return mydate.getDate() == today.getDate() &&\n            mydate.getMonth() == today.getMonth() &&\n            mydate.getFullYear() == today.getFullYear()\n    }\n\n    const filterTodaysTasks = (allTodos) => {\n        var todaystasks = allTodos.filter(function(t) {\n                        return isToday(JSON.parse(t.payload).deadline);\n                    });\n\n        return todaystasks;\n    }\n\n    const filterOpenTasks = (todaysTodos) => {\n        var completedTasks = todaysTodos.filter(function(t) {\n                        return JSON.parse(t.payload).status != \"Completed\";\n                    });\n\n        return completedTasks;\n    }\n\n    function displayAll(allTodos) {\n        let todaysTasks = filterTodaysTasks(allTodos)\n        let openTodaysTasks = filterOpenTasks(todaysTasks)\n        return (\n            renderTasks(openTodaysTasks)\n        )\n    }\n\n    return <div className=\"task-list\">\n        {\n            displayAll(props.allTodos)\n        }\n    </div>;\n}","import React, { Component } from 'react';\nimport { Navbar, NavbarToggler, NavbarBrand, Nav, NavLink, Collapse } from 'reactstrap';\nimport { NavLink as RRNavLink } from 'react-router-dom';\n\nexport default class Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            isOpen: false\n        };\n    }\n    toggle() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n\n    render() {\n        return (\n            <Navbar dark expand=\"md\" style={{background:\"#213969\"}}>\n                <NavbarBrand href=\"/\"><span className=\"siteTitle\">ONE PLANNER</span></NavbarBrand>\n                <NavbarToggler onClick={this.toggle} />\n                <Collapse isOpen={this.state.isOpen} navbar>\n                    <Nav className=\"siteNav\" navbar>\n                        <NavLink to=\"/today\" tag={RRNavLink}>today's plan</NavLink>\n                        <NavLink to=\"/planner\" tag={RRNavLink}>planner</NavLink>\n                        <NavLink to=\"/past\" tag={RRNavLink}>past</NavLink>\n                        <NavLink to=\"/settings\" tag={RRNavLink}>settings</NavLink>\n                    </Nav>\n                </Collapse>\n            </Navbar>\n        )\n    }\n}","export const ADD_TODO = 'ADD_TODO'\nexport const EDIT_TODO = 'EDIT_TODO'\nexport const DELETE_TODO = 'DELETE_TODO'\nexport const COMPLETE_TODO = 'COMPLETE_TODO'\nexport const COMPLETE_ALL_TODOS = 'COMPLETE_ALL_TODOS'\nexport const CLEAR_COMPLETED = 'CLEAR_COMPLETED'\nexport const SHOW_TODO = 'SHOW_TODO'","import * as types from '../constants/ActionTypes'\n\nexport const addTodo = payload => ({ type: types.ADD_TODO, payload })\nexport const editTodo = (id, payload) => ({ type: types.EDIT_TODO, id, payload })\nexport const deleteTodo = id => ({ type: types.DELETE_TODO, id })\nexport const completeTodo = id => ({ type: types.COMPLETE_TODO, id })\nexport const completeAllTodos = () => ({ type: types.COMPLETE_ALL_TODOS })\nexport const clearCompleted = () => ({ type: types.CLEAR_COMPLETED })","import {createSelector} from 'reselect';\n\nconst getTodos = state => state.todos\n\nexport const getAllTodos = createSelector(\n    [getTodos],\n    (todos) => {\n        return todos\n    }\n)","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as TodoActions from '../actions'\nimport Today from '../components/tasks/todaysplan'\nimport { getAllTodos } from '../selectors'\n\nconst mapStateToProps = state => ({\n  allTodos: getAllTodos(state)\n})\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n    ...bindActionCreators(TodoActions, dispatch)\n  }\n}\n\nconst TodaysPlan = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Today)\n\nexport default TodaysPlan","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Chip from '@material-ui/core/Chip';\nimport { grey, green } from '@material-ui/core/colors';\nimport Slide from '@material-ui/core/Slide';\nimport './todaysplan.css';\n\nconst useStyles = makeStyles(theme => ({\n        completed_tasks_card: {\n            backgroundColor: grey[200],\n            color: green[900],\n            padding: theme.spacing(3, 2),\n        },\n        completed_card: {\n            width: 270,\n            background: green[900],\n            color: 'white'\n        },\n        completed_card_content: {\n            height: 80,\n        },\n        font_style: {\n            fontFamily: ['Montserrat','sans-serif']\n        },\n        root: {\n            padding: theme.spacing(3, 2),\n        },\n    }));\n\nexport default function TodayCompleted(props) {\n    const classes = useStyles();\n\n    function renderCompletedTasks(completedTasks) {\n        if(completedTasks.length > 0) {\n            return (\n                <div>\n                    <Paper className={classes.completed_tasks_card} elevation={false}>\n                        <Typography variant=\"h4\" component=\"h4\" className={classes.font_style}>\n                            {\n                                \"Completed \" + (completedTasks.length) + \" tasks today..\"\n                            }\n                        </Typography>\n                    </Paper>\n                    <Grid className={classes.root} container spacing={5}>\n                    {\n                        completedTasks.map(renderCompletedTask)\n                    }\n                    </Grid>\n                </div>\n            );\n        }\n    }\n\n    function renderCompletedTask(task) {\n        let taskJson = JSON.parse(task.payload);\n        return (\n            <Grid key={taskJson.id} item>\n                <Slide direction=\"left\" in=\"true\" mountOnEnter unmountOnExit>\n                    <Card className={classes.completed_card} raised={true}>\n                        <CardContent className={classes.completed_card_content}>\n                            <Typography variant=\"h5\" component=\"h2\" className={classes.font_style}>\n                                {taskJson.title}\n                            </Typography>\n                        </CardContent>\n                        <CardActions>\n                            <Chip size=\"small\" className={classes.font_style} label={taskJson.category} />\n                        </CardActions>\n                    </Card>\n                </Slide>\n            </Grid>\n        );\n    }\n\n    const isToday = (someDate) => {\n        const today = new Date()\n        var parts = someDate.split('-')\n        var mydate = new Date(parts[0], parts[1] - 1, parts[2]); \n        return mydate.getDate() == today.getDate() &&\n            mydate.getMonth() == today.getMonth() &&\n            mydate.getFullYear() == today.getFullYear()\n    }\n\n    const filterTodaysTasks = (allTodos) => {\n        var todaystasks = allTodos.filter(function(t) {\n                        return isToday(JSON.parse(t.payload).deadline);\n                    });\n\n        return todaystasks;\n    }\n\n    const filterCompletedTasks = (todaysTodos) => {\n        var completedTasks = todaysTodos.filter(function(t) {\n                        return JSON.parse(t.payload).status == \"Completed\";\n                    });\n\n        return completedTasks;\n    }\n\n    function displayCompleted(allTodos) {\n        let todaysTasks = filterTodaysTasks(allTodos)\n        let completedTodaysTasks = filterCompletedTasks(todaysTasks)\n        return (\n            renderCompletedTasks(completedTodaysTasks)\n        )\n    }\n\n    return <div className=\"task-list\">\n        {\n            displayCompleted(props.allTodos)\n        }\n    </div>;\n}","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as TodoActions from '../actions'\nimport TodayCompleted from '../components/tasks/todayscompleted'\nimport { getAllTodos } from '../selectors'\n\nconst mapStateToProps = state => ({\n  allTodos: getAllTodos(state)\n})\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n    ...bindActionCreators(TodoActions, dispatch)\n  }\n}\n\nconst TodayCompletedPlan = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodayCompleted)\n\nexport default TodayCompletedPlan","import React, { Component } from 'react';\n\nimport TodayContainer from '../containers/TodayContainer';\nimport TodayCompletedContainer from '../containers/TodayCompletedContainer';\n\nexport default class Today extends Component {\n    render() {\n        return (\n            <div>\n                <TodayContainer></TodayContainer>\n                <TodayCompletedContainer></TodayCompletedContainer>\n            </div>\n        )\n    }\n}","import React, { useState } from 'react';\nimport { Button, Form, Input, Row, ButtonGroup, Col, InputGroup, InputGroupAddon } from 'reactstrap';\nimport { Card, CardBody, Spinner} from 'reactstrap';\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport Switch from '@material-ui/core/Switch';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport MaterialTable from 'material-table';\nimport { forwardRef } from 'react';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport Grid from '@material-ui/core/Grid';\n\nimport { addTodo, editTodo, deleteTodo } from '../../actions';\nimport './plannerwidget.css';\n\nconst useStyles = makeStyles(theme => ({\n  fab: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    padding: theme.spacing(3, 2),\n  },\n}));\n\nexport default function PlannerWidget(props) {\n\n    const classes = useStyles();\n\n    const tableIcons = {\n        Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n        Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n        DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n        Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n        Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n        Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n        FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n        LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n        NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n        PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n        ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n        Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n        SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n        ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n        ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n    };\n\n    const [data, setData] = useState([]);\n    const [placeholdertitle, setPlaceholdertitle] = useState('Title');\n    const [loading, setLoading] = useState(false);\n    const [collapse, setCollapse] = useState(false);\n\n    function transformOneTask(task) {\n        var t_payload = JSON.parse(task.payload)\n        return {\n            id: task.id,\n            title: t_payload.title, \n            priority: t_payload.priority, \n            category: t_payload.category, \n            effort: \"\"+t_payload.effort, \n            deadline: \"\"+t_payload.deadline,\n            status: t_payload.status\n        }\n    }\n\n    function transformData(allTasks) {\n        var tr_data = allTasks.map(transformOneTask)\n\n        return tr_data;\n    }\n\n    function toggle() {\n      setCollapse(!collapse)\n    }\n\n    function handleTitleChange(event) {\n        setData({...data, title: event.target.value})\n    }\n\n    function handleFollowupChange(event) {\n        setData({...data, followup: event.target.checked})\n    }\n\n    function onPriorityBtnClick(priority) {\n        setData({...data, priority})\n    }\n\n    function onEffortBtnClick(effort) {\n        setData({...data, effort})\n    }\n\n    function onCatBtnClick(category) {\n        setData({...data, category})\n    }\n\n    function handleDeadlineChange(event) {\n        setData({...data, deadline: event.target.value})\n    }\n\n    function formatDate(date) {\n      var dateStr = date.toString()\n      if(date.toString().length < 12) return date\n\n      var d = date.getDate();\n      var m = date.getMonth()+1;\n      var y = date.getFullYear();\n\n      var formattedDate = y+\"-\"+(m <= 9 ? '0' + m : m)+\"-\"+(d <= 9 ? '0' + d : d)\n      console.log(\"Formatted: \"+formattedDate)\n      return formattedDate\n    }\n\n    function getCurrentDate() {\n      var curDate = new Date()\n      return curDate\n    }\n\n    Date.prototype.toJSON = function () {\n      var timezoneOffsetInHours = -(this.getTimezoneOffset() / 60); //UTC minus local time\n      var sign = timezoneOffsetInHours >= 0 ? '+' : '-';\n      var leadingZero = (Math.abs(timezoneOffsetInHours) < 10) ? '0' : '';\n    \n      //It's a bit unfortunate that we need to construct a new Date instance \n      //(we don't want _this_ Date instance to be modified)\n      var correctedDate = new Date(this.getFullYear(), this.getMonth(), \n          this.getDate(), this.getHours(), this.getMinutes(), this.getSeconds(), \n          this.getMilliseconds());\n      correctedDate.setHours(this.getHours() + timezoneOffsetInHours);\n      var iso = correctedDate.toISOString().replace('Z', '');\n    \n      return iso + sign + leadingZero + Math.abs(timezoneOffsetInHours).toString() + ':00';\n    }\n\n    function handleSubmit(event) {\n      setLoading(true)\n      data.status = \"Pending\";\n      if(!data.hasOwnProperty('deadline')) {\n          data.deadline = formatDate(getCurrentDate())\n      }\n\n      if(data.followup == true) {\n          data.effort = 0.1\n      }\n\n      event.preventDefault();\n      var input = JSON.stringify(data);\n\n      console.log(input)\n\n      props.dispatch(addTodo(input))\n\n      setLoading(false)\n      setData({\n          'title':'',\n          'deadline':formatDate(getCurrentDate()),\n          'status': '',\n          'followup': false\n      })\n    }\n\n    function renderAddTaskButton() {\n      return (\n        <div>\n          <center>\n            <Fab className=\"btn\" color='secondary' size=\"small\" aria-label=\"add\">\n              <AddIcon color=\"white\" onClick={toggle} />\n            </Fab>\n\n            <Modal isOpen={collapse} size=\"lg\">\n              <Form onSubmit={handleSubmit}>\n                <ModalHeader>Add Task</ModalHeader>\n                <ModalBody>\n                  <Card outline color=\"secondary\">\n                    <CardBody>\n                      <Row>\n                        <Col>\n                            <Input className=\"TaskField\" type=\"text\" name=\"taskTitle\" id=\"taskTitle\" placeholder={placeholdertitle}\n                            value={data.title} onChange={handleTitleChange} />\n                        </Col>\n                      </Row>\n                      <br />\n                      <Row>\n                        <Col>\n                          <Switch\n                              onChange={handleFollowupChange}\n                              value=\"followup\"\n                              color=\"primary\"\n                          />\n                          Is Follow-up task?\n                        </Col>\n                      </Row>\n                      <br />\n                      <Row>\n                        <Col>\n                          <ButtonGroup >\n                            <Button color=\"secondary\" className=\"TaskField\" outline disabled>takes</Button>\n                            <Button color=\"info\" outline onClick={() => onEffortBtnClick(1)} active={data.effort === 1} disabled={data.followup}>1</Button>\n                            <Button color=\"info\" outline onClick={() => onEffortBtnClick(2)} active={data.effort === 2} disabled={data.followup}>2</Button>\n                            <Button color=\"info\" outline onClick={() => onEffortBtnClick(3)} active={data.effort === 3} disabled={data.followup}>3</Button>\n                            <Button color=\"info\" outline onClick={() => onEffortBtnClick(4)} active={data.effort === 4} disabled={data.followup}>4</Button>\n                            <Button color=\"info\" outline onClick={() => onEffortBtnClick(5)} active={data.effort === 5} disabled={data.followup}>5</Button>\n                            <Button color=\"info\" outline onClick={() => onEffortBtnClick(6)} active={data.effort === 6} disabled={data.followup}>6</Button>\n                            <Button color=\"secondary\" className=\"TaskField\" outline disabled>hours</Button>\n                          </ButtonGroup>\n                        </Col>\n                        <Col>\n                          <InputGroup>\n                            <InputGroupAddon className=\"TaskField\" addonType=\"prepend\">complete it by</InputGroupAddon>\n                            <Input className=\"TaskField\" type=\"date\" name=\"taskDeadline\" id=\"taskDeadline\" defaultValue={formatDate(getCurrentDate())}\n                            value={data.deadline} onChange={handleDeadlineChange}\n                            />\n                          </InputGroup>\n                        </Col>\n                      </Row>\n                      <br />\n                      <Row>\n                        <Col>\n                          <ButtonGroup>\n                            <Button color=\"secondary\" className=\"TaskField\" outline disabled>priority</Button>\n                            <Button color=\"danger\" outline onClick={() => onPriorityBtnClick(\"High\")} active={data.priority === \"High\"}>High</Button>\n                            <Button color=\"warning\" outline onClick={() => onPriorityBtnClick(\"Medium\")} active={data.priority === \"Medium\"}>Medium</Button>\n                            <Button color=\"info\" outline onClick={() => onPriorityBtnClick(\"Low\")} active={data.priority === \"Low\"}>Low</Button>\n                          </ButtonGroup>\n                        </Col>\n\n                        <Col>\n                          <ButtonGroup>\n                            <Button color=\"secondary\" className=\"TaskField\" outline disabled>category</Button>\n                            <Button color=\"danger\" outline onClick={() => onCatBtnClick(\"Work\")} active={data.category === \"Work\"}>Work</Button>\n                            <Button color=\"warning\" outline onClick={() => onCatBtnClick(\"Home\")} active={data.category === \"Home\"}>Home</Button>\n                            <Button color=\"info\" outline onClick={() => onCatBtnClick(\"Personal\")} active={data.category === \"Personal\"}>Personal</Button>\n                          </ButtonGroup>\n                        </Col>\n                        </Row>\n                    </CardBody> \n                  </Card>\n                </ModalBody>\n                <ModalFooter className=\"float-left\">\n                  {loading ? <Spinner color=\"primary\" className=\"SubmitButton\" /> : <Button color=\"primary\" size=\"lg\" className=\"SubmitButton\" >Submit</Button>}\n                  {' '}\n                  <Button color=\"danger\" size=\"lg\" onClick={toggle}>Close</Button>\n                </ModalFooter>\n              </Form>\n            </Modal>\n          </center>\n        </div>\n      )\n    }\n\n  function renderAllTasks(allTasks) {\n      var tr_data = transformData(allTasks)\n\n      const table_data = {\n          columns: [\n            { title: 'Title', field: 'title' },\n            { title: 'Priority', field: 'priority', \n              lookup: { 'High': \"High\", 'Medium': \"Medium\", 'Low': \"Low\" } },\n            { title: 'Category', field: 'category',\n              lookup: { 'Work': \"Work\", 'Home': \"Home\", 'Personal': \"Personal\" }},\n            { title: 'Effort', field: 'effort', filtering: false },\n            { title: 'Deadline', field: 'deadline', type: 'date', filtering: false },\n            { title: 'Status', field: 'status',\n              lookup: { 'Pending': \"Pending\", 'InProgress': \"InProgress\", 'Completed': \"Completed\" }},\n          ],\n          data: tr_data,\n        };\n\n        return (\n          <MaterialTable\n            title=\"\"\n            columns={table_data.columns}\n            data={table_data.data}\n            icons={tableIcons}\n            options={\n              {\n                  headerStyle: {\n                      background: 'lightgray',\n                      color: '#213969'\n                  },\n                  search: false,\n                  toolbar: false,\n                  filtering: true,\n                  actionsColumnIndex: -1,\n                  paging: false,\n                  maxBodyHeight: 1000\n              }\n            }\n            editable={{\n              isEditable: rowData => rowData.status != 'Completed',\n              onRowUpdate: (newData, oldData) =>\n                new Promise(resolve => {\n                  setTimeout(() => {\n                    resolve();\n                    editTask(oldData.id, newData)\n                  }, 600);\n                }),\n              onRowDelete: oldData =>\n                new Promise(resolve => {\n                  setTimeout(() => {\n                    resolve();\n                    deleteTask(oldData.id)\n                  }, 600);\n                }),\n            }}\n            actions={[\n              rowData => ({\n                icon: 'check',\n                tooltip: 'Complete task',\n                onClick: (event, rowData) => \n                  new Promise(resolve => {\n                    setTimeout(() => {\n                      resolve();\n                      rowData.status = 'Completed'\n                      completeTask(rowData.id, rowData)\n                    }, 600);\n                  }),\n                disabled: rowData.status == 'Completed'\n              })\n            ]}\n          />\n        );\n    }\n\n    function completeTask(id, payload) {\n      var jsonPayload = JSON.stringify(payload)\n      props.dispatch(editTodo(id, jsonPayload))\n    }\n\n    function editTask(id, payload) {\n        payload.deadline = formatDate(payload.deadline)\n        var jsonPayload = JSON.stringify(payload)\n        props.dispatch(editTodo(id, jsonPayload))\n    }\n\n    function deleteTask(id) {\n        props.dispatch(deleteTodo(id))\n    }\n\n    return (<div className=\"task-list\">\n        <Grid justify='space-between' container className={classes.root}>\n          <Grid item>\n            <Typography variant=\"h4\" component=\"h4\">\n              You have {\n                props.allTodos.filter(function(t) {\n                  return JSON.parse(t.payload).status != 'Completed';\n                }).length\n              } open tasks.\n            </Typography>\n          </Grid>\n          <Grid item>\n            { \n              renderAddTaskButton()\n            }\n          </Grid>\n        </Grid>\n        {\n            renderAllTasks(props.allTodos)\n        }\n    </div>)\n}","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as TodoActions from '../actions'\nimport PlannerWidget from '../components/tasks/plannerwidget'\nimport { getAllTodos } from '../selectors'\n\nconst mapStateToProps = state => ({\n  allTodos: getAllTodos(state)\n})\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n    ...bindActionCreators(TodoActions, dispatch)\n  }\n}\n\nconst AllTodoList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PlannerWidget)\n\nexport default AllTodoList","import React, { Component } from 'react';\nimport PlannerWidgetContainer from '../containers/PlannerWidgetContainer';\n\nexport default class Planner extends Component {\n    render() {\n        return (\n            <div>\n                <PlannerWidgetContainer></PlannerWidgetContainer>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\n\nexport default class Past extends Component {\n    render() {\n        return (\n            <center>\n            <div>\n                This is past.\n            </div>\n            </center>\n        )\n    }\n}","import React, { Component } from 'react';\n\nexport default class Settings extends Component {\n    render() {\n        return (\n            <center>\n            <div>\n                Settings.\n            </div>\n            </center>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Switch, Route, HashRouter, Redirect } from 'react-router-dom';\nimport Today from './today';\nimport Planner from './planner';\nimport Past from './past';\nimport Settings from './settings';\n\nexport default class Main extends Component {\n\n    render() {\n        return (\n            <div className=\"content\">\n                <Switch>\n                    <Route path=\"/today\" component={Today}/>\n                    <Route path=\"/planner\" component={Planner}/>\n                    <Route path=\"/past\" component={Past}/>\n                    <Route path=\"/settings\" component={Settings}/>\n                    <Redirect exact from=\"/\" to=\"planner\" />\n                </Switch>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/header';\nimport Main from './components/main';\n\nclass App extends Component {\n  render() {\n    return (\n      <div id=\"colorlib-page\">\n        <div id=\"container-wrap\">\n          <Header></Header>\n          <Main></Main>\n      \t</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import {\n    ADD_TODO,\n    EDIT_TODO,\n    DELETE_TODO,\n    COMPLETE_TODO,\n    COMPLETE_ALL_TODOS,\n    CLEAR_COMPLETED\n  } from '../constants/ActionTypes'\n\nconst initialState = []\n\nexport default function todos(state = initialState, action) {\n    switch (action.type) {\n        case ADD_TODO:\n            return [\n                ...state,\n                {\n                    id: state.reduce((maxId, todo) => Math.max(todo.id, maxId), -1) + 1,\n                    payload: action.payload\n                }\n            ]\n        case EDIT_TODO:\n            return state.map(todo =>\n                todo.id === action.id ?\n                    { ...todo, payload: action.payload } :\n                    todo\n                )\n        case DELETE_TODO:\n            return state.filter(todo =>\n                todo.id !== action.id\n                )\n        default:\n            return state\n    }\n}","import { combineReducers } from 'redux'\nimport todos from './todos'\n\nconst rootReducer = combineReducers({\n    todos\n})\n\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { HashRouter } from 'react-router-dom';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\nimport rootReducer from './reducers'\nimport './index.css';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst store = createStore(persistedReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\nconst persistor = persistStore(store)\n\nReactDOM.render(\n  (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <HashRouter>\n          <App />\n        </HashRouter>\n      </PersistGate>\n    </Provider>),\n  document.getElementById('root')\n);\n"],"sourceRoot":""}