{"version":3,"sources":["components/tasks/todaysplan.jsx","components/header.jsx","constants/ActionTypes.js","actions/index.js","selectors/index.js","containers/TodayContainer.js","components/today.jsx","components/tasks/plannerwidget.jsx","containers/PlannerWidgetContainer.js","components/planner.jsx","components/past.jsx","components/settings.jsx","components/main.jsx","App.js","reducers/todos.js","reducers/index.js","index.js"],"names":["property","mapping","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","setState","react_default","a","createElement","Navbar","dark","expand","style","background","NavbarBrand","href","className","NavbarToggler","onClick","Collapse","navbar","Nav","NavLink","to","tag","RRNavLink","Component","ADD_TODO","EDIT_TODO","DELETE_TODO","addTodo","payload","type","types","editTodo","id","deleteTodo","completeTodo","completeAllTodos","clearCompleted","useStyles","makeStyles","theme","title_paper","backgroundColor","blue","padding","spacing","card","width","open_tasks_card","completed_tasks_card","grey","color","green","completed_card","completed_card_content","height","card_content","card_action","justifyContent","title","fontSize","avatar_red","red","avatar_blue","avatar_orange","orange","button_start","button_complete","margin","marginLeft","expandOpen","transform","root","StyledAvatar","withStyles","default","_ref","classes","other","objectWithoutProperties","Avatar","assign","aria-label","getAllTodos","createSelector","todos","TodaysPlan","connect","allTodos","dispatch","objectSpread","bindActionCreators","TodoActions","renderTasks","todaysOpenTasks","todaysTasks","timeLeft","timeLeftAtWork","length","isMorning","isAfterWork","getTitle","reorderedTasks","openTasks","dayVal","isBeforeWork","workTasks","reorder","getTasksByCategory","homeTasks","personalTasks","Array","prototype","push","apply","reorderTasks","renderOpenTasksTitle","Grid","container","map","renderTask","inprogressTasks","getTasksByStatus","pendingTasks","inprogress_high","getTasksByPriority","inprogress_med","inprogress_low","pending_high","pending_med","pending_low","tasks","category","filter","t","JSON","parse","priority","status","justify","item","Typography","variant","component","Chip","size","label","Date","toDateString","renderCompletedTasks","completedTasks","Paper","elevation","renderCompletedTask","task","taskJson","key","Slide","direction","in","mountOnEnter","unmountOnExit","Card","raised","CardContent","CardActions","renderCategoryAvatar","avatar_color","Computer_default","Home_default","EmojiPeople_default","renderPriorityChip","priority_color","renderEffortChip","effort","effort_color","effort_suffix","converted_effort","icon","AccessTime_default","handleActionChange","newStatus","deadline","date","toString","d","getDate","m","getMonth","getFullYear","formatDate","jsonPayload","stringify","console","log","editTask","CardHeader","avatar","action","align","disableSpacing","Button","startIcon","PlayArrow_default","Pause_default","AssignmentTurnedIn_default","renderAction","now","morningTime","setHours","setMinutes","getTime","workStartTime","eveningTime","getHours","filterTodaysTasks","someDate","today","parts","split","mydate","isToday","filterCompletedTasks","todaysTodos","filterOpenTasks","openTodaysTasks","completedTodaysTasks","displayAll","Today","TodayContainer","fab","AllTodoList","tableIcons","Add","forwardRef","ref","AddBox_default","Check","Check_default","Clear","Clear_default","Delete","DeleteOutline_default","DetailPanel","ChevronRight_default","Edit","Edit_default","Export","SaveAlt_default","Filter","FilterList_default","FirstPage","FirstPage_default","LastPage","LastPage_default","NextPage","PreviousPage","ChevronLeft_default","ResetSearch","Search","Search_default","SortArrow","ArrowUpward_default","ThirdStateCheck","Remove_default","ViewColumn","ViewColumn_default","_useState","useState","_useState2","slicedToArray","data","setData","_useState3","_useState4","placeholdertitle","_useState5","_useState6","loading","setLoading","_useState7","_useState8","collapse","setCollapse","transformOneTask","t_payload","handleTitleChange","event","target","value","handleFollowupChange","followup","checked","onPriorityBtnClick","onEffortBtnClick","onCatBtnClick","handleDeadlineChange","formattedDate","getCurrentDate","handleSubmit","hasOwnProperty","preventDefault","input","toJSON","timezoneOffsetInHours","getTimezoneOffset","sign","leadingZero","Math","abs","correctedDate","getMinutes","getSeconds","getMilliseconds","toISOString","replace","Fab","Add_default","Modal","Form","onSubmit","ModalHeader","ModalBody","es_Card","outline","CardBody","Row","Col","Input","name","placeholder","onChange","Switch","ButtonGroup","es_Button","disabled","active","InputGroup","InputGroupAddon","addonType","defaultValue","ModalFooter","Spinner","allTasks","table_data","columns","field","lookup","High","Medium","Low","Work","Home","Personal","filtering","Pending","InProgress","Completed","transformData","dist_default","icons","options","headerStyle","search","toolbar","actionsColumnIndex","paging","maxBodyHeight","editable","isEditable","rowData","onRowUpdate","newData","oldData","Promise","resolve","setTimeout","onRowDelete","actions","tooltip","completeTask","renderAllTasks","Planner","PlannerWidgetContainer","Past","Settings","Main","react_router","path","exact","from","App","header_Header","main_Main","initialState","rootReducer","combineReducers","arguments","undefined","concat","toConsumableArray","reduce","maxId","todo","max","persistConfig","storage","persistedReducer","persistReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","ReactDOM","render","es","integration_react","react_router_dom","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.fbf3d5cc.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid';\nimport Chip from '@material-ui/core/Chip';\nimport { red, lightBlue, grey, green } from '@material-ui/core/colors';\nimport { blue } from '@material-ui/core/colors';\nimport { orange } from '@material-ui/core/colors';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WorkIcon from '@material-ui/icons/Work';\nimport EmojiPeopleIcon from '@material-ui/icons/EmojiPeople';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport LabelIcon from '@material-ui/icons/Label';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport ComputerIcon from '@material-ui/icons/Computer';\nimport clsx from 'clsx';\nimport Grow from '@material-ui/core/Grow';\nimport Slide from '@material-ui/core/Slide';\nimport Divider from '@material-ui/core/Divider';\nimport { addTodo, editTodo, deleteTodo } from '../../actions';\nimport './todaysplan.css';\nimport { identifier } from '@babel/types';\n\nconst useStyles = makeStyles(theme => ({\n        title_paper: {\n            backgroundColor: blue[50],\n            padding: theme.spacing(3, 2),\n        },\n        card: {\n            width: 270,\n            // height: 300\n        },\n        open_tasks_card: {\n            backgroundColor: blue[50],\n            padding: theme.spacing(3, 2),\n        },\n        completed_tasks_card: {\n            backgroundColor: grey[200],\n            color: green[900],\n            padding: theme.spacing(3, 2),\n        },\n        completed_card: {\n            width: 270,\n            // background: 'linear-gradient(45deg, #045494 30%, #045494 90%)',\n            background: green[900],\n            color: 'white'\n        },\n        completed_card_content: {\n            // backgroundColor: grey[100],\n            height: 80,\n            // textAlign: \"center\"\n        },\n        card_content: {\n            backgroundColor: grey[100],\n            height: 110,\n            // textAlign: \"center\"\n        },\n        card_action: {\n            justifyContent: \"flex-start\"\n        },\n        title: {\n            fontSize: 14,\n        },\n        avatar_red: {\n            backgroundColor: red[500],\n        },\n        avatar_blue: {\n            backgroundColor: blue[500],\n        },\n        avatar_orange: {\n            backgroundColor: orange[500],\n        },\n        button_start: {\n            // margin: theme.spacing(1),\n            // background: '#01579b',\n            color: 'black',\n        },\n        button_complete: {\n            margin: theme.spacing(1),\n            background: '#388e3c',\n            color: 'white',\n        },\n        expand: {\n            // transform: 'rotate(0deg)',\n            marginLeft: 'auto',\n            // transition: theme.transitions.create('transform', {\n            //     duration: theme.transitions.duration.shortest,\n            // }),\n        },\n        expandOpen: {\n            transform: 'rotate(180deg)',\n        },\n        root: {\n            padding: theme.spacing(3, 2),\n        },\n    }));\n\nconst styledBy = (property, mapping) => props => mapping[props[property]];\n\nconst StyledAvatar = withStyles({\n    root: {\n        backgroundColor: styledBy('color', {\n            default: red[500],\n            blue: blue[500],\n            red: red[500],\n            green: green[500],\n            orange: orange[500],\n        })\n    },\n})(({ classes, color, ...other }) => <Avatar aria-label=\"recipe\" className={classes.root} {...other} />);\n\n\nexport default function Today(props) {\n    const classes = useStyles();\n\n    function renderTasks(todaysOpenTasks) {\n        var title = getTitle(todaysOpenTasks)\n        if(todaysOpenTasks.length > 0) {\n            var reorderedTasks = reorderTasks(todaysOpenTasks)\n            return (\n                <div>\n                    { renderOpenTasksTitle(title) }\n                    <Grid className={classes.root} container spacing={5}>\n                    {\n                        reorderedTasks.map(renderTask)\n                    }\n                    </Grid>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    { renderOpenTasksTitle(title) }\n                </div>\n            );\n        }\n    }\n\n    function reorderTasks(openTasks) {\n        var reorderedTasks = []\n\n        var dayVal = getDayVal()\n\n        var workTasks = reorder(getTasksByCategory(openTasks, \"Work\"))\n        var homeTasks = reorder(getTasksByCategory(openTasks, \"Home\"))\n        var personalTasks = reorder(getTasksByCategory(openTasks, \"Personal\"))\n        if(dayVal == \"AT_WORK\") {\n            Array.prototype.push.apply(reorderedTasks, workTasks);\n            Array.prototype.push.apply(reorderedTasks, homeTasks);\n            Array.prototype.push.apply(reorderedTasks, personalTasks);\n        } else if(dayVal == \"BEFORE_WORK\") {\n            Array.prototype.push.apply(reorderedTasks, homeTasks);\n            Array.prototype.push.apply(reorderedTasks, workTasks);\n            Array.prototype.push.apply(reorderedTasks, personalTasks);\n        } else {\n            Array.prototype.push.apply(reorderedTasks, personalTasks);\n            Array.prototype.push.apply(reorderedTasks, homeTasks);\n            Array.prototype.push.apply(reorderedTasks, workTasks);\n        }\n\n        return reorderedTasks\n    }\n\n    function reorder(openTasks) {\n        var reorderedTasks = []\n\n        var inprogressTasks = getTasksByStatus(openTasks, \"InProgress\")\n        var pendingTasks = getTasksByStatus(openTasks, \"Pending\")\n\n        var inprogress_high = getTasksByPriority(inprogressTasks, \"High\")\n        var inprogress_med = getTasksByPriority(inprogressTasks, \"Medium\")\n        var inprogress_low = getTasksByPriority(inprogressTasks, \"Low\")\n\n        var pending_high = getTasksByPriority(pendingTasks, \"High\")\n        var pending_med = getTasksByPriority(pendingTasks, \"Medium\")\n        var pending_low = getTasksByPriority(pendingTasks, \"Low\")\n\n        Array.prototype.push.apply(reorderedTasks, inprogress_high);\n        Array.prototype.push.apply(reorderedTasks, inprogress_med);\n        Array.prototype.push.apply(reorderedTasks, inprogress_low);\n        Array.prototype.push.apply(reorderedTasks, pending_high);\n        Array.prototype.push.apply(reorderedTasks, pending_med);\n        Array.prototype.push.apply(reorderedTasks, pending_low);\n\n        return reorderedTasks\n    }\n\n    function getDayVal() {\n        var dayVal\n        if(isBeforeWork()) dayVal = 'BEFORE_WORK'\n        else if(isAfterWork()) dayVal = 'AFTER_WORK'\n        else dayVal = 'AT_WORK'\n\n        return dayVal\n    }\n\n    function getTasksByCategory(tasks, category) {\n        var filteredTasks = tasks.filter(function(t) {\n            return JSON.parse(t.payload).category == category;\n        });\n\n        return filteredTasks;\n    }\n\n    function getTasksByPriority(tasks, priority) {\n        var filteredTasks = tasks.filter(function(t) {\n            return JSON.parse(t.payload).priority == priority;\n        });\n\n        return filteredTasks;\n    }\n\n    function getTasksByStatus(tasks, status) {\n        var filteredTasks = tasks.filter(function(t) {\n            return JSON.parse(t.payload).status == status;\n        });\n\n        return filteredTasks;\n    }\n\n    function getTitle(todaysTasks) {\n        var title\n        var timeLeft = timeLeftAtWork()\n        if(todaysTasks.length > 0) {\n            title = \"You have \" + (todaysTasks.length) + \" tasks for the day.\"\n            if(timeLeft > 0) {\n                title += \" \" + timeLeft + \" hours left at work.\"\n            }\n        } else if(isMorning()) {\n            title = \"Good Morning! Plan your day for today and get started.\"\n        } else if (isAfterWork()) {\n            title = \"Good job at work. No open tasks now!\"\n        } else {\n            title = timeLeftAtWork() +\" hours left at work. Everything done for now!\"\n        }\n        return title\n    }\n\n    function renderOpenTasksTitle(title) {\n        return (\n            <Grid justify='space-between' container className={classes.title_paper}>\n                <Grid item>\n                    <Typography variant=\"h4\" component=\"h4\">\n                        { title }\n                    </Typography>\n                </Grid>\n                <Grid item>\n                    { renderDate() }\n                </Grid>\n            </Grid>\n            // <Paper className={classes.title_paper} elevation={false}>\n            //     <Typography variant=\"h4\" component=\"h4\">\n            //         {title} { renderDate() }\n            //     </Typography>\n            // </Paper>\n        );\n    }\n\n    function renderDate() {\n        return (\n            <Chip size=\"large\" color=\"primary\" label={new Date().toDateString()} />\n        );\n    }\n\n    function renderCompletedTasks(completedTasks) {\n        if(completedTasks.length > 0) {\n            return (\n                <div>\n                <Paper className={classes.completed_tasks_card} elevation={false}>\n                    <Typography variant=\"h4\" component=\"h4\">\n                        {\n                            \"Completed \" + (completedTasks.length) + \" tasks today..\"\n                        }\n                    </Typography>\n                </Paper>\n                <Grid className={classes.root} container spacing={5}>\n                {\n                    completedTasks.map(renderCompletedTask)\n                }\n                </Grid>\n                </div>\n            );\n        }\n    }\n\n    function renderCompletedTask(task) {\n        let taskJson = JSON.parse(task.payload);\n        return (\n            <Grid key={taskJson.id} item>\n                <Slide direction=\"left\" in=\"true\" mountOnEnter unmountOnExit>\n            <Card className={classes.completed_card} raised={true}>\n                <CardContent className={classes.completed_card_content}>\n                    <Typography variant=\"h5\" component=\"h2\">\n                        {taskJson.title}\n                    </Typography>\n                </CardContent>\n                <CardActions>\n                    <Chip size=\"small\"  label={taskJson.category} />\n                </CardActions>\n          </Card>\n          </Slide>\n          </Grid>\n        );\n    }\n\n    function renderCategoryAvatar(category) {\n        var avatar_color\n        if(category == 'Work') {\n            avatar_color='blue'\n            return (\n                <StyledAvatar color={avatar_color}> <ComputerIcon color=\"action\" /> </StyledAvatar>\n            );\n        }\n        if(category == 'Home') {\n            avatar_color='orange'\n            return (\n                <StyledAvatar color={avatar_color}> <HomeIcon color=\"action\" /> </StyledAvatar>\n            );\n        }\n        if(category == 'Personal') {\n            avatar_color='green'\n            return (\n                <StyledAvatar color={avatar_color}> <EmojiPeopleIcon color=\"action\" /> </StyledAvatar>\n            );\n        }\n    }\n\n    function renderCategoryChip(category) {\n        var avatar_color\n        if(category == 'Work') {\n            avatar_color='red'\n            return (\n                <LabelIcon color=\"{avatar_color}\"> Work </LabelIcon>\n            );\n        }\n        if(category == 'Home') {\n            avatar_color='orange'\n            return (\n                <StyledAvatar color={avatar_color}> <HomeIcon color=\"action\" /> </StyledAvatar>\n            );\n        }\n        if(category == 'Personal') {\n            avatar_color='blue'\n            return (\n                <StyledAvatar color={avatar_color}> <EmojiPeopleIcon color=\"action\" /> </StyledAvatar>\n            );\n        }\n    }\n\n    function renderPriorityChip(priority) {\n        var priority_color\n        if(priority == 'High') {\n            priority_color='secondary'\n        }\n        if(priority == 'Medium') {\n            priority_color='primary'\n        }\n        if(priority == 'Low') {\n            priority_color='default'\n        }\n        return (\n            <Chip variant=\"outlined\" size=\"small\"  color={priority_color} label={priority + \" Priority\"} />\n        );\n    }\n\n    function renderEffortChip(effort) {\n        var effort_color\n        var effort_suffix = 'hours'\n        var converted_effort = effort\n        if(effort >= 3) {\n            effort_color='secondary'\n        }\n        if(effort < 3) {\n            effort_color='primary'\n        }\n        if(effort < 1) {\n            effort_color='default'\n        }\n        \n        if(effort == 1) effort_suffix = 'hour'\n        if(effort < 1) {\n            converted_effort = effort * 60\n            effort_suffix = 'minutes'\n        }\n\n        return (\n            <Chip size=\"small\" color={effort_color} icon={<AccessTimeIcon />} label={converted_effort + \" \" + effort_suffix} />\n        );\n    }\n\n    function handleActionChange(id, newStatus, task) {\n        task.status = newStatus\n        editTask(id, task)\n    }\n\n    function renderAction(id, status, task) {\n        if(status == \"Pending\") {\n            return (\n                <Button \n                className={classes.button_start}\n                startIcon={<PlayArrowIcon />}\n                onClick={() => handleActionChange(id, \"InProgress\", task)}\n                >\n                    Start\n                </Button>\n            );\n        }\n        if(status == \"InProgress\") {\n            return (\n                <Grid container justify='space-between'>\n                    <Button \n                        className={classes.button_start}\n                        startIcon={<PauseIcon />}\n                        onClick={() => handleActionChange(id, \"Pending\", task)}>\n                        Pause\n                    </Button>\n                    <Button \n                        className={classes.button_start}\n                        startIcon={<AssignmentTurnedInIcon />}\n                        onClick={() => handleActionChange(id, \"Completed\", task)}>\n                        Complete\n                    </Button>\n                </Grid>\n            );\n        }\n    }\n\n    function renderTask(task) {\n        let taskJson = JSON.parse(task.payload);\n        return (\n            <Grid key={task.id} item>\n                 <Slide direction=\"right\" in=\"true\" mountOnEnter unmountOnExit>\n            <Card className={classes.card} raised={true}>\n                <CardHeader \n                    avatar={renderCategoryAvatar(taskJson.category)}\n                    action={\n                        <div align=\"right\">\n                        {renderEffortChip(taskJson.effort)}\n                        <br />\n                        {renderPriorityChip(taskJson.priority)}\n                        </div>\n                      }\n                    // title={\n                    //     renderPriorityChip(taskJson.priority)\n                    // }\n                    // subheader={renderEffortChip(taskJson.effort)\n                        // <Chip variant=\"outlined\" color=\"primary\" label={taskJson.effort + \" hours\"} />\n                    // }\n                />\n                <CardContent className={classes.card_content}>\n                    <Typography variant=\"h5\" component=\"h2\">\n                        {taskJson.title}\n                    </Typography>\n                </CardContent>\n                {/* <CardActions className={classes.card_action}>\n                    {\n                        renderAction(taskJson.status)\n                    }\n                </CardActions> */}\n                <CardActions disableSpacing>\n                    {\n                        renderAction(task.id, taskJson.status, taskJson)\n                    }\n                    {/* <Chip className={classes.expand} variant=\"outlined\" size=\"small\"  color=\"secondary\" label=\"Complete\" /> */}\n                </CardActions>\n            </Card>\n            </Slide>\n            </Grid>\n        );\n    }\n\n    function formatDate(date) {\n        if(date.toString().length < 12) return date\n  \n        var d = date.getDate();\n        var m = date.getMonth()+1;\n        var y = date.getFullYear();\n  \n        var formattedDate = y+\"-\"+(m <= 9 ? '0' + m : m)+\"-\"+(d <= 9 ? '0' + d : d)\n        return formattedDate\n    }\n\n    function editTask(id, payload) {\n        payload.deadline = formatDate(payload.deadline)\n        var jsonPayload = JSON.stringify(payload)\n        console.log(\"Dispatching: \"+jsonPayload+\", id: \"+id)\n        props.dispatch(editTodo(id, jsonPayload))\n    }\n\n    const isMorning = () => {\n        var now = new Date();\n        var morningTime = new Date();\n        morningTime.setHours(11); morningTime.setMinutes(59);\n        return now.getTime() <= morningTime.getTime()\n    }\n\n    const isBeforeWork = () => {\n        var now = new Date();\n        var workStartTime = new Date();\n        workStartTime.setHours(9); workStartTime.setMinutes(0);\n        return now.getTime() < workStartTime.getTime()\n    }\n\n    const isAfterWork = () => {\n        var now = new Date();\n        var eveningTime = new Date();\n        eveningTime.setHours(17); eveningTime.setMinutes(0);\n        return now.getTime() >= eveningTime.getTime()\n    }\n\n    const timeLeftAtWork = () => {\n        var now = new Date();\n        var eveningTime = new Date();\n        eveningTime.setHours(17); eveningTime.setMinutes(0);\n        return eveningTime.getHours() - now.getHours()\n    }\n\n    const isToday = (someDate) => {\n        const today = new Date()\n        var parts = someDate.split('-')\n        var mydate = new Date(parts[0], parts[1] - 1, parts[2]); \n        return mydate.getDate() == today.getDate() &&\n            mydate.getMonth() == today.getMonth() &&\n            mydate.getFullYear() == today.getFullYear()\n    }\n\n    const filterTodaysTasks = (allTodos) => {\n        var todaystasks = allTodos.filter(function(t) {\n                        return isToday(JSON.parse(t.payload).deadline);\n                    });\n\n        return todaystasks;\n    }\n\n    const isCompleted = (status) => {\n        return status == \"Completed\"\n    }\n\n    const filterCompletedTasks = (todaysTodos) => {\n        var completedTasks = todaysTodos.filter(function(t) {\n                        return isCompleted(JSON.parse(t.payload).status);\n                    });\n\n        return completedTasks;\n    }\n\n    const filterOpenTasks = (todaysTodos) => {\n        var completedTasks = todaysTodos.filter(function(t) {\n                        return JSON.parse(t.payload).status != \"Completed\";\n                    });\n\n        return completedTasks;\n    }\n\n    function displayAll(allTodos) {\n        let todaysTasks = filterTodaysTasks(props.allTodos)\n        let openTodaysTasks = filterOpenTasks(todaysTasks)\n        let completedTodaysTasks = filterCompletedTasks(todaysTasks)\n        return [\n            renderTasks(openTodaysTasks),\n            renderCompletedTasks(completedTodaysTasks)\n        ]\n    }\n\n    return <div className=\"task-list\">\n        {\n            displayAll(props.allTodos)\n        }\n    </div>;\n}","import React, { Component } from 'react';\nimport { Navbar, NavbarToggler, NavbarBrand, Nav, NavLink, Collapse } from 'reactstrap';\nimport { NavLink as RRNavLink } from 'react-router-dom';\n\nexport default class Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            isOpen: false\n        };\n    }\n    toggle() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n\n    render() {\n        return (\n            <Navbar dark expand=\"md\" style={{background:\"#213969\"}}>\n                <NavbarBrand href=\"/\"><span className=\"siteTitle\">ONE PLANNER</span></NavbarBrand>\n                <NavbarToggler onClick={this.toggle} />\n                <Collapse isOpen={this.state.isOpen} navbar>\n                    <Nav className=\"siteNav\" navbar>\n                        <NavLink to=\"/today\" tag={RRNavLink}>today's plan</NavLink>\n                        <NavLink to=\"/planner\" tag={RRNavLink}>planner</NavLink>\n                        <NavLink to=\"/past\" tag={RRNavLink}>past</NavLink>\n                        <NavLink to=\"/settings\" tag={RRNavLink}>settings</NavLink>\n                    </Nav>\n                </Collapse>\n            </Navbar>\n        )\n    }\n}","export const ADD_TODO = 'ADD_TODO'\nexport const EDIT_TODO = 'EDIT_TODO'\nexport const DELETE_TODO = 'DELETE_TODO'\nexport const COMPLETE_TODO = 'COMPLETE_TODO'\nexport const COMPLETE_ALL_TODOS = 'COMPLETE_ALL_TODOS'\nexport const CLEAR_COMPLETED = 'CLEAR_COMPLETED'\nexport const SHOW_TODO = 'SHOW_TODO'","import * as types from '../constants/ActionTypes'\n\nexport const addTodo = payload => ({ type: types.ADD_TODO, payload })\nexport const editTodo = (id, payload) => ({ type: types.EDIT_TODO, id, payload })\nexport const deleteTodo = id => ({ type: types.DELETE_TODO, id })\nexport const completeTodo = id => ({ type: types.COMPLETE_TODO, id })\nexport const completeAllTodos = () => ({ type: types.COMPLETE_ALL_TODOS })\nexport const clearCompleted = () => ({ type: types.CLEAR_COMPLETED })","import {createSelector} from 'reselect';\n\nconst getTodos = state => state.todos\n\nexport const getAllTodos = createSelector(\n    [getTodos],\n    (todos) => {\n        return todos\n    }\n)","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as TodoActions from '../actions'\nimport Today from '../components/tasks/todaysplan'\nimport { getAllTodos } from '../selectors'\n\nconst mapStateToProps = state => ({\n  allTodos: getAllTodos(state)\n})\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n    ...bindActionCreators(TodoActions, dispatch)\n  }\n}\n\nconst TodaysPlan = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Today)\n\nexport default TodaysPlan","import React, { Component } from 'react';\n\nimport TodayContainer from '../containers/TodayContainer';\n\nexport default class Today extends Component {\n    render() {\n        return (\n            <div>\n                <TodayContainer></TodayContainer>\n            </div>\n        )\n    }\n}","import React, { useState } from 'react';\nimport { Button, Form, Input, Row, ButtonGroup, Col, InputGroup, InputGroupAddon } from 'reactstrap';\nimport { Card, CardBody, Spinner} from 'reactstrap';\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport Switch from '@material-ui/core/Switch';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport MaterialTable from 'material-table';\nimport { forwardRef } from 'react';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport Grid from '@material-ui/core/Grid';\n\nimport { addTodo, editTodo, deleteTodo } from '../../actions';\nimport './plannerwidget.css';\n\nconst useStyles = makeStyles(theme => ({\n  fab: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    padding: theme.spacing(3, 2),\n  },\n}));\n\nexport default function PlannerWidget(props) {\n\n    const classes = useStyles();\n\n    const tableIcons = {\n        Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n        Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n        DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n        Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n        Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n        Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n        FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n        LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n        NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n        PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n        ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n        Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n        SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n        ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n        ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n    };\n\n    const [data, setData] = useState([]);\n    const [placeholdertitle, setPlaceholdertitle] = useState('Title');\n    const [loading, setLoading] = useState(false);\n    const [collapse, setCollapse] = useState(false);\n\n    function transformOneTask(task) {\n        var t_payload = JSON.parse(task.payload)\n        return {\n            id: task.id,\n            title: t_payload.title, \n            priority: t_payload.priority, \n            category: t_payload.category, \n            effort: \"\"+t_payload.effort, \n            deadline: \"\"+t_payload.deadline,\n            status: t_payload.status\n        }\n    }\n\n    function transformData(allTasks) {\n        var tr_data = allTasks.map(transformOneTask)\n\n        return tr_data;\n    }\n\n    function toggle() {\n      setCollapse(!collapse)\n    }\n\n    function handleTitleChange(event) {\n        setData({...data, title: event.target.value})\n    }\n\n    function handleFollowupChange(event) {\n        setData({...data, followup: event.target.checked})\n    }\n\n    function onPriorityBtnClick(priority) {\n        setData({...data, priority})\n    }\n\n    function onEffortBtnClick(effort) {\n        setData({...data, effort})\n    }\n\n    function onCatBtnClick(category) {\n        setData({...data, category})\n    }\n\n    function handleDeadlineChange(event) {\n        setData({...data, deadline: event.target.value})\n    }\n\n    function formatDate(date) {\n      var dateStr = date.toString()\n      if(date.toString().length < 12) return date\n\n      var d = date.getDate();\n      var m = date.getMonth()+1;\n      var y = date.getFullYear();\n\n      var formattedDate = y+\"-\"+(m <= 9 ? '0' + m : m)+\"-\"+(d <= 9 ? '0' + d : d)\n      console.log(\"Formatted: \"+formattedDate)\n      return formattedDate\n    }\n\n    function getCurrentDate() {\n      var curDate = new Date()\n      return curDate\n    }\n\n    Date.prototype.toJSON = function () {\n      var timezoneOffsetInHours = -(this.getTimezoneOffset() / 60); //UTC minus local time\n      var sign = timezoneOffsetInHours >= 0 ? '+' : '-';\n      var leadingZero = (Math.abs(timezoneOffsetInHours) < 10) ? '0' : '';\n    \n      //It's a bit unfortunate that we need to construct a new Date instance \n      //(we don't want _this_ Date instance to be modified)\n      var correctedDate = new Date(this.getFullYear(), this.getMonth(), \n          this.getDate(), this.getHours(), this.getMinutes(), this.getSeconds(), \n          this.getMilliseconds());\n      correctedDate.setHours(this.getHours() + timezoneOffsetInHours);\n      var iso = correctedDate.toISOString().replace('Z', '');\n    \n      return iso + sign + leadingZero + Math.abs(timezoneOffsetInHours).toString() + ':00';\n    }\n\n    function handleSubmit(event) {\n      setLoading(true)\n      data.status = \"Pending\";\n      if(!data.hasOwnProperty('deadline')) {\n          data.deadline = formatDate(getCurrentDate())\n      }\n\n      if(data.followup == true) {\n          data.effort = 0.1\n      }\n\n      event.preventDefault();\n      var input = JSON.stringify(data);\n\n      console.log(input)\n\n      props.dispatch(addTodo(input))\n\n      setLoading(false)\n      setData({\n          'title':'',\n          'deadline':formatDate(getCurrentDate()),\n          'status': '',\n          'followup': false\n      })\n    }\n\n    function renderAddTaskButton() {\n      return (\n        <div>\n          <center>\n            <Fab className=\"btn\" color='secondary' size=\"small\" aria-label=\"add\">\n              <AddIcon color=\"white\" onClick={toggle} />\n            </Fab>\n\n            <Modal isOpen={collapse} size=\"lg\">\n              <Form onSubmit={handleSubmit}>\n                <ModalHeader>Add Task</ModalHeader>\n                <ModalBody>\n                  <Card outline color=\"secondary\">\n                    <CardBody>\n                      <Row>\n                        <Col>\n                            <Input className=\"TaskField\" type=\"text\" name=\"taskTitle\" id=\"taskTitle\" placeholder={placeholdertitle}\n                            value={data.title} onChange={handleTitleChange} />\n                        </Col>\n                      </Row>\n                      <br />\n                      <Row>\n                        <Col>\n                          <Switch\n                              onChange={handleFollowupChange}\n                              value=\"followup\"\n                              color=\"primary\"\n                          />\n                          Is Follow-up task?\n                        </Col>\n                      </Row>\n                      <br />\n                      <Row>\n                        <Col>\n                          <ButtonGroup >\n                            <Button color=\"secondary\" className=\"TaskField\" outline disabled>takes</Button>\n                            <Button color=\"info\" outline onClick={() => onEffortBtnClick(1)} active={data.effort === 1} disabled={data.followup}>1</Button>\n                            <Button color=\"info\" outline onClick={() => onEffortBtnClick(2)} active={data.effort === 2} disabled={data.followup}>2</Button>\n                            <Button color=\"info\" outline onClick={() => onEffortBtnClick(3)} active={data.effort === 3} disabled={data.followup}>3</Button>\n                            <Button color=\"info\" outline onClick={() => onEffortBtnClick(4)} active={data.effort === 4} disabled={data.followup}>4</Button>\n                            <Button color=\"info\" outline onClick={() => onEffortBtnClick(5)} active={data.effort === 5} disabled={data.followup}>5</Button>\n                            <Button color=\"info\" outline onClick={() => onEffortBtnClick(6)} active={data.effort === 6} disabled={data.followup}>6</Button>\n                            <Button color=\"secondary\" className=\"TaskField\" outline disabled>hours</Button>\n                          </ButtonGroup>\n                        </Col>\n                        <Col>\n                          <InputGroup>\n                            <InputGroupAddon className=\"TaskField\" addonType=\"prepend\">complete it by</InputGroupAddon>\n                            <Input className=\"TaskField\" type=\"date\" name=\"taskDeadline\" id=\"taskDeadline\" defaultValue={formatDate(getCurrentDate())}\n                            value={data.deadline} onChange={handleDeadlineChange}\n                            />\n                          </InputGroup>\n                        </Col>\n                      </Row>\n                      <br />\n                      <Row>\n                        <Col>\n                          <ButtonGroup>\n                            <Button color=\"secondary\" className=\"TaskField\" outline disabled>priority</Button>\n                            <Button color=\"danger\" outline onClick={() => onPriorityBtnClick(\"High\")} active={data.priority === \"High\"}>High</Button>\n                            <Button color=\"warning\" outline onClick={() => onPriorityBtnClick(\"Medium\")} active={data.priority === \"Medium\"}>Medium</Button>\n                            <Button color=\"info\" outline onClick={() => onPriorityBtnClick(\"Low\")} active={data.priority === \"Low\"}>Low</Button>\n                          </ButtonGroup>\n                        </Col>\n\n                        <Col>\n                          <ButtonGroup>\n                            <Button color=\"secondary\" className=\"TaskField\" outline disabled>category</Button>\n                            <Button color=\"danger\" outline onClick={() => onCatBtnClick(\"Work\")} active={data.category === \"Work\"}>Work</Button>\n                            <Button color=\"warning\" outline onClick={() => onCatBtnClick(\"Home\")} active={data.category === \"Home\"}>Home</Button>\n                            <Button color=\"info\" outline onClick={() => onCatBtnClick(\"Personal\")} active={data.category === \"Personal\"}>Personal</Button>\n                          </ButtonGroup>\n                        </Col>\n                        </Row>\n                    </CardBody> \n                  </Card>\n                </ModalBody>\n                <ModalFooter className=\"float-left\">\n                  {loading ? <Spinner color=\"primary\" className=\"SubmitButton\" /> : <Button color=\"primary\" size=\"lg\" className=\"SubmitButton\" >Submit</Button>}\n                  {' '}\n                  <Button color=\"danger\" size=\"lg\" onClick={toggle}>Close</Button>\n                </ModalFooter>\n              </Form>\n            </Modal>\n          </center>\n        </div>\n      )\n    }\n\n  function renderAllTasks(allTasks) {\n      var tr_data = transformData(allTasks)\n\n      const table_data = {\n          columns: [\n            { title: 'Title', field: 'title' },\n            { title: 'Priority', field: 'priority', \n              lookup: { 'High': \"High\", 'Medium': \"Medium\", 'Low': \"Low\" } },\n            { title: 'Category', field: 'category',\n              lookup: { 'Work': \"Work\", 'Home': \"Home\", 'Personal': \"Personal\" }},\n            { title: 'Effort', field: 'effort', filtering: false },\n            { title: 'Deadline', field: 'deadline', type: 'date', filtering: false },\n            { title: 'Status', field: 'status',\n              lookup: { 'Pending': \"Pending\", 'InProgress': \"InProgress\", 'Completed': \"Completed\" }},\n          ],\n          data: tr_data,\n        };\n\n        return (\n          <MaterialTable\n            title=\"\"\n            columns={table_data.columns}\n            data={table_data.data}\n            icons={tableIcons}\n            options={\n              {\n                  headerStyle: {\n                      background: 'lightgray',\n                      color: '#213969'\n                  },\n                  search: false,\n                  toolbar: false,\n                  filtering: true,\n                  actionsColumnIndex: -1,\n                  paging: false,\n                  maxBodyHeight: 1000\n              }\n            }\n            editable={{\n              isEditable: rowData => rowData.status != 'Completed',\n              onRowUpdate: (newData, oldData) =>\n                new Promise(resolve => {\n                  setTimeout(() => {\n                    resolve();\n                    editTask(oldData.id, newData)\n                  }, 600);\n                }),\n              onRowDelete: oldData =>\n                new Promise(resolve => {\n                  setTimeout(() => {\n                    resolve();\n                    deleteTask(oldData.id)\n                  }, 600);\n                }),\n            }}\n            actions={[\n              rowData => ({\n                icon: 'check',\n                tooltip: 'Complete task',\n                onClick: (event, rowData) => \n                  new Promise(resolve => {\n                    setTimeout(() => {\n                      resolve();\n                      rowData.status = 'Completed'\n                      completeTask(rowData.id, rowData)\n                    }, 600);\n                  }),\n                disabled: rowData.status == 'Completed'\n              })\n            ]}\n          />\n        );\n    }\n\n    function completeTask(id, payload) {\n      var jsonPayload = JSON.stringify(payload)\n      props.dispatch(editTodo(id, jsonPayload))\n    }\n\n    function editTask(id, payload) {\n        payload.deadline = formatDate(payload.deadline)\n        var jsonPayload = JSON.stringify(payload)\n        props.dispatch(editTodo(id, jsonPayload))\n    }\n\n    function deleteTask(id) {\n        props.dispatch(deleteTodo(id))\n    }\n\n    return (<div className=\"task-list\">\n        <Grid justify='space-between' container className={classes.root}>\n          <Grid item>\n            <Typography variant=\"h4\" component=\"h4\">\n              You have {\n                props.allTodos.filter(function(t) {\n                  return JSON.parse(t.payload).status != 'Completed';\n                }).length\n              } open tasks.\n            </Typography>\n          </Grid>\n          <Grid item>\n            { \n              renderAddTaskButton()\n            }\n          </Grid>\n        </Grid>\n        {\n            renderAllTasks(props.allTodos)\n        }\n    </div>)\n}","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as TodoActions from '../actions'\nimport PlannerWidget from '../components/tasks/plannerwidget'\nimport { getAllTodos } from '../selectors'\n\nconst mapStateToProps = state => ({\n  allTodos: getAllTodos(state)\n})\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n    ...bindActionCreators(TodoActions, dispatch)\n  }\n}\n\nconst AllTodoList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PlannerWidget)\n\nexport default AllTodoList","import React, { Component } from 'react';\nimport PlannerWidgetContainer from '../containers/PlannerWidgetContainer';\n\nexport default class Planner extends Component {\n    render() {\n        return (\n            <div>\n                <PlannerWidgetContainer></PlannerWidgetContainer>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\n\nexport default class Past extends Component {\n    render() {\n        return (\n            <center>\n            <div>\n                This is past.\n            </div>\n            </center>\n        )\n    }\n}","import React, { Component } from 'react';\n\nexport default class Settings extends Component {\n    render() {\n        return (\n            <center>\n            <div>\n                Settings.\n            </div>\n            </center>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Switch, Route, HashRouter, Redirect } from 'react-router-dom';\nimport Today from './today';\nimport Planner from './planner';\nimport Past from './past';\nimport Settings from './settings';\n\nexport default class Main extends Component {\n\n    render() {\n        return (\n            <div className=\"content\">\n                <Switch>\n                    <Route path=\"/today\" component={Today}/>\n                    <Route path=\"/planner\" component={Planner}/>\n                    <Route path=\"/past\" component={Past}/>\n                    <Route path=\"/settings\" component={Settings}/>\n                    <Redirect exact from=\"/\" to=\"planner\" />\n                </Switch>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/header';\nimport Main from './components/main';\n\nclass App extends Component {\n  render() {\n    return (\n      <div id=\"colorlib-page\">\n        <div id=\"container-wrap\">\n          <Header></Header>\n          <Main></Main>\n      \t</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import {\n    ADD_TODO,\n    EDIT_TODO,\n    DELETE_TODO,\n    COMPLETE_TODO,\n    COMPLETE_ALL_TODOS,\n    CLEAR_COMPLETED\n  } from '../constants/ActionTypes'\n\nconst initialState = []\n\nexport default function todos(state = initialState, action) {\n    switch (action.type) {\n        case ADD_TODO:\n            return [\n                ...state,\n                {\n                    id: state.reduce((maxId, todo) => Math.max(todo.id, maxId), -1) + 1,\n                    payload: action.payload\n                }\n            ]\n        case EDIT_TODO:\n            return state.map(todo =>\n                todo.id === action.id ?\n                    { ...todo, payload: action.payload } :\n                    todo\n                )\n        case DELETE_TODO:\n            return state.filter(todo =>\n                todo.id !== action.id\n                )\n        default:\n            return state\n    }\n}","import { combineReducers } from 'redux'\nimport todos from './todos'\n\nconst rootReducer = combineReducers({\n    todos\n})\n\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { HashRouter } from 'react-router-dom';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\nimport rootReducer from './reducers'\nimport './index.css';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst store = createStore(persistedReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\nconst persistor = persistStore(store)\n\nReactDOM.render(\n  (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <HashRouter>\n          <App />\n        </HashRouter>\n      </PersistGate>\n    </Provider>),\n  document.getElementById('root')\n);\n"],"sourceRoot":""}