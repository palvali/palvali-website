{"version":3,"sources":["components/tasks/todaysplan.jsx","components/header.jsx","constants/ActionTypes.js","actions/index.js","selectors/index.js","containers/TodayContainer.js","components/today.jsx","components/tasks/plannerwidget.jsx","containers/PlannerWidgetContainer.js","components/planner.jsx","components/past.jsx","components/settings.jsx","components/main.jsx","App.js","reducers/todos.js","reducers/index.js","index.js"],"names":["property","mapping","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","setState","react_default","a","createElement","Navbar","dark","expand","style","background","NavbarBrand","href","className","NavbarToggler","onClick","Collapse","navbar","Nav","NavLink","to","tag","RRNavLink","Component","ADD_TODO","EDIT_TODO","DELETE_TODO","addTodo","payload","type","types","editTodo","id","deleteTodo","completeTodo","completeAllTodos","clearCompleted","useStyles","makeStyles","theme","title_paper","backgroundColor","blue","padding","spacing","card","width","open_tasks_card","completed_tasks_card","grey","color","green","completed_card","completed_card_content","height","card_content","font_style","fontFamily","action_font_style","card_action","justifyContent","title","fontSize","avatar_red","red","avatar_blue","avatar_orange","orange","button_start","button_complete","margin","marginLeft","expandOpen","transform","root","StyledAvatar","withStyles","default","_ref","classes","other","objectWithoutProperties","Avatar","assign","aria-label","getAllTodos","createSelector","todos","TodaysPlan","connect","allTodos","dispatch","objectSpread","bindActionCreators","TodoActions","renderTasks","todaysOpenTasks","todaysTasks","timeLeft","timeLeftAtWork","length","numTasks","isAtWork","getTasksByCategory","isMorning","isAfterWork","getTitle","reorderedTasks","openTasks","dayVal","isBeforeWork","workTasks","reorder","homeTasks","personalTasks","Array","prototype","push","apply","reorderTasks","renderOpenTasksTitle","Grid","container","map","renderTask","inprogressTasks","getTasksByStatus","pendingTasks","inprogress_high","getTasksByPriority","inprogress_med","inprogress_low","pending_high","pending_med","pending_low","tasks","category","filter","t","JSON","parse","priority","status","justify","item","Typography","variant","component","Chip","size","label","Date","toDateString","renderCompletedTasks","completedTasks","Paper","elevation","renderCompletedTask","task","taskJson","key","Slide","direction","in","mountOnEnter","unmountOnExit","Card","raised","CardContent","CardActions","renderCategoryAvatar","avatar_color","Computer_default","Home_default","EmojiPeople_default","renderPriorityChip","priority_color","renderEffortChip","effort","effort_color","effort_suffix","converted_effort","icon","AccessTime_default","handleActionChange","newStatus","deadline","date","toString","d","getDate","m","getMonth","getFullYear","formatDate","jsonPayload","stringify","editTask","CardHeader","avatar","action","align","disableSpacing","Button","startIcon","PlayArrow_default","Pause_default","AssignmentTurnedIn_default","renderAction","now","morningTime","setHours","setMinutes","getTime","workStartTime","workEndTime","eveningTime","getHours","filterTodaysTasks","someDate","today","parts","split","mydate","isToday","filterCompletedTasks","todaysTodos","filterOpenTasks","openTodaysTasks","completedTodaysTasks","displayAll","Today","TodayContainer","fab","AllTodoList","tableIcons","Add","forwardRef","ref","AddBox_default","Check","Check_default","Clear","Clear_default","Delete","DeleteOutline_default","DetailPanel","ChevronRight_default","Edit","Edit_default","Export","SaveAlt_default","Filter","FilterList_default","FirstPage","FirstPage_default","LastPage","LastPage_default","NextPage","PreviousPage","ChevronLeft_default","ResetSearch","Search","Search_default","SortArrow","ArrowUpward_default","ThirdStateCheck","Remove_default","ViewColumn","ViewColumn_default","_useState","useState","_useState2","slicedToArray","data","setData","_useState3","_useState4","placeholdertitle","_useState5","_useState6","loading","setLoading","_useState7","_useState8","collapse","setCollapse","transformOneTask","t_payload","handleTitleChange","event","target","value","handleFollowupChange","followup","checked","onPriorityBtnClick","onEffortBtnClick","onCatBtnClick","handleDeadlineChange","formattedDate","console","log","getCurrentDate","handleSubmit","hasOwnProperty","preventDefault","input","toJSON","timezoneOffsetInHours","getTimezoneOffset","sign","leadingZero","Math","abs","correctedDate","getMinutes","getSeconds","getMilliseconds","toISOString","replace","Fab","Add_default","Modal","Form","onSubmit","ModalHeader","ModalBody","es_Card","outline","CardBody","Row","Col","Input","name","placeholder","onChange","Switch","ButtonGroup","es_Button","disabled","active","InputGroup","InputGroupAddon","addonType","defaultValue","ModalFooter","Spinner","allTasks","table_data","columns","field","lookup","High","Medium","Low","Work","Home","Personal","filtering","Pending","InProgress","Completed","transformData","dist_default","icons","options","headerStyle","search","toolbar","actionsColumnIndex","paging","maxBodyHeight","editable","isEditable","rowData","onRowUpdate","newData","oldData","Promise","resolve","setTimeout","onRowDelete","actions","tooltip","completeTask","renderAllTasks","Planner","PlannerWidgetContainer","Past","Settings","Main","react_router","path","exact","from","App","header_Header","main_Main","initialState","rootReducer","combineReducers","arguments","undefined","concat","toConsumableArray","reduce","maxId","todo","max","persistConfig","storage","persistedReducer","persistReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","ReactDOM","render","es","integration_react","react_router_dom","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.68abce63.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid';\nimport Chip from '@material-ui/core/Chip';\nimport { red, lightBlue, grey, green } from '@material-ui/core/colors';\nimport { blue } from '@material-ui/core/colors';\nimport { orange } from '@material-ui/core/colors';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WorkIcon from '@material-ui/icons/Work';\nimport EmojiPeopleIcon from '@material-ui/icons/EmojiPeople';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport LabelIcon from '@material-ui/icons/Label';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport ComputerIcon from '@material-ui/icons/Computer';\nimport clsx from 'clsx';\nimport Grow from '@material-ui/core/Grow';\nimport Slide from '@material-ui/core/Slide';\nimport Divider from '@material-ui/core/Divider';\nimport { addTodo, editTodo, deleteTodo } from '../../actions';\nimport './todaysplan.css';\nimport { identifier } from '@babel/types';\n\nconst useStyles = makeStyles(theme => ({\n        title_paper: {\n            backgroundColor: blue[50],\n            padding: theme.spacing(3, 2),\n        },\n        card: {\n            width: 270,\n            // height: 300\n        },\n        open_tasks_card: {\n            backgroundColor: blue[50],\n            padding: theme.spacing(3, 2),\n        },\n        completed_tasks_card: {\n            backgroundColor: grey[200],\n            color: green[900],\n            padding: theme.spacing(3, 2),\n        },\n        completed_card: {\n            width: 270,\n            // background: 'linear-gradient(45deg, #045494 30%, #045494 90%)',\n            background: green[900],\n            color: 'white'\n        },\n        completed_card_content: {\n            // backgroundColor: grey[100],\n            height: 80,\n            // textAlign: \"center\"\n        },\n        card_content: {\n            backgroundColor: grey[100],\n            height: 110,\n            // fontFamily: ['Karla','sans-serif']\n        },\n        font_style: {\n            fontFamily: ['Montserrat','sans-serif']\n        },\n        action_font_style: {\n            fontFamily: ['Karla','sans-serif']\n        },\n        card_action: {\n            justifyContent: \"flex-start\"\n        },\n        title: {\n            fontSize: 14,\n        },\n        avatar_red: {\n            backgroundColor: red[500],\n        },\n        avatar_blue: {\n            backgroundColor: blue[500],\n        },\n        avatar_orange: {\n            backgroundColor: orange[500],\n        },\n        button_start: {\n            // margin: theme.spacing(1),\n            // background: '#01579b',\n            color: 'black',\n        },\n        button_complete: {\n            margin: theme.spacing(1),\n            background: '#388e3c',\n            color: 'white',\n        },\n        expand: {\n            // transform: 'rotate(0deg)',\n            marginLeft: 'auto',\n            // transition: theme.transitions.create('transform', {\n            //     duration: theme.transitions.duration.shortest,\n            // }),\n        },\n        expandOpen: {\n            transform: 'rotate(180deg)',\n        },\n        root: {\n            padding: theme.spacing(3, 2),\n        },\n    }));\n\nconst styledBy = (property, mapping) => props => mapping[props[property]];\n\nconst StyledAvatar = withStyles({\n    root: {\n        backgroundColor: styledBy('color', {\n            default: red[500],\n            blue: blue[500],\n            red: red[500],\n            green: green[500],\n            orange: orange[500],\n        })\n    },\n})(({ classes, color, ...other }) => <Avatar aria-label=\"recipe\" className={classes.root} {...other} />);\n\n\nexport default function Today(props) {\n    const classes = useStyles();\n\n    function renderTasks(todaysOpenTasks) {\n        var title = getTitle(todaysOpenTasks)\n        if(todaysOpenTasks.length > 0) {\n            var reorderedTasks = reorderTasks(todaysOpenTasks)\n            return (\n                <div>\n                    { renderOpenTasksTitle(title) }\n                    <Grid className={classes.root} container spacing={5}>\n                    {\n                        reorderedTasks.map(renderTask)\n                    }\n                    </Grid>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    { renderOpenTasksTitle(title) }\n                </div>\n            );\n        }\n    }\n\n    function reorderTasks(openTasks) {\n        var reorderedTasks = []\n\n        var dayVal = getDayVal()\n\n        var workTasks = reorder(getTasksByCategory(openTasks, \"Work\"))\n        var homeTasks = reorder(getTasksByCategory(openTasks, \"Home\"))\n        var personalTasks = reorder(getTasksByCategory(openTasks, \"Personal\"))\n        if(dayVal == \"AT_WORK\") {\n            Array.prototype.push.apply(reorderedTasks, workTasks);\n            Array.prototype.push.apply(reorderedTasks, homeTasks);\n            Array.prototype.push.apply(reorderedTasks, personalTasks);\n        } else if(dayVal == \"BEFORE_WORK\") {\n            Array.prototype.push.apply(reorderedTasks, homeTasks);\n            Array.prototype.push.apply(reorderedTasks, workTasks);\n            Array.prototype.push.apply(reorderedTasks, personalTasks);\n        } else {\n            Array.prototype.push.apply(reorderedTasks, personalTasks);\n            Array.prototype.push.apply(reorderedTasks, homeTasks);\n            Array.prototype.push.apply(reorderedTasks, workTasks);\n        }\n\n        return reorderedTasks\n    }\n\n    function reorder(openTasks) {\n        var reorderedTasks = []\n\n        var inprogressTasks = getTasksByStatus(openTasks, \"InProgress\")\n        var pendingTasks = getTasksByStatus(openTasks, \"Pending\")\n\n        var inprogress_high = getTasksByPriority(inprogressTasks, \"High\")\n        var inprogress_med = getTasksByPriority(inprogressTasks, \"Medium\")\n        var inprogress_low = getTasksByPriority(inprogressTasks, \"Low\")\n\n        var pending_high = getTasksByPriority(pendingTasks, \"High\")\n        var pending_med = getTasksByPriority(pendingTasks, \"Medium\")\n        var pending_low = getTasksByPriority(pendingTasks, \"Low\")\n\n        Array.prototype.push.apply(reorderedTasks, inprogress_high);\n        Array.prototype.push.apply(reorderedTasks, inprogress_med);\n        Array.prototype.push.apply(reorderedTasks, inprogress_low);\n        Array.prototype.push.apply(reorderedTasks, pending_high);\n        Array.prototype.push.apply(reorderedTasks, pending_med);\n        Array.prototype.push.apply(reorderedTasks, pending_low);\n\n        return reorderedTasks\n    }\n\n    function getDayVal() {\n        var dayVal\n        if(isBeforeWork()) dayVal = 'BEFORE_WORK'\n        else if(isAfterWork()) dayVal = 'AFTER_WORK'\n        else dayVal = 'AT_WORK'\n\n        return dayVal\n    }\n\n    function getTasksByCategory(tasks, category) {\n        var filteredTasks = tasks.filter(function(t) {\n            return JSON.parse(t.payload).category == category;\n        });\n\n        return filteredTasks;\n    }\n\n    function getTasksByPriority(tasks, priority) {\n        var filteredTasks = tasks.filter(function(t) {\n            return JSON.parse(t.payload).priority == priority;\n        });\n\n        return filteredTasks;\n    }\n\n    function getTasksByStatus(tasks, status) {\n        var filteredTasks = tasks.filter(function(t) {\n            return JSON.parse(t.payload).status == status;\n        });\n\n        return filteredTasks;\n    }\n\n    function getTitle(todaysTasks) {\n        var title\n        var timeLeft = timeLeftAtWork()\n        if(todaysTasks.length > 0) {\n            var numTasks = 0\n            title = \"You have \" + (todaysTasks.length) + \" tasks for the day.\"\n            if(isAtWork() && timeLeft > 0) {\n                numTasks = getTasksByCategory(todaysTasks, \"Work\").length\n                if (numTasks == 0) {\n                    title = \"Plan your day at work.\"\n                } else {\n                    title = \"You have \" + (numTasks)\n                    if(numTasks == 1) title += \" task at work.\"\n                    else title += \" tasks at work.\"\n                }\n                title += \" \" + timeLeft + \" hours left.\"\n            }\n        } else if(isMorning()) {\n            title = \"Good Morning! Plan your day for today and get started.\"\n        } else if (isAfterWork()) {\n            title = \"Good job at work. No open tasks now!\"\n        } else {\n            title = timeLeftAtWork() +\" hours left at work. Everything done for now!\"\n        }\n        return title\n    }\n\n    function renderOpenTasksTitle(title) {\n        return (\n            <Grid justify='space-between' container className={classes.title_paper}>\n                <Grid item>\n                    <Typography variant=\"h4\" component=\"h4\" className={classes.font_style}>\n                        { title }\n                    </Typography>\n                </Grid>\n                <Grid item>\n                    { renderDate() }\n                </Grid>\n            </Grid>\n        );\n    }\n\n    function renderDate() {\n        return (\n            <Chip size=\"medium\" color=\"primary\" className={classes.font_style} label={new Date().toDateString()} />\n        );\n    }\n\n    function renderCompletedTasks(completedTasks) {\n        if(completedTasks.length > 0) {\n            return (\n                <div>\n                <Paper className={classes.completed_tasks_card} elevation={false}>\n                    <Typography variant=\"h4\" component=\"h4\" className={classes.font_style}>\n                        {\n                            \"Completed \" + (completedTasks.length) + \" tasks today..\"\n                        }\n                    </Typography>\n                </Paper>\n                <Grid className={classes.root} container spacing={5}>\n                {\n                    completedTasks.map(renderCompletedTask)\n                }\n                </Grid>\n                </div>\n            );\n        }\n    }\n\n    function renderCompletedTask(task) {\n        let taskJson = JSON.parse(task.payload);\n        return (\n            <Grid key={taskJson.id} item>\n                <Slide direction=\"left\" in=\"true\" mountOnEnter unmountOnExit>\n            <Card className={classes.completed_card} raised={true}>\n                <CardContent className={classes.completed_card_content}>\n                    <Typography variant=\"h5\" component=\"h2\" className={classes.font_style}>\n                        {taskJson.title}\n                    </Typography>\n                </CardContent>\n                <CardActions>\n                    <Chip size=\"small\" className={classes.font_style} label={taskJson.category} />\n                </CardActions>\n          </Card>\n          </Slide>\n          </Grid>\n        );\n    }\n\n    function renderCategoryAvatar(category) {\n        var avatar_color\n        if(category == 'Work') {\n            avatar_color='blue'\n            return (\n                <StyledAvatar color={avatar_color}> <ComputerIcon color=\"action\" /> </StyledAvatar>\n            );\n        }\n        if(category == 'Home') {\n            avatar_color='orange'\n            return (\n                <StyledAvatar color={avatar_color}> <HomeIcon color=\"action\" /> </StyledAvatar>\n            );\n        }\n        if(category == 'Personal') {\n            avatar_color='green'\n            return (\n                <StyledAvatar color={avatar_color}> <EmojiPeopleIcon color=\"action\" /> </StyledAvatar>\n            );\n        }\n    }\n\n    function renderPriorityChip(priority) {\n        var priority_color\n        if(priority == 'High') {\n            priority_color='secondary'\n        }\n        if(priority == 'Medium') {\n            priority_color='primary'\n        }\n        if(priority == 'Low') {\n            priority_color='default'\n        }\n        return (\n            <Chip variant=\"outlined\" className={classes.font_style} size=\"small\"  color={priority_color} label={priority + \" Priority\"} />\n        );\n    }\n\n    function renderEffortChip(effort) {\n        var effort_color\n        var effort_suffix = 'hours'\n        var converted_effort = effort\n        if(effort >= 3) {\n            effort_color='secondary'\n        }\n        if(effort < 3) {\n            effort_color='primary'\n        }\n        if(effort < 1) {\n            effort_color='default'\n        }\n        \n        if(effort == 1) effort_suffix = 'hour'\n        if(effort < 1) {\n            converted_effort = effort * 60\n            effort_suffix = 'minutes'\n        }\n\n        return (\n            <Chip size=\"small\" className={classes.font_style} color={effort_color} icon={<AccessTimeIcon />} label={converted_effort + \" \" + effort_suffix} />\n        );\n    }\n\n    function handleActionChange(id, newStatus, task) {\n        task.status = newStatus\n        editTask(id, task)\n    }\n\n    function renderAction(id, status, task) {\n        if(status == \"Pending\") {\n            return (\n                <Button \n                className={classes.button_start}\n                startIcon={<PlayArrowIcon />}\n                onClick={() => handleActionChange(id, \"InProgress\", task)}\n                >\n                    <Typography className={classes.action_font_style}>\n                        Start\n                    </Typography>\n                </Button>\n            );\n        }\n        if(status == \"InProgress\") {\n            return (\n                <Grid container justify='space-between'>\n                    <Button \n                        className={classes.button_start}\n                        startIcon={<PauseIcon />}\n                        onClick={() => handleActionChange(id, \"Pending\", task)}>\n                            <Typography className={classes.action_font_style}>\n                                Pause\n                            </Typography>\n                    </Button>\n                    <Button \n                        className={classes.button_start}\n                        startIcon={<AssignmentTurnedInIcon />}\n                        onClick={() => handleActionChange(id, \"Completed\", task)}>\n                            <Typography className={classes.action_font_style}>\n                                Complete\n                            </Typography>\n                    </Button>\n                </Grid>\n            );\n        }\n    }\n\n    function renderTask(task) {\n        let taskJson = JSON.parse(task.payload);\n        return (\n            <Grid key={task.id} item>\n                <Slide direction=\"right\" in=\"true\" mountOnEnter unmountOnExit>\n                    <Card className={classes.card} raised={true}>\n                        <CardHeader \n                            avatar={renderCategoryAvatar(taskJson.category)}\n                            action={\n                                <div align=\"right\">\n                                    {renderEffortChip(taskJson.effort)}\n                                    <br />\n                                    {renderPriorityChip(taskJson.priority)}\n                                </div>\n                            }\n                        />\n                        <CardContent className={classes.card_content}>\n                            <Typography variant=\"h5\" component=\"h2\" className={classes.font_style}>\n                                {taskJson.title}\n                            </Typography>\n                        </CardContent>\n                        <CardActions disableSpacing>\n                        {\n                            renderAction(task.id, taskJson.status, taskJson)\n                        }\n                        </CardActions>\n                    </Card>\n                </Slide>\n            </Grid>\n        );\n    }\n\n    function formatDate(date) {\n        if(date.toString().length < 12) return date\n  \n        var d = date.getDate();\n        var m = date.getMonth()+1;\n        var y = date.getFullYear();\n  \n        var formattedDate = y+\"-\"+(m <= 9 ? '0' + m : m)+\"-\"+(d <= 9 ? '0' + d : d)\n        return formattedDate\n    }\n\n    function editTask(id, payload) {\n        payload.deadline = formatDate(payload.deadline)\n        var jsonPayload = JSON.stringify(payload)\n        props.dispatch(editTodo(id, jsonPayload))\n    }\n\n    const isMorning = () => {\n        var now = new Date();\n        var morningTime = new Date();\n        morningTime.setHours(11); morningTime.setMinutes(59);\n        return now.getTime() <= morningTime.getTime()\n    }\n\n    const isAtWork = () => {\n        var now = new Date();\n        var workStartTime = new Date();\n        workStartTime.setHours(9); workStartTime.setMinutes(0);\n        var workEndTime = new Date();\n        workEndTime.setHours(17); workEndTime.setMinutes(0);\n        return now.getTime() >= workStartTime.getTime() && now.getTime() <= workEndTime.getTime()\n    }\n\n    const isBeforeWork = () => {\n        var now = new Date();\n        var workStartTime = new Date();\n        workStartTime.setHours(9); workStartTime.setMinutes(0);\n        return now.getTime() < workStartTime.getTime()\n    }\n\n    const isAfterWork = () => {\n        var now = new Date();\n        var eveningTime = new Date();\n        eveningTime.setHours(17); eveningTime.setMinutes(0);\n        return now.getTime() >= eveningTime.getTime()\n    }\n\n    const timeLeftAtWork = () => {\n        var now = new Date();\n        var eveningTime = new Date();\n        eveningTime.setHours(17); eveningTime.setMinutes(0);\n        return eveningTime.getHours() - now.getHours()\n    }\n\n    const isToday = (someDate) => {\n        const today = new Date()\n        var parts = someDate.split('-')\n        var mydate = new Date(parts[0], parts[1] - 1, parts[2]); \n        return mydate.getDate() == today.getDate() &&\n            mydate.getMonth() == today.getMonth() &&\n            mydate.getFullYear() == today.getFullYear()\n    }\n\n    const filterTodaysTasks = (allTodos) => {\n        var todaystasks = allTodos.filter(function(t) {\n                        return isToday(JSON.parse(t.payload).deadline);\n                    });\n\n        return todaystasks;\n    }\n\n    const isCompleted = (status) => {\n        return status == \"Completed\"\n    }\n\n    const filterCompletedTasks = (todaysTodos) => {\n        var completedTasks = todaysTodos.filter(function(t) {\n                        return isCompleted(JSON.parse(t.payload).status);\n                    });\n\n        return completedTasks;\n    }\n\n    const filterOpenTasks = (todaysTodos) => {\n        var completedTasks = todaysTodos.filter(function(t) {\n                        return JSON.parse(t.payload).status != \"Completed\";\n                    });\n\n        return completedTasks;\n    }\n\n    function displayAll(allTodos) {\n        let todaysTasks = filterTodaysTasks(props.allTodos)\n        let openTodaysTasks = filterOpenTasks(todaysTasks)\n        let completedTodaysTasks = filterCompletedTasks(todaysTasks)\n        return [\n            renderTasks(openTodaysTasks),\n            renderCompletedTasks(completedTodaysTasks)\n        ]\n    }\n\n    return <div className=\"task-list\">\n        {\n            displayAll(props.allTodos)\n        }\n    </div>;\n}","import React, { Component } from 'react';\nimport { Navbar, NavbarToggler, NavbarBrand, Nav, NavLink, Collapse } from 'reactstrap';\nimport { NavLink as RRNavLink } from 'react-router-dom';\n\nexport default class Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            isOpen: false\n        };\n    }\n    toggle() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n\n    render() {\n        return (\n            <Navbar dark expand=\"md\" style={{background:\"#213969\"}}>\n                <NavbarBrand href=\"/\"><span className=\"siteTitle\">ONE PLANNER</span></NavbarBrand>\n                <NavbarToggler onClick={this.toggle} />\n                <Collapse isOpen={this.state.isOpen} navbar>\n                    <Nav className=\"siteNav\" navbar>\n                        <NavLink to=\"/today\" tag={RRNavLink}>today's plan</NavLink>\n                        <NavLink to=\"/planner\" tag={RRNavLink}>planner</NavLink>\n                        <NavLink to=\"/past\" tag={RRNavLink}>past</NavLink>\n                        <NavLink to=\"/settings\" tag={RRNavLink}>settings</NavLink>\n                    </Nav>\n                </Collapse>\n            </Navbar>\n        )\n    }\n}","export const ADD_TODO = 'ADD_TODO'\nexport const EDIT_TODO = 'EDIT_TODO'\nexport const DELETE_TODO = 'DELETE_TODO'\nexport const COMPLETE_TODO = 'COMPLETE_TODO'\nexport const COMPLETE_ALL_TODOS = 'COMPLETE_ALL_TODOS'\nexport const CLEAR_COMPLETED = 'CLEAR_COMPLETED'\nexport const SHOW_TODO = 'SHOW_TODO'","import * as types from '../constants/ActionTypes'\n\nexport const addTodo = payload => ({ type: types.ADD_TODO, payload })\nexport const editTodo = (id, payload) => ({ type: types.EDIT_TODO, id, payload })\nexport const deleteTodo = id => ({ type: types.DELETE_TODO, id })\nexport const completeTodo = id => ({ type: types.COMPLETE_TODO, id })\nexport const completeAllTodos = () => ({ type: types.COMPLETE_ALL_TODOS })\nexport const clearCompleted = () => ({ type: types.CLEAR_COMPLETED })","import {createSelector} from 'reselect';\n\nconst getTodos = state => state.todos\n\nexport const getAllTodos = createSelector(\n    [getTodos],\n    (todos) => {\n        return todos\n    }\n)","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as TodoActions from '../actions'\nimport Today from '../components/tasks/todaysplan'\nimport { getAllTodos } from '../selectors'\n\nconst mapStateToProps = state => ({\n  allTodos: getAllTodos(state)\n})\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n    ...bindActionCreators(TodoActions, dispatch)\n  }\n}\n\nconst TodaysPlan = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Today)\n\nexport default TodaysPlan","import React, { Component } from 'react';\n\nimport TodayContainer from '../containers/TodayContainer';\n\nexport default class Today extends Component {\n    render() {\n        return (\n            <div>\n                <TodayContainer></TodayContainer>\n            </div>\n        )\n    }\n}","import React, { useState } from 'react';\nimport { Button, Form, Input, Row, ButtonGroup, Col, InputGroup, InputGroupAddon } from 'reactstrap';\nimport { Card, CardBody, Spinner} from 'reactstrap';\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport Switch from '@material-ui/core/Switch';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport MaterialTable from 'material-table';\nimport { forwardRef } from 'react';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport Grid from '@material-ui/core/Grid';\n\nimport { addTodo, editTodo, deleteTodo } from '../../actions';\nimport './plannerwidget.css';\n\nconst useStyles = makeStyles(theme => ({\n  fab: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    padding: theme.spacing(3, 2),\n  },\n}));\n\nexport default function PlannerWidget(props) {\n\n    const classes = useStyles();\n\n    const tableIcons = {\n        Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n        Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n        DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n        Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n        Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n        Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n        FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n        LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n        NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n        PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n        ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n        Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n        SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n        ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n        ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n    };\n\n    const [data, setData] = useState([]);\n    const [placeholdertitle, setPlaceholdertitle] = useState('Title');\n    const [loading, setLoading] = useState(false);\n    const [collapse, setCollapse] = useState(false);\n\n    function transformOneTask(task) {\n        var t_payload = JSON.parse(task.payload)\n        return {\n            id: task.id,\n            title: t_payload.title, \n            priority: t_payload.priority, \n            category: t_payload.category, \n            effort: \"\"+t_payload.effort, \n            deadline: \"\"+t_payload.deadline,\n            status: t_payload.status\n        }\n    }\n\n    function transformData(allTasks) {\n        var tr_data = allTasks.map(transformOneTask)\n\n        return tr_data;\n    }\n\n    function toggle() {\n      setCollapse(!collapse)\n    }\n\n    function handleTitleChange(event) {\n        setData({...data, title: event.target.value})\n    }\n\n    function handleFollowupChange(event) {\n        setData({...data, followup: event.target.checked})\n    }\n\n    function onPriorityBtnClick(priority) {\n        setData({...data, priority})\n    }\n\n    function onEffortBtnClick(effort) {\n        setData({...data, effort})\n    }\n\n    function onCatBtnClick(category) {\n        setData({...data, category})\n    }\n\n    function handleDeadlineChange(event) {\n        setData({...data, deadline: event.target.value})\n    }\n\n    function formatDate(date) {\n      var dateStr = date.toString()\n      if(date.toString().length < 12) return date\n\n      var d = date.getDate();\n      var m = date.getMonth()+1;\n      var y = date.getFullYear();\n\n      var formattedDate = y+\"-\"+(m <= 9 ? '0' + m : m)+\"-\"+(d <= 9 ? '0' + d : d)\n      console.log(\"Formatted: \"+formattedDate)\n      return formattedDate\n    }\n\n    function getCurrentDate() {\n      var curDate = new Date()\n      return curDate\n    }\n\n    Date.prototype.toJSON = function () {\n      var timezoneOffsetInHours = -(this.getTimezoneOffset() / 60); //UTC minus local time\n      var sign = timezoneOffsetInHours >= 0 ? '+' : '-';\n      var leadingZero = (Math.abs(timezoneOffsetInHours) < 10) ? '0' : '';\n    \n      //It's a bit unfortunate that we need to construct a new Date instance \n      //(we don't want _this_ Date instance to be modified)\n      var correctedDate = new Date(this.getFullYear(), this.getMonth(), \n          this.getDate(), this.getHours(), this.getMinutes(), this.getSeconds(), \n          this.getMilliseconds());\n      correctedDate.setHours(this.getHours() + timezoneOffsetInHours);\n      var iso = correctedDate.toISOString().replace('Z', '');\n    \n      return iso + sign + leadingZero + Math.abs(timezoneOffsetInHours).toString() + ':00';\n    }\n\n    function handleSubmit(event) {\n      setLoading(true)\n      data.status = \"Pending\";\n      if(!data.hasOwnProperty('deadline')) {\n          data.deadline = formatDate(getCurrentDate())\n      }\n\n      if(data.followup == true) {\n          data.effort = 0.1\n      }\n\n      event.preventDefault();\n      var input = JSON.stringify(data);\n\n      console.log(input)\n\n      props.dispatch(addTodo(input))\n\n      setLoading(false)\n      setData({\n          'title':'',\n          'deadline':formatDate(getCurrentDate()),\n          'status': '',\n          'followup': false\n      })\n    }\n\n    function renderAddTaskButton() {\n      return (\n        <div>\n          <center>\n            <Fab className=\"btn\" color='secondary' size=\"small\" aria-label=\"add\">\n              <AddIcon color=\"white\" onClick={toggle} />\n            </Fab>\n\n            <Modal isOpen={collapse} size=\"lg\">\n              <Form onSubmit={handleSubmit}>\n                <ModalHeader>Add Task</ModalHeader>\n                <ModalBody>\n                  <Card outline color=\"secondary\">\n                    <CardBody>\n                      <Row>\n                        <Col>\n                            <Input className=\"TaskField\" type=\"text\" name=\"taskTitle\" id=\"taskTitle\" placeholder={placeholdertitle}\n                            value={data.title} onChange={handleTitleChange} />\n                        </Col>\n                      </Row>\n                      <br />\n                      <Row>\n                        <Col>\n                          <Switch\n                              onChange={handleFollowupChange}\n                              value=\"followup\"\n                              color=\"primary\"\n                          />\n                          Is Follow-up task?\n                        </Col>\n                      </Row>\n                      <br />\n                      <Row>\n                        <Col>\n                          <ButtonGroup >\n                            <Button color=\"secondary\" className=\"TaskField\" outline disabled>takes</Button>\n                            <Button color=\"info\" outline onClick={() => onEffortBtnClick(1)} active={data.effort === 1} disabled={data.followup}>1</Button>\n                            <Button color=\"info\" outline onClick={() => onEffortBtnClick(2)} active={data.effort === 2} disabled={data.followup}>2</Button>\n                            <Button color=\"info\" outline onClick={() => onEffortBtnClick(3)} active={data.effort === 3} disabled={data.followup}>3</Button>\n                            <Button color=\"info\" outline onClick={() => onEffortBtnClick(4)} active={data.effort === 4} disabled={data.followup}>4</Button>\n                            <Button color=\"info\" outline onClick={() => onEffortBtnClick(5)} active={data.effort === 5} disabled={data.followup}>5</Button>\n                            <Button color=\"info\" outline onClick={() => onEffortBtnClick(6)} active={data.effort === 6} disabled={data.followup}>6</Button>\n                            <Button color=\"secondary\" className=\"TaskField\" outline disabled>hours</Button>\n                          </ButtonGroup>\n                        </Col>\n                        <Col>\n                          <InputGroup>\n                            <InputGroupAddon className=\"TaskField\" addonType=\"prepend\">complete it by</InputGroupAddon>\n                            <Input className=\"TaskField\" type=\"date\" name=\"taskDeadline\" id=\"taskDeadline\" defaultValue={formatDate(getCurrentDate())}\n                            value={data.deadline} onChange={handleDeadlineChange}\n                            />\n                          </InputGroup>\n                        </Col>\n                      </Row>\n                      <br />\n                      <Row>\n                        <Col>\n                          <ButtonGroup>\n                            <Button color=\"secondary\" className=\"TaskField\" outline disabled>priority</Button>\n                            <Button color=\"danger\" outline onClick={() => onPriorityBtnClick(\"High\")} active={data.priority === \"High\"}>High</Button>\n                            <Button color=\"warning\" outline onClick={() => onPriorityBtnClick(\"Medium\")} active={data.priority === \"Medium\"}>Medium</Button>\n                            <Button color=\"info\" outline onClick={() => onPriorityBtnClick(\"Low\")} active={data.priority === \"Low\"}>Low</Button>\n                          </ButtonGroup>\n                        </Col>\n\n                        <Col>\n                          <ButtonGroup>\n                            <Button color=\"secondary\" className=\"TaskField\" outline disabled>category</Button>\n                            <Button color=\"danger\" outline onClick={() => onCatBtnClick(\"Work\")} active={data.category === \"Work\"}>Work</Button>\n                            <Button color=\"warning\" outline onClick={() => onCatBtnClick(\"Home\")} active={data.category === \"Home\"}>Home</Button>\n                            <Button color=\"info\" outline onClick={() => onCatBtnClick(\"Personal\")} active={data.category === \"Personal\"}>Personal</Button>\n                          </ButtonGroup>\n                        </Col>\n                        </Row>\n                    </CardBody> \n                  </Card>\n                </ModalBody>\n                <ModalFooter className=\"float-left\">\n                  {loading ? <Spinner color=\"primary\" className=\"SubmitButton\" /> : <Button color=\"primary\" size=\"lg\" className=\"SubmitButton\" >Submit</Button>}\n                  {' '}\n                  <Button color=\"danger\" size=\"lg\" onClick={toggle}>Close</Button>\n                </ModalFooter>\n              </Form>\n            </Modal>\n          </center>\n        </div>\n      )\n    }\n\n  function renderAllTasks(allTasks) {\n      var tr_data = transformData(allTasks)\n\n      const table_data = {\n          columns: [\n            { title: 'Title', field: 'title' },\n            { title: 'Priority', field: 'priority', \n              lookup: { 'High': \"High\", 'Medium': \"Medium\", 'Low': \"Low\" } },\n            { title: 'Category', field: 'category',\n              lookup: { 'Work': \"Work\", 'Home': \"Home\", 'Personal': \"Personal\" }},\n            { title: 'Effort', field: 'effort', filtering: false },\n            { title: 'Deadline', field: 'deadline', type: 'date', filtering: false },\n            { title: 'Status', field: 'status',\n              lookup: { 'Pending': \"Pending\", 'InProgress': \"InProgress\", 'Completed': \"Completed\" }},\n          ],\n          data: tr_data,\n        };\n\n        return (\n          <MaterialTable\n            title=\"\"\n            columns={table_data.columns}\n            data={table_data.data}\n            icons={tableIcons}\n            options={\n              {\n                  headerStyle: {\n                      background: 'lightgray',\n                      color: '#213969'\n                  },\n                  search: false,\n                  toolbar: false,\n                  filtering: true,\n                  actionsColumnIndex: -1,\n                  paging: false,\n                  maxBodyHeight: 1000\n              }\n            }\n            editable={{\n              isEditable: rowData => rowData.status != 'Completed',\n              onRowUpdate: (newData, oldData) =>\n                new Promise(resolve => {\n                  setTimeout(() => {\n                    resolve();\n                    editTask(oldData.id, newData)\n                  }, 600);\n                }),\n              onRowDelete: oldData =>\n                new Promise(resolve => {\n                  setTimeout(() => {\n                    resolve();\n                    deleteTask(oldData.id)\n                  }, 600);\n                }),\n            }}\n            actions={[\n              rowData => ({\n                icon: 'check',\n                tooltip: 'Complete task',\n                onClick: (event, rowData) => \n                  new Promise(resolve => {\n                    setTimeout(() => {\n                      resolve();\n                      rowData.status = 'Completed'\n                      completeTask(rowData.id, rowData)\n                    }, 600);\n                  }),\n                disabled: rowData.status == 'Completed'\n              })\n            ]}\n          />\n        );\n    }\n\n    function completeTask(id, payload) {\n      var jsonPayload = JSON.stringify(payload)\n      props.dispatch(editTodo(id, jsonPayload))\n    }\n\n    function editTask(id, payload) {\n        payload.deadline = formatDate(payload.deadline)\n        var jsonPayload = JSON.stringify(payload)\n        props.dispatch(editTodo(id, jsonPayload))\n    }\n\n    function deleteTask(id) {\n        props.dispatch(deleteTodo(id))\n    }\n\n    return (<div className=\"task-list\">\n        <Grid justify='space-between' container className={classes.root}>\n          <Grid item>\n            <Typography variant=\"h4\" component=\"h4\">\n              You have {\n                props.allTodos.filter(function(t) {\n                  return JSON.parse(t.payload).status != 'Completed';\n                }).length\n              } open tasks.\n            </Typography>\n          </Grid>\n          <Grid item>\n            { \n              renderAddTaskButton()\n            }\n          </Grid>\n        </Grid>\n        {\n            renderAllTasks(props.allTodos)\n        }\n    </div>)\n}","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as TodoActions from '../actions'\nimport PlannerWidget from '../components/tasks/plannerwidget'\nimport { getAllTodos } from '../selectors'\n\nconst mapStateToProps = state => ({\n  allTodos: getAllTodos(state)\n})\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n    ...bindActionCreators(TodoActions, dispatch)\n  }\n}\n\nconst AllTodoList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PlannerWidget)\n\nexport default AllTodoList","import React, { Component } from 'react';\nimport PlannerWidgetContainer from '../containers/PlannerWidgetContainer';\n\nexport default class Planner extends Component {\n    render() {\n        return (\n            <div>\n                <PlannerWidgetContainer></PlannerWidgetContainer>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\n\nexport default class Past extends Component {\n    render() {\n        return (\n            <center>\n            <div>\n                This is past.\n            </div>\n            </center>\n        )\n    }\n}","import React, { Component } from 'react';\n\nexport default class Settings extends Component {\n    render() {\n        return (\n            <center>\n            <div>\n                Settings.\n            </div>\n            </center>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Switch, Route, HashRouter, Redirect } from 'react-router-dom';\nimport Today from './today';\nimport Planner from './planner';\nimport Past from './past';\nimport Settings from './settings';\n\nexport default class Main extends Component {\n\n    render() {\n        return (\n            <div className=\"content\">\n                <Switch>\n                    <Route path=\"/today\" component={Today}/>\n                    <Route path=\"/planner\" component={Planner}/>\n                    <Route path=\"/past\" component={Past}/>\n                    <Route path=\"/settings\" component={Settings}/>\n                    <Redirect exact from=\"/\" to=\"planner\" />\n                </Switch>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/header';\nimport Main from './components/main';\n\nclass App extends Component {\n  render() {\n    return (\n      <div id=\"colorlib-page\">\n        <div id=\"container-wrap\">\n          <Header></Header>\n          <Main></Main>\n      \t</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import {\n    ADD_TODO,\n    EDIT_TODO,\n    DELETE_TODO,\n    COMPLETE_TODO,\n    COMPLETE_ALL_TODOS,\n    CLEAR_COMPLETED\n  } from '../constants/ActionTypes'\n\nconst initialState = []\n\nexport default function todos(state = initialState, action) {\n    switch (action.type) {\n        case ADD_TODO:\n            return [\n                ...state,\n                {\n                    id: state.reduce((maxId, todo) => Math.max(todo.id, maxId), -1) + 1,\n                    payload: action.payload\n                }\n            ]\n        case EDIT_TODO:\n            return state.map(todo =>\n                todo.id === action.id ?\n                    { ...todo, payload: action.payload } :\n                    todo\n                )\n        case DELETE_TODO:\n            return state.filter(todo =>\n                todo.id !== action.id\n                )\n        default:\n            return state\n    }\n}","import { combineReducers } from 'redux'\nimport todos from './todos'\n\nconst rootReducer = combineReducers({\n    todos\n})\n\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { HashRouter } from 'react-router-dom';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\nimport rootReducer from './reducers'\nimport './index.css';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst store = createStore(persistedReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\nconst persistor = persistStore(store)\n\nReactDOM.render(\n  (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <HashRouter>\n          <App />\n        </HashRouter>\n      </PersistGate>\n    </Provider>),\n  document.getElementById('root')\n);\n"],"sourceRoot":""}