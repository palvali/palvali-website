{"version":3,"sources":["components/tasks/todaysplan.jsx","components/header.jsx","constants/ActionTypes.js","actions/index.js","selectors/index.js","containers/TodayContainer.js","components/today.jsx","components/tasks/plannerwidget.jsx","containers/PlannerWidgetContainer.js","components/planner.jsx","components/past.jsx","components/settings.jsx","components/main.jsx","App.js","reducers/todos.js","reducers/index.js","index.js"],"names":["property","mapping","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","setState","react_default","a","createElement","Navbar","dark","expand","style","background","NavbarBrand","href","className","NavbarToggler","onClick","Collapse","navbar","Nav","NavLink","to","tag","RRNavLink","Component","ADD_TODO","EDIT_TODO","DELETE_TODO","addTodo","payload","type","types","editTodo","id","deleteTodo","completeTodo","completeAllTodos","clearCompleted","useStyles","makeStyles","theme","card","width","card_content","backgroundColor","grey","title","fontSize","avatar_red","red","avatar_blue","blue","avatar_orange","orange","root","padding","spacing","StyledAvatar","withStyles","default","_ref","classes","other","color","objectWithoutProperties","Avatar","assign","aria-label","getAllTodos","createSelector","todos","TodaysPlan","connect","allTodos","dispatch","actions","bindActionCreators","TodoActions","renderCategoryAvatar","category","avatar_color","Work_default","Home_default","EmojiPeople_default","renderPriorityChip","priority","priority_color","Chip","variant","label","renderEffortChip","effort","effort_color","effort_suffix","converted_effort","size","icon","AccessTime_default","renderTask","task","taskJson","JSON","parse","Grid","key","item","Card","raised","CardHeader","avatar","action","CardContent","Typography","component","todaysTasks","filterTodaysTasks","filter","t","someDate","today","Date","parts","split","mydate","getDate","getMonth","getFullYear","isToday","deadline","length","Paper","elevation","container","map","Today","TodayContainer","fab","margin","AllTodoList","objectSpread","tableIcons","Add","forwardRef","ref","AddBox_default","Check","Check_default","Clear","Clear_default","Delete","DeleteOutline_default","DetailPanel","ChevronRight_default","Edit","Edit_default","Export","SaveAlt_default","Filter","FilterList_default","FirstPage","FirstPage_default","LastPage","LastPage_default","NextPage","PreviousPage","ChevronLeft_default","ResetSearch","Search","Search_default","SortArrow","ArrowUpward_default","ThirdStateCheck","Remove_default","ViewColumn","ViewColumn_default","_useState","useState","_useState2","slicedToArray","data","setData","_useState3","_useState4","placeholdertitle","_useState5","_useState6","loading","setLoading","_useState7","_useState8","collapse","setCollapse","transformOneTask","t_payload","status","handleTitleChange","event","target","value","handleFollowupChange","followup","checked","onPriorityBtnClick","onEffortBtnClick","onCatBtnClick","handleDeadlineChange","handleSubmit","hasOwnProperty","toISOString","substr","preventDefault","input","stringify","editTask","justify","Fab","Add_default","Modal","Form","onSubmit","ModalHeader","ModalBody","es_Card","outline","CardBody","Row","Col","Input","name","placeholder","onChange","Switch","ButtonGroup","Button","disabled","active","InputGroup","InputGroupAddon","addonType","defaultValue","ModalFooter","Spinner","allTasks","table_data","columns","field","lookup","High","Medium","Low","Work","Home","Personal","filtering","Pending","InProgress","Completed","transformData","dist_default","icons","options","headerStyle","search","toolbar","actionsColumnIndex","paging","maxBodyHeight","editable","isEditable","rowData","onRowUpdate","newData","oldData","Promise","resolve","setTimeout","onRowDelete","tooltip","renderAllTasks","Planner","PlannerWidgetContainer","Past","Settings","Main","react_router","path","exact","from","App","header_Header","main_Main","initialState","rootReducer","combineReducers","arguments","undefined","concat","toConsumableArray","reduce","maxId","todo","Math","max","persistConfig","storage","persistedReducer","persistReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","ReactDOM","render","es","integration_react","react_router_dom","src_App_0","document","getElementById"],"mappings":"0dAiDkBA,EAAUC,0JC7CPC,cACjB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,OAASP,EAAKO,OAAOC,KAAZP,OAAAQ,EAAA,EAAAR,CAAAD,IACdA,EAAKU,MAAQ,CACTC,QAAQ,GALGX,wEASfG,KAAKS,SAAS,CACVD,QAASR,KAAKO,MAAMC,0CAKxB,OACIE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,MAAI,EAACC,OAAO,KAAKC,MAAO,CAACC,WAAW,YACxCP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAaC,KAAK,KAAIT,EAAAC,EAAAC,cAAA,QAAMQ,UAAU,aAAhB,gBACtBV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAeC,QAAStB,KAAKI,SAC7BM,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUf,OAAQR,KAAKO,MAAMC,OAAQgB,QAAM,GACvCd,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAKL,UAAU,UAAUI,QAAM,GAC3Bd,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAASC,GAAG,SAASC,IAAKC,KAA1B,gBACAnB,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAASC,GAAG,WAAWC,IAAKC,KAA5B,WACAnB,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAASC,GAAG,QAAQC,IAAKC,KAAzB,QACAnB,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAASC,GAAG,YAAYC,IAAKC,KAA7B,sBAzBYC,qCCJvBC,EAAW,WACXC,EAAY,YACZC,EAAc,cCAdC,EAAU,SAAAC,GAAO,MAAK,CAAEC,KAAMC,EAAgBF,YAC9CG,EAAW,SAACC,EAAIJ,GAAL,MAAkB,CAAEC,KAAMC,EAAiBE,KAAIJ,YAC1DK,EAAa,SAAAD,GAAE,MAAK,CAAEH,KAAMC,EAAmBE,OAC/CE,EAAe,SAAAF,GAAE,MAAK,CAAEH,KDFR,gBCEmCG,OACnDG,EAAmB,iBAAO,CAAEN,KDFP,uBCGrBO,EAAiB,iBAAO,CAAEP,KDFR,uOFiBzBQ,WAAYC,YAAW,SAAAC,GAAK,MAAK,CAC/BC,KAAM,CACFC,MAAO,KAGXC,aAAc,CACVC,gBAAiBC,IAAK,MAI1BC,MAAO,CACHC,SAAU,IAEdC,WAAY,CACRJ,gBAAiBK,IAAI,MAEzBC,YAAa,CACTN,gBAAiBO,IAAK,MAE1BC,cAAe,CACXR,gBAAiBS,IAAO,MAE5BC,KAAM,CACFC,QAASf,EAAMgB,QAAQ,EAAG,QAMhCC,GAAeC,YAAW,CAC5BJ,KAAM,CACFV,iBAJUzD,EAIgB,QAJNC,EAIe,CAC/BuE,QAASV,IAAI,KACbE,KAAMA,IAAK,KACXF,IAAKA,IAAI,KACTI,OAAQA,IAAO,MARa,SAAA/D,GAAK,OAAIF,EAAQE,EAAMH,QAE1CuE,CASlB,SAAAE,GAAA,IAAGC,EAAHD,EAAGC,QAAmBC,GAAtBF,EAAYG,MAAZvE,OAAAwE,EAAA,EAAAxE,CAAAoE,EAAA,6BAAkCxD,EAAAC,EAAAC,cAAC2D,EAAA,EAADzE,OAAA0E,OAAA,CAAQC,aAAW,SAASrD,UAAW+C,EAAQP,MAAUQ,oBIxDjFM,GAAcC,aACvB,CAHa,SAAApE,GAAK,OAAIA,EAAMqE,QAI5B,SAACA,GACG,OAAOA,ICaAC,GALIC,YATK,SAAAvE,GAAK,MAAK,CAChCwE,SAAUL,GAAYnE,KAGG,SAAAyE,GAAQ,MAAK,CACtCC,QAASC,YAAmBC,EAAaH,KAIxBF,CLgDJ,SAAelF,GAC1B,IAAMuE,EAAUvB,KAmChB,SAASwC,EAAqBC,GAC1B,IAAIC,EACJ,MAAe,QAAZD,GACCC,EAAa,MAET5E,EAAAC,EAAAC,cAACmD,GAAD,CAAcM,MAAOiB,GAArB,IAAoC5E,EAAAC,EAAAC,cAAC2E,GAAA5E,EAAD,CAAU0D,MAAM,WAApD,MAGO,QAAZgB,GACCC,EAAa,SAET5E,EAAAC,EAAAC,cAACmD,GAAD,CAAcM,MAAOiB,GAArB,IAAoC5E,EAAAC,EAAAC,cAAC4E,EAAA7E,EAAD,CAAU0D,MAAM,WAApD,MAGO,YAAZgB,GACCC,EAAa,OAET5E,EAAAC,EAAAC,cAACmD,GAAD,CAAcM,MAAOiB,GAArB,IAAoC5E,EAAAC,EAAAC,cAAC6E,GAAA9E,EAAD,CAAiB0D,MAAM,WAA3D,WAHR,EAQJ,SAASqB,EAAmBC,GACxB,IAAIC,EAUJ,MATe,QAAZD,IACCC,EAAe,aAEJ,UAAZD,IACCC,EAAe,WAEJ,OAAZD,IACCC,EAAe,WAGflF,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAMC,QAAQ,WAAWzB,MAAOuB,EAAgBG,MAAOJ,EAAW,cAI1E,SAASK,EAAiBC,GACtB,IAAIC,EACAC,EAAgB,QAChBC,EAAmBH,EAiBvB,OAhBGA,GAAU,IACTC,EAAa,aAEdD,EAAS,IACRC,EAAa,WAEdD,EAAS,IACRC,EAAa,WAGJ,GAAVD,IAAaE,EAAgB,QAC7BF,EAAS,IACRG,EAA4B,GAATH,EACnBE,EAAgB,WAIhBzF,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAMQ,KAAK,QAAQhC,MAAO6B,EAAcI,KAAM5F,EAAAC,EAAAC,cAAC2F,GAAA5F,EAAD,MAAoBoF,MAAOK,EAAmB,IAAMD,IAI1G,SAASK,EAAWC,GAChB,IAAIC,EAAWC,KAAKC,MAAMH,EAAKtE,SAC/B,OACIzB,EAAAC,EAAAC,cAACiG,EAAA,EAAD,CAAMC,IAAKJ,EAASnE,GAAIwE,MAAI,GAC5BrG,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAM5F,UAAW+C,EAAQpB,KAAMkE,QAAQ,GACnCvG,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CACIC,OAAQ/B,EAAqBsB,EAASrB,UACtC+B,OACIpB,EAAiBU,EAAST,QAE9B7C,MACIsC,EAAmBgB,EAASf,YAMpCjF,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAajG,UAAW+C,EAAQlB,cAC5BvC,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAYxB,QAAQ,KAAKyB,UAAU,MAC9Bb,EAAStD,UAW9B,IA9HqBoE,EAuIfC,EAAoB,SAAC1C,GAKvB,OAJkBA,EAAS2C,OAAO,SAASC,GAC3B,OAXJ,SAACC,GACb,IAAMC,EAAQ,IAAIC,KACdC,EAAQH,EAASI,MAAM,KACvBC,EAAS,IAAIH,KAAKC,EAAM,GAAIA,EAAM,GAAK,EAAGA,EAAM,IACpD,OAAOE,EAAOC,WAAaL,EAAMK,WAC7BD,EAAOE,YAAcN,EAAMM,YAC3BF,EAAOG,eAAiBP,EAAMO,cAKXC,CAAQ1B,KAAKC,MAAMe,EAAExF,SAASmG,aAazD,OAAO5H,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,cAEHxB,EAAMmF,SAPd,EAjJUyC,EAgJCC,EAAkB7H,EAAMmF,UA/IvCyC,EAAYe,OAAS,EAEhB7H,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAOpH,UAAW+C,EAAQP,KAAM6E,WAAW,GACvC/H,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAYxB,QAAQ,KAAKyB,UAAU,MAE3B,YAAeC,EAAYe,OAAU,uBAIjD7H,EAAAC,EAAAC,cAACiG,EAAA,EAAD,CAAMzF,UAAW+C,EAAQP,KAAM8E,WAAS,EAAC5E,QAAS,GAE9C0D,EAAYmB,IAAInC,KAOpB9F,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,KACI9H,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAYxB,QAAQ,KAAKyB,UAAU,MAAnC,4BAGA7G,EAAAC,EAAAC,cAAA,mBMxFCgI,oLAEb,OACIlI,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACiI,GAAD,cAJmB/G,+iBC2B7Bc,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCgG,IAAK,CACHC,OAAQjG,EAAMgB,QAAQ,IAExBF,KAAM,CACJC,QAASf,EAAMgB,QAAQ,EAAG,OCnB9B,IAKekF,GALKlE,YAXI,SAAAvE,GAAK,MAAK,CAChCwE,SAAUL,GAAYnE,KAGxB,SAA4ByE,GAC1B,OAAOlF,OAAAmJ,GAAA,EAAAnJ,CAAA,CACLkF,YACGE,YAAmBC,EAAaH,KAInBF,CDuBL,SAAuBlF,GAElC,IAAMuE,EAAUvB,KAEVsG,EAAa,CACfC,IAAKC,qBAAW,SAACxJ,EAAOyJ,GAAR,OAAgB3I,EAAAC,EAAAC,cAAC0I,GAAA3I,EAADb,OAAA0E,OAAA,GAAY5E,EAAZ,CAAmByJ,IAAKA,OACxDE,MAAOH,qBAAW,SAACxJ,EAAOyJ,GAAR,OAAgB3I,EAAAC,EAAAC,cAAC4I,GAAA7I,EAADb,OAAA0E,OAAA,GAAW5E,EAAX,CAAkByJ,IAAKA,OACzDI,MAAOL,qBAAW,SAACxJ,EAAOyJ,GAAR,OAAgB3I,EAAAC,EAAAC,cAAC8I,GAAA/I,EAADb,OAAA0E,OAAA,GAAW5E,EAAX,CAAkByJ,IAAKA,OACzDM,OAAQP,qBAAW,SAACxJ,EAAOyJ,GAAR,OAAgB3I,EAAAC,EAAAC,cAACgJ,GAAAjJ,EAADb,OAAA0E,OAAA,GAAmB5E,EAAnB,CAA0ByJ,IAAKA,OAClEQ,YAAaT,qBAAW,SAACxJ,EAAOyJ,GAAR,OAAgB3I,EAAAC,EAAAC,cAACkJ,GAAAnJ,EAADb,OAAA0E,OAAA,GAAkB5E,EAAlB,CAAyByJ,IAAKA,OACtEU,KAAMX,qBAAW,SAACxJ,EAAOyJ,GAAR,OAAgB3I,EAAAC,EAAAC,cAACoJ,GAAArJ,EAADb,OAAA0E,OAAA,GAAU5E,EAAV,CAAiByJ,IAAKA,OACvDY,OAAQb,qBAAW,SAACxJ,EAAOyJ,GAAR,OAAgB3I,EAAAC,EAAAC,cAACsJ,GAAAvJ,EAADb,OAAA0E,OAAA,GAAa5E,EAAb,CAAoByJ,IAAKA,OAC5Dc,OAAQf,qBAAW,SAACxJ,EAAOyJ,GAAR,OAAgB3I,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAADb,OAAA0E,OAAA,GAAgB5E,EAAhB,CAAuByJ,IAAKA,OAC/DgB,UAAWjB,qBAAW,SAACxJ,EAAOyJ,GAAR,OAAgB3I,EAAAC,EAAAC,cAAC0J,GAAA3J,EAADb,OAAA0E,OAAA,GAAe5E,EAAf,CAAsByJ,IAAKA,OACjEkB,SAAUnB,qBAAW,SAACxJ,EAAOyJ,GAAR,OAAgB3I,EAAAC,EAAAC,cAAC4J,GAAA7J,EAADb,OAAA0E,OAAA,GAAc5E,EAAd,CAAqByJ,IAAKA,OAC/DoB,SAAUrB,qBAAW,SAACxJ,EAAOyJ,GAAR,OAAgB3I,EAAAC,EAAAC,cAACkJ,GAAAnJ,EAADb,OAAA0E,OAAA,GAAkB5E,EAAlB,CAAyByJ,IAAKA,OACnEqB,aAActB,qBAAW,SAACxJ,EAAOyJ,GAAR,OAAgB3I,EAAAC,EAAAC,cAAC+J,GAAAhK,EAADb,OAAA0E,OAAA,GAAiB5E,EAAjB,CAAwByJ,IAAKA,OACtEuB,YAAaxB,qBAAW,SAACxJ,EAAOyJ,GAAR,OAAgB3I,EAAAC,EAAAC,cAAC8I,GAAA/I,EAADb,OAAA0E,OAAA,GAAW5E,EAAX,CAAkByJ,IAAKA,OAC/DwB,OAAQzB,qBAAW,SAACxJ,EAAOyJ,GAAR,OAAgB3I,EAAAC,EAAAC,cAACkK,GAAAnK,EAADb,OAAA0E,OAAA,GAAY5E,EAAZ,CAAmByJ,IAAKA,OAC3D0B,UAAW3B,qBAAW,SAACxJ,EAAOyJ,GAAR,OAAgB3I,EAAAC,EAAAC,cAACoK,GAAArK,EAADb,OAAA0E,OAAA,GAAiB5E,EAAjB,CAAwByJ,IAAKA,OACnE4B,gBAAiB7B,qBAAW,SAACxJ,EAAOyJ,GAAR,OAAgB3I,EAAAC,EAAAC,cAACsK,GAAAvK,EAADb,OAAA0E,OAAA,GAAY5E,EAAZ,CAAmByJ,IAAKA,OACpE8B,WAAY/B,qBAAW,SAACxJ,EAAOyJ,GAAR,OAAgB3I,EAAAC,EAAAC,cAACwK,GAAAzK,EAADb,OAAA0E,OAAA,GAAgB5E,EAAhB,CAAuByJ,IAAKA,QArB9BgC,EAwBjBC,mBAAS,IAxBQC,EAAAzL,OAAA0L,GAAA,EAAA1L,CAAAuL,EAAA,GAwBlCI,EAxBkCF,EAAA,GAwB5BG,EAxB4BH,EAAA,GAAAI,EAyBOL,mBAAS,SAzBhBM,EAAA9L,OAAA0L,GAAA,EAAA1L,CAAA6L,EAAA,GAyBlCE,EAzBkCD,EAAA,GAAAE,GAAAF,EAAA,GA0BXN,oBAAS,IA1BES,EAAAjM,OAAA0L,GAAA,EAAA1L,CAAAgM,EAAA,GA0BlCE,EA1BkCD,EAAA,GA0BzBE,EA1ByBF,EAAA,GAAAG,EA2BTZ,oBAAS,GA3BAa,EAAArM,OAAA0L,GAAA,EAAA1L,CAAAoM,EAAA,GA2BlCE,EA3BkCD,EAAA,GA2BxBE,EA3BwBF,EAAA,GA6BzC,SAASG,EAAiB7F,GACtB,IAAI8F,EAAY5F,KAAKC,MAAMH,EAAKtE,SAChC,MAAO,CACHI,GAAIkE,EAAKlE,GACTa,MAAOmJ,EAAUnJ,MACjBuC,SAAU4G,EAAU5G,SACpBN,SAAUkH,EAAUlH,SACpBY,OAAQ,GAAGsG,EAAUtG,OACrBqC,SAAU,GAAGiE,EAAUjE,SACvBkE,OAAQD,EAAUC,QAU1B,SAASpM,IACPiM,GAAaD,GAGf,SAASK,EAAkBC,GACvBhB,EAAQ5L,OAAAmJ,GAAA,EAAAnJ,CAAA,GAAI2L,EAAL,CAAWrI,MAAOsJ,EAAMC,OAAOC,SAG1C,SAASC,EAAqBH,GAC1BhB,EAAQ5L,OAAAmJ,GAAA,EAAAnJ,CAAA,GAAI2L,EAAL,CAAWqB,SAAUJ,EAAMC,OAAOI,WAG7C,SAASC,EAAmBrH,GACxB+F,EAAQ5L,OAAAmJ,GAAA,EAAAnJ,CAAA,GAAI2L,EAAL,CAAW9F,cAGtB,SAASsH,EAAiBhH,GACtByF,EAAQ5L,OAAAmJ,GAAA,EAAAnJ,CAAA,GAAI2L,EAAL,CAAWxF,YAGtB,SAASiH,EAAc7H,GACnBqG,EAAQ5L,OAAAmJ,GAAA,EAAAnJ,CAAA,GAAI2L,EAAL,CAAWpG,cAGtB,SAAS8H,EAAqBT,GAC1BhB,EAAQ5L,OAAAmJ,GAAA,EAAAnJ,CAAA,GAAI2L,EAAL,CAAWnD,SAAUoE,EAAMC,OAAOC,SAG7C,SAASQ,EAAaV,GACpBT,GAAW,GACXR,EAAKe,OAAS,UACVf,EAAK4B,eAAe,cACpB5B,EAAKnD,UAAW,IAAIR,MAAOwF,cAAcC,OAAO,EAAE,KAGlC,GAAjB9B,EAAKqB,WACJrB,EAAKxF,OAAS,IAGlByG,EAAMc,iBACN,IAAIC,EAAQ9G,KAAK+G,UAAUjC,GAE3B7L,EAAMoF,SAAS9C,EAAQuL,IAEvBxB,GAAW,GACXP,EAAQ,CACJtI,MAAQ,GACRkF,UAAW,IAAIR,MAAOwF,cAAcC,OAAO,EAAE,IAC7Cf,OAAU,GACVM,UAAY,IAuKlB,SAASa,EAASpL,EAAIJ,GAClBvC,EAAMoF,SAAS1C,EAASC,EAAIJ,IAOhC,OAAQzB,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,aACnBV,EAAAC,EAAAC,cAACiG,EAAA,EAAD,CAAM+G,QAAQ,gBAAgBlF,WAAS,EAACtH,UAAW+C,EAAQP,MACzDlD,EAAAC,EAAAC,cAACiG,EAAA,EAAD,CAAME,MAAI,GACRrG,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAYxB,QAAQ,KAAKyB,UAAU,MAAnC,YAEI3H,EAAMmF,SAAS2C,OAAO,SAASC,GAC7B,MAAuC,aAAhChB,KAAKC,MAAMe,EAAExF,SAASqK,SAC5BjE,OAJP,iBAQF7H,EAAAC,EAAAC,cAACiG,EAAA,EAAD,CAAME,MAAI,GApLZrG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAACiN,GAAA,EAAD,CAAKzM,UAAU,MAAMiD,MAAM,YAAYgC,KAAK,QAAQ5B,aAAW,OAC7D/D,EAAAC,EAAAC,cAACkN,GAAAnN,EAAD,CAAS0D,MAAM,QAAQ/C,QAASlB,KAGlCM,EAAAC,EAAAC,cAACmN,GAAA,EAAD,CAAOvN,OAAQ4L,EAAU/F,KAAK,MAC5B3F,EAAAC,EAAAC,cAACoN,GAAA,EAAD,CAAMC,SAAUb,GACd1M,EAAAC,EAAAC,cAACsN,GAAA,EAAD,iBACAxN,EAAAC,EAAAC,cAACuN,GAAA,EAAD,KACEzN,EAAAC,EAAAC,cAACwN,GAAA,EAAD,CAAMC,SAAO,EAAChK,MAAM,aAClB3D,EAAAC,EAAAC,cAAC0N,GAAA,EAAD,KACE5N,EAAAC,EAAAC,cAAC2N,GAAA,EAAD,KACE7N,EAAAC,EAAAC,cAAC4N,GAAA,EAAD,KACI9N,EAAAC,EAAAC,cAAC6N,GAAA,EAAD,CAAOrN,UAAU,YAAYgB,KAAK,OAAOsM,KAAK,YAAYnM,GAAG,YAAYoM,YAAa9C,EACtFe,MAAOnB,EAAKrI,MAAOwL,SAAUnC,MAGnC/L,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC2N,GAAA,EAAD,KACE7N,EAAAC,EAAAC,cAAC4N,GAAA,EAAD,KACE9N,EAAAC,EAAAC,cAACiO,GAAA,EAAD,CACID,SAAU/B,EACVD,MAAM,WACNvI,MAAM,YAJZ,uBASF3D,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC2N,GAAA,EAAD,KACE7N,EAAAC,EAAAC,cAAC4N,GAAA,EAAD,KACE9N,EAAAC,EAAAC,cAACkO,GAAA,EAAD,KACEpO,EAAAC,EAAAC,cAACmO,GAAA,EAAD,CAAQ1K,MAAM,YAAYjD,UAAU,YAAYiN,SAAO,EAACW,UAAQ,GAAhE,SACAtO,EAAAC,EAAAC,cAACmO,GAAA,EAAD,CAAQ1K,MAAM,OAAOgK,SAAO,EAAC/M,QAAS,kBAAM2L,EAAiB,IAAIgC,OAAwB,IAAhBxD,EAAKxF,OAAc+I,SAAUvD,EAAKqB,UAA3G,KACApM,EAAAC,EAAAC,cAACmO,GAAA,EAAD,CAAQ1K,MAAM,OAAOgK,SAAO,EAAC/M,QAAS,kBAAM2L,EAAiB,IAAIgC,OAAwB,IAAhBxD,EAAKxF,OAAc+I,SAAUvD,EAAKqB,UAA3G,KACApM,EAAAC,EAAAC,cAACmO,GAAA,EAAD,CAAQ1K,MAAM,OAAOgK,SAAO,EAAC/M,QAAS,kBAAM2L,EAAiB,IAAIgC,OAAwB,IAAhBxD,EAAKxF,OAAc+I,SAAUvD,EAAKqB,UAA3G,KACApM,EAAAC,EAAAC,cAACmO,GAAA,EAAD,CAAQ1K,MAAM,OAAOgK,SAAO,EAAC/M,QAAS,kBAAM2L,EAAiB,IAAIgC,OAAwB,IAAhBxD,EAAKxF,OAAc+I,SAAUvD,EAAKqB,UAA3G,KACApM,EAAAC,EAAAC,cAACmO,GAAA,EAAD,CAAQ1K,MAAM,OAAOgK,SAAO,EAAC/M,QAAS,kBAAM2L,EAAiB,IAAIgC,OAAwB,IAAhBxD,EAAKxF,OAAc+I,SAAUvD,EAAKqB,UAA3G,KACApM,EAAAC,EAAAC,cAACmO,GAAA,EAAD,CAAQ1K,MAAM,OAAOgK,SAAO,EAAC/M,QAAS,kBAAM2L,EAAiB,IAAIgC,OAAwB,IAAhBxD,EAAKxF,OAAc+I,SAAUvD,EAAKqB,UAA3G,KACApM,EAAAC,EAAAC,cAACmO,GAAA,EAAD,CAAQ1K,MAAM,YAAYjD,UAAU,YAAYiN,SAAO,EAACW,UAAQ,GAAhE,WAGJtO,EAAAC,EAAAC,cAAC4N,GAAA,EAAD,KACE9N,EAAAC,EAAAC,cAACsO,GAAA,EAAD,KACExO,EAAAC,EAAAC,cAACuO,GAAA,EAAD,CAAiB/N,UAAU,YAAYgO,UAAU,WAAjD,kBACA1O,EAAAC,EAAAC,cAAC6N,GAAA,EAAD,CAAOrN,UAAU,YAAYgB,KAAK,OAAOsM,KAAK,eAAenM,GAAG,eAAe8M,cAAc,IAAIvH,MAAOwF,cAAcC,OAAO,EAAE,IAC/HX,MAAOnB,EAAKnD,SAAUsG,SAAUzB,OAKtCzM,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC2N,GAAA,EAAD,KACE7N,EAAAC,EAAAC,cAAC4N,GAAA,EAAD,KACE9N,EAAAC,EAAAC,cAACkO,GAAA,EAAD,KACEpO,EAAAC,EAAAC,cAACmO,GAAA,EAAD,CAAQ1K,MAAM,YAAYjD,UAAU,YAAYiN,SAAO,EAACW,UAAQ,GAAhE,YACAtO,EAAAC,EAAAC,cAACmO,GAAA,EAAD,CAAQ1K,MAAM,SAASgK,SAAO,EAAC/M,QAAS,kBAAM0L,EAAmB,SAASiC,OAA0B,SAAlBxD,EAAK9F,UAAvF,QACAjF,EAAAC,EAAAC,cAACmO,GAAA,EAAD,CAAQ1K,MAAM,UAAUgK,SAAO,EAAC/M,QAAS,kBAAM0L,EAAmB,WAAWiC,OAA0B,WAAlBxD,EAAK9F,UAA1F,UACAjF,EAAAC,EAAAC,cAACmO,GAAA,EAAD,CAAQ1K,MAAM,OAAOgK,SAAO,EAAC/M,QAAS,kBAAM0L,EAAmB,QAAQiC,OAA0B,QAAlBxD,EAAK9F,UAApF,SAIJjF,EAAAC,EAAAC,cAAC4N,GAAA,EAAD,KACE9N,EAAAC,EAAAC,cAACkO,GAAA,EAAD,KACEpO,EAAAC,EAAAC,cAACmO,GAAA,EAAD,CAAQ1K,MAAM,YAAYjD,UAAU,YAAYiN,SAAO,EAACW,UAAQ,GAAhE,YACAtO,EAAAC,EAAAC,cAACmO,GAAA,EAAD,CAAQ1K,MAAM,SAASgK,SAAO,EAAC/M,QAAS,kBAAM4L,EAAc,SAAS+B,OAA0B,SAAlBxD,EAAKpG,UAAlF,QACA3E,EAAAC,EAAAC,cAACmO,GAAA,EAAD,CAAQ1K,MAAM,UAAUgK,SAAO,EAAC/M,QAAS,kBAAM4L,EAAc,SAAS+B,OAA0B,SAAlBxD,EAAKpG,UAAnF,QACA3E,EAAAC,EAAAC,cAACmO,GAAA,EAAD,CAAQ1K,MAAM,OAAOgK,SAAO,EAAC/M,QAAS,kBAAM4L,EAAc,aAAa+B,OAA0B,aAAlBxD,EAAKpG,UAApF,kBAOZ3E,EAAAC,EAAAC,cAAC0O,GAAA,EAAD,CAAalO,UAAU,cACpB4K,EAAUtL,EAAAC,EAAAC,cAAC2O,GAAA,EAAD,CAASlL,MAAM,UAAUjD,UAAU,iBAAoBV,EAAAC,EAAAC,cAACmO,GAAA,EAAD,CAAQ1K,MAAM,UAAUgC,KAAK,KAAKjF,UAAU,gBAA5C,UACjE,IACDV,EAAAC,EAAAC,cAACmO,GAAA,EAAD,CAAQ1K,MAAM,SAASgC,KAAK,KAAK/E,QAASlB,GAA1C,gBAShB,SAAwBoP,GACpB,IAEMC,EAAa,CACfC,QAAS,CACP,CAAEtM,MAAO,QAASuM,MAAO,SACzB,CAAEvM,MAAO,WAAYuM,MAAO,WAC1BC,OAAQ,CAAEC,KAAQ,OAAQC,OAAU,SAAUC,IAAO,QACvD,CAAE3M,MAAO,WAAYuM,MAAO,WAC1BC,OAAQ,CAAEI,KAAQ,OAAQC,KAAQ,OAAQC,SAAY,aACxD,CAAE9M,MAAO,SAAUuM,MAAO,SAAUQ,WAAW,GAC/C,CAAE/M,MAAO,WAAYuM,MAAO,WAAYvN,KAAM,OAAQ+N,WAAW,GACjE,CAAE/M,MAAO,SAAUuM,MAAO,SACxBC,OAAQ,CAAEQ,QAAW,UAAWC,WAAc,aAAcC,UAAa,eAE7E7E,KAnKN,SAAuB+D,GAGnB,OAFcA,EAAS7G,IAAI2D,GAoJfiE,CAAcf,IAiB1B,OACE9O,EAAAC,EAAAC,cAAC4P,GAAA7P,EAAD,CACEyC,MAAM,GACNsM,QAASD,EAAWC,QACpBjE,KAAMgE,EAAWhE,KACjBgF,MAAOvH,EACPwH,QACE,CACIC,YAAa,CACT1P,WAAY,YACZoD,MAAO,WAEXuM,QAAQ,EACRC,SAAS,EACTV,WAAW,EACXW,oBAAqB,EACrBC,QAAQ,EACRC,cAAe,KAGrBC,SAAU,CACRC,WAAY,SAAAC,GAAO,MAAsB,aAAlBA,EAAQ3E,QAC/B4E,YAAa,SAACC,EAASC,GAAV,OACX,IAAIC,QAAQ,SAAAC,GACVC,WAAW,WACTD,IACA7D,EAAS2D,EAAQ/O,GAAIoE,KAAK+G,UAAU2D,KACnC,QAEPK,YAAa,SAAAJ,GAAO,OAClB,IAAIC,QAAQ,SAAAC,GACVC,WAAW,WA6BzB,IAAoBlP,EA5BJiP,IA4BIjP,EA3BO+O,EAAQ/O,GA4B/B3C,EAAMoF,SAASxC,EAAWD,KA3Bb,SAGT0C,QAAS,CACP,SAAAkM,GAAO,MAAK,CACV7K,KAAM,QACNqL,QAAS,gBACTrQ,QAAS,SAACoL,EAAOyE,GAAR,OACP,IAAII,QAAQ,SAAAC,GACVC,WAAW,WACTD,IACAL,EAAQ3E,OAAS,YACjBmB,EAASwD,EAAQ5O,GAAIoE,KAAK+G,UAAUyD,KACnC,QAEPnC,SAA4B,aAAlBmC,EAAQ3E,YAiCtBoF,CAAehS,EAAMmF,aEvUZ8M,oLAEb,OACInR,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACkR,GAAD,cAJqBhQ,aCDhBiQ,oLAEb,OACIrR,EAAAC,EAAAC,cAAA,cACAF,EAAAC,EAAAC,cAAA,oCAJsBkB,aCAbkQ,oLAEb,OACItR,EAAAC,EAAAC,cAAA,cACAF,EAAAC,EAAAC,cAAA,gCAJ0BkB,aCKjBmQ,oLAGb,OACIvR,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,WACXV,EAAAC,EAAAC,cAACsR,EAAA,EAAD,KACIxR,EAAAC,EAAAC,cAACsR,EAAA,EAAD,CAAOC,KAAK,SAAS5K,UAAWqB,KAChClI,EAAAC,EAAAC,cAACsR,EAAA,EAAD,CAAOC,KAAK,WAAW5K,UAAWsK,KAClCnR,EAAAC,EAAAC,cAACsR,EAAA,EAAD,CAAOC,KAAK,QAAQ5K,UAAWwK,KAC/BrR,EAAAC,EAAAC,cAACsR,EAAA,EAAD,CAAOC,KAAK,YAAY5K,UAAWyK,KACnCtR,EAAAC,EAAAC,cAACsR,EAAA,EAAD,CAAUE,OAAK,EAACC,KAAK,IAAI1Q,GAAG,qBAVdG,aCWnBwQ,oLAXX,OACE5R,EAAAC,EAAAC,cAAA,OAAK2B,GAAG,iBACN7B,EAAAC,EAAAC,cAAA,OAAK2B,GAAG,kBACN7B,EAAAC,EAAAC,cAAC2R,EAAD,MACA7R,EAAAC,EAAAC,cAAC4R,GAAD,eANQ1Q,yECIZ2Q,GAAe,GCNrB,IAIeC,GAJKC,YAAgB,CAChC/N,MDOW,WAA6C,IAA9BrE,EAA8BqS,UAAArK,OAAA,QAAAsK,IAAAD,UAAA,GAAAA,UAAA,GAAtBH,GAAcrL,EAAQwL,UAAArK,OAAA,EAAAqK,UAAA,QAAAC,EACxD,OAAQzL,EAAOhF,MACX,KAAKL,EACD,SAAA+Q,OAAAhT,OAAAiT,GAAA,EAAAjT,CACOS,GADP,CAEI,CACIgC,GAAIhC,EAAMyS,OAAO,SAACC,EAAOC,GAAR,OAAiBC,KAAKC,IAAIF,EAAK3Q,GAAI0Q,KAAS,GAAK,EAClE9Q,QAASiF,EAAOjF,WAG5B,KAAKH,EACD,OAAOzB,EAAMoI,IAAI,SAAAuK,GAAI,OACjBA,EAAK3Q,KAAO6E,EAAO7E,GAAnBzC,OAAAmJ,GAAA,EAAAnJ,CAAA,GACSoT,EADT,CACe/Q,QAASiF,EAAOjF,UAC3B+Q,IAEZ,KAAKjR,EACD,OAAO1B,EAAMmH,OAAO,SAAAwL,GAAI,OACpBA,EAAK3Q,KAAO6E,EAAO7E,KAE3B,QACI,OAAOhC,MEnBb8S,WAAgB,CACpBvM,IAAK,OACLwM,eAGIC,GAAmBC,aAAeH,GAAeX,IAEjDe,GAAQC,YAAYH,GAAkBI,OAAOC,8BAAgCD,OAAOC,gCACpFC,GAAYC,aAAaL,IAE/BM,IAASC,OAELtT,EAAAC,EAAAC,cAACqT,EAAA,EAAD,CAAUR,MAAOA,IACf/S,EAAAC,EAAAC,cAACsT,GAAA,EAAD,CAAalI,QAAS,KAAM6H,UAAWA,IACrCnT,EAAAC,EAAAC,cAACuT,EAAA,EAAD,KACEzT,EAAAC,EAAAC,cAACwT,GAAD,SAIRC,SAASC,eAAe","file":"static/js/main.ae9831b8.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid';\nimport Chip from '@material-ui/core/Chip';\nimport { red, lightBlue, grey } from '@material-ui/core/colors';\nimport { blue } from '@material-ui/core/colors';\nimport { orange } from '@material-ui/core/colors';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WorkIcon from '@material-ui/icons/Work';\nimport EmojiPeopleIcon from '@material-ui/icons/EmojiPeople';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport './plannerwidget.css';\n\nconst useStyles = makeStyles(theme => ({\n        card: {\n            width: 300,\n            // height: 300\n        },\n        card_content: {\n            backgroundColor: grey[100],\n            // height: 200,\n            // textAlign: \"center\"\n        },\n        title: {\n            fontSize: 14,\n        },\n        avatar_red: {\n            backgroundColor: red[500],\n        },\n        avatar_blue: {\n            backgroundColor: blue[500],\n        },\n        avatar_orange: {\n            backgroundColor: orange[500],\n        },\n        root: {\n            padding: theme.spacing(3, 2),\n        },\n    }));\n\nconst styledBy = (property, mapping) => props => mapping[props[property]];\n\nconst StyledAvatar = withStyles({\n    root: {\n        backgroundColor: styledBy('color', {\n            default: red[500],\n            blue: blue[500],\n            red: red[500],\n            orange: orange[500],\n        })\n    },\n})(({ classes, color, ...other }) => <Avatar aria-label=\"recipe\" className={classes.root} {...other} />);\n      \n\nexport default function Today(props) {\n    const classes = useStyles();\n\n    function renderTasks(todaysTasks) {\n        if(todaysTasks.length > 0) {\n            return (\n                <div>\n                <Paper className={classes.root} elevation={false}>\n                    <Typography variant=\"h4\" component=\"h4\">\n                        {\n                            \"You have \" + (todaysTasks.length) + \" tasks for the day\"\n                        }\n                    </Typography>\n                </Paper>\n                <Grid className={classes.root} container spacing={5}>\n                {\n                    todaysTasks.map(renderTask)\n                }\n                </Grid>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                <Paper>\n                    <br />\n                    <Typography variant=\"h3\" component=\"h3\">\n                        Hooray! No tasks today..\n                    </Typography>\n                    <br />\n                </Paper>\n                </div>\n            );\n        }\n    }\n\n    function renderCategoryAvatar(category) {\n        var avatar_color\n        if(category == 'Work') {\n            avatar_color='red'\n            return (\n                <StyledAvatar color={avatar_color}> <WorkIcon color=\"action\" /> </StyledAvatar>\n            );\n        }\n        if(category == 'Home') {\n            avatar_color='orange'\n            return (\n                <StyledAvatar color={avatar_color}> <HomeIcon color=\"action\" /> </StyledAvatar>\n            );\n        }\n        if(category == 'Personal') {\n            avatar_color='blue'\n            return (\n                <StyledAvatar color={avatar_color}> <EmojiPeopleIcon color=\"action\" /> </StyledAvatar>\n            );\n        }\n    }\n\n    function renderPriorityChip(priority) {\n        var priority_color\n        if(priority == 'High') {\n            priority_color='secondary'\n        }\n        if(priority == 'Medium') {\n            priority_color='primary'\n        }\n        if(priority == 'Low') {\n            priority_color='default'\n        }\n        return (\n            <Chip variant=\"outlined\" color={priority_color} label={priority + \" Priority\"} />\n        );\n    }\n\n    function renderEffortChip(effort) {\n        var effort_color\n        var effort_suffix = 'hours'\n        var converted_effort = effort\n        if(effort >= 3) {\n            effort_color='secondary'\n        }\n        if(effort < 3) {\n            effort_color='primary'\n        }\n        if(effort < 1) {\n            effort_color='default'\n        }\n        \n        if(effort == 1) effort_suffix = 'hour'\n        if(effort < 1) {\n            converted_effort = effort * 60\n            effort_suffix = 'minutes'\n        }\n\n        return (\n            <Chip size=\"small\" color={effort_color} icon={<AccessTimeIcon />} label={converted_effort + \" \" + effort_suffix} />\n        );\n    }\n\n    function renderTask(task) {\n        let taskJson = JSON.parse(task.payload);\n        return (\n            <Grid key={taskJson.id} item>\n            <Card className={classes.card} raised={true}>\n                <CardHeader \n                    avatar={renderCategoryAvatar(taskJson.category)}\n                    action={\n                        renderEffortChip(taskJson.effort)\n                      }\n                    title={\n                        renderPriorityChip(taskJson.priority)\n                    }\n                    // subheader={renderEffortChip(taskJson.effort)\n                        // <Chip variant=\"outlined\" color=\"primary\" label={taskJson.effort + \" hours\"} />\n                    // }\n                />\n                <CardContent className={classes.card_content}>\n                    <Typography variant=\"h5\" component=\"h2\">\n                        {taskJson.title}\n                    </Typography>\n                </CardContent>\n                {/* <CardActions> */}\n                    {/* <Button size=\"small\" color=\"primary\">Complete Task</Button> */}\n                {/* </CardActions> */}\n          </Card>\n          </Grid>\n        );\n    }\n\n    const isToday = (someDate) => {\n        const today = new Date()\n        var parts = someDate.split('-')\n        var mydate = new Date(parts[0], parts[1] - 1, parts[2]); \n        return mydate.getDate() == today.getDate() &&\n            mydate.getMonth() == today.getMonth() &&\n            mydate.getFullYear() == today.getFullYear()\n    }\n\n    const filterTodaysTasks = (allTodos) => {\n        var todaystasks = allTodos.filter(function(t) {\n                        return isToday(JSON.parse(t.payload).deadline);\n                    });\n\n        return todaystasks;\n    }\n\n    function displayAll(allTodos) {\n        let todaysTasks = filterTodaysTasks(props.allTodos)\n        return [\n            renderTasks(todaysTasks),\n        ]\n    }\n\n    return <div className=\"task-list\">\n        {\n            displayAll(props.allTodos)\n        }\n    </div>;\n}","import React, { Component } from 'react';\nimport { Navbar, NavbarToggler, NavbarBrand, Nav, NavLink, Collapse } from 'reactstrap';\nimport { NavLink as RRNavLink } from 'react-router-dom';\n\nexport default class Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            isOpen: false\n        };\n    }\n    toggle() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n\n    render() {\n        return (\n            <Navbar dark expand=\"md\" style={{background:\"#213969\"}}>\n                <NavbarBrand href=\"/\"><span className=\"siteTitle\">ONE PLANNER</span></NavbarBrand>\n                <NavbarToggler onClick={this.toggle} />\n                <Collapse isOpen={this.state.isOpen} navbar>\n                    <Nav className=\"siteNav\" navbar>\n                        <NavLink to=\"/today\" tag={RRNavLink}>today's plan</NavLink>\n                        <NavLink to=\"/planner\" tag={RRNavLink}>planner</NavLink>\n                        <NavLink to=\"/past\" tag={RRNavLink}>past</NavLink>\n                        <NavLink to=\"/settings\" tag={RRNavLink}>settings</NavLink>\n                    </Nav>\n                </Collapse>\n            </Navbar>\n        )\n    }\n}","export const ADD_TODO = 'ADD_TODO'\nexport const EDIT_TODO = 'EDIT_TODO'\nexport const DELETE_TODO = 'DELETE_TODO'\nexport const COMPLETE_TODO = 'COMPLETE_TODO'\nexport const COMPLETE_ALL_TODOS = 'COMPLETE_ALL_TODOS'\nexport const CLEAR_COMPLETED = 'CLEAR_COMPLETED'\nexport const SHOW_TODO = 'SHOW_TODO'","import * as types from '../constants/ActionTypes'\n\nexport const addTodo = payload => ({ type: types.ADD_TODO, payload })\nexport const editTodo = (id, payload) => ({ type: types.EDIT_TODO, id, payload })\nexport const deleteTodo = id => ({ type: types.DELETE_TODO, id })\nexport const completeTodo = id => ({ type: types.COMPLETE_TODO, id })\nexport const completeAllTodos = () => ({ type: types.COMPLETE_ALL_TODOS })\nexport const clearCompleted = () => ({ type: types.CLEAR_COMPLETED })","import {createSelector} from 'reselect';\n\nconst getTodos = state => state.todos\n\nexport const getAllTodos = createSelector(\n    [getTodos],\n    (todos) => {\n        return todos\n    }\n)","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as TodoActions from '../actions'\nimport Today from '../components/tasks/todaysplan'\nimport { getAllTodos } from '../selectors'\n\nconst mapStateToProps = state => ({\n  allTodos: getAllTodos(state)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(TodoActions, dispatch)\n})\n\n\nconst TodaysPlan = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Today)\n\nexport default TodaysPlan","import React, { Component } from 'react';\n\nimport TodayContainer from '../containers/TodayContainer';\n\nexport default class Today extends Component {\n    render() {\n        return (\n            <div>\n                <TodayContainer></TodayContainer>\n            </div>\n        )\n    }\n}","import React, { useState } from 'react';\nimport { Button, Form, Input, Row, ButtonGroup, Col, InputGroup, InputGroupAddon } from 'reactstrap';\nimport { Card, CardBody, Spinner} from 'reactstrap';\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport Switch from '@material-ui/core/Switch';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport MaterialTable from 'material-table';\nimport { forwardRef } from 'react';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport Grid from '@material-ui/core/Grid';\n\nimport { addTodo, editTodo, deleteTodo } from '../../actions';\nimport './plannerwidget.css';\n\nconst useStyles = makeStyles(theme => ({\n  fab: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    padding: theme.spacing(3, 2),\n  },\n}));\n\nexport default function PlannerWidget(props) {\n\n    const classes = useStyles();\n\n    const tableIcons = {\n        Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n        Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n        DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n        Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n        Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n        Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n        FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n        LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n        NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n        PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n        ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n        Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n        SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n        ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n        ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n    };\n\n    const [data, setData] = useState([]);\n    const [placeholdertitle, setPlaceholdertitle] = useState('Title');\n    const [loading, setLoading] = useState(false);\n    const [collapse, setCollapse] = useState(false);\n\n    function transformOneTask(task) {\n        var t_payload = JSON.parse(task.payload)\n        return {\n            id: task.id,\n            title: t_payload.title, \n            priority: t_payload.priority, \n            category: t_payload.category, \n            effort: \"\"+t_payload.effort, \n            deadline: \"\"+t_payload.deadline,\n            status: t_payload.status\n        }\n    }\n\n    function transformData(allTasks) {\n        var tr_data = allTasks.map(transformOneTask)\n\n        return tr_data;\n    }\n\n    function toggle() {\n      setCollapse(!collapse)\n    }\n\n    function handleTitleChange(event) {\n        setData({...data, title: event.target.value})\n    }\n\n    function handleFollowupChange(event) {\n        setData({...data, followup: event.target.checked})\n    }\n\n    function onPriorityBtnClick(priority) {\n        setData({...data, priority})\n    }\n\n    function onEffortBtnClick(effort) {\n        setData({...data, effort})\n    }\n\n    function onCatBtnClick(category) {\n        setData({...data, category})\n    }\n\n    function handleDeadlineChange(event) {\n        setData({...data, deadline: event.target.value})\n    }\n\n    function handleSubmit(event) {\n      setLoading(true)\n      data.status = \"Pending\";\n      if(!data.hasOwnProperty('deadline')) {\n          data.deadline = new Date().toISOString().substr(0,10);\n      }\n\n      if(data.followup == true) {\n          data.effort = 0.1\n      }\n\n      event.preventDefault();\n      var input = JSON.stringify(data);\n\n      props.dispatch(addTodo(input))\n\n      setLoading(false)\n      setData({\n          'title':'',\n          'deadline':new Date().toISOString().substr(0,10),\n          'status': '',\n          'followup': false\n      })\n    }\n\n    function renderAddTaskButton() {\n      return (\n        <div>\n          <center>\n            <Fab className=\"btn\" color='secondary' size=\"small\" aria-label=\"add\">\n              <AddIcon color=\"white\" onClick={toggle} />\n            </Fab>\n\n            <Modal isOpen={collapse} size=\"lg\">\n              <Form onSubmit={handleSubmit}>\n                <ModalHeader>Add Task</ModalHeader>\n                <ModalBody>\n                  <Card outline color=\"secondary\">\n                    <CardBody>\n                      <Row>\n                        <Col>\n                            <Input className=\"TaskField\" type=\"text\" name=\"taskTitle\" id=\"taskTitle\" placeholder={placeholdertitle}\n                            value={data.title} onChange={handleTitleChange} />\n                        </Col>\n                      </Row>\n                      <br />\n                      <Row>\n                        <Col>\n                          <Switch\n                              onChange={handleFollowupChange}\n                              value=\"followup\"\n                              color=\"primary\"\n                          />\n                          Is Follow-up task?\n                        </Col>\n                      </Row>\n                      <br />\n                      <Row>\n                        <Col>\n                          <ButtonGroup >\n                            <Button color=\"secondary\" className=\"TaskField\" outline disabled>takes</Button>\n                            <Button color=\"info\" outline onClick={() => onEffortBtnClick(1)} active={data.effort === 1} disabled={data.followup}>1</Button>\n                            <Button color=\"info\" outline onClick={() => onEffortBtnClick(2)} active={data.effort === 2} disabled={data.followup}>2</Button>\n                            <Button color=\"info\" outline onClick={() => onEffortBtnClick(3)} active={data.effort === 3} disabled={data.followup}>3</Button>\n                            <Button color=\"info\" outline onClick={() => onEffortBtnClick(4)} active={data.effort === 4} disabled={data.followup}>4</Button>\n                            <Button color=\"info\" outline onClick={() => onEffortBtnClick(5)} active={data.effort === 5} disabled={data.followup}>5</Button>\n                            <Button color=\"info\" outline onClick={() => onEffortBtnClick(6)} active={data.effort === 6} disabled={data.followup}>6</Button>\n                            <Button color=\"secondary\" className=\"TaskField\" outline disabled>hours</Button>\n                          </ButtonGroup>\n                        </Col>\n                        <Col>\n                          <InputGroup>\n                            <InputGroupAddon className=\"TaskField\" addonType=\"prepend\">complete it by</InputGroupAddon>\n                            <Input className=\"TaskField\" type=\"date\" name=\"taskDeadline\" id=\"taskDeadline\" defaultValue={new Date().toISOString().substr(0,10)}\n                            value={data.deadline} onChange={handleDeadlineChange}\n                            />\n                          </InputGroup>\n                        </Col>\n                      </Row>\n                      <br />\n                      <Row>\n                        <Col>\n                          <ButtonGroup>\n                            <Button color=\"secondary\" className=\"TaskField\" outline disabled>priority</Button>\n                            <Button color=\"danger\" outline onClick={() => onPriorityBtnClick(\"High\")} active={data.priority === \"High\"}>High</Button>\n                            <Button color=\"warning\" outline onClick={() => onPriorityBtnClick(\"Medium\")} active={data.priority === \"Medium\"}>Medium</Button>\n                            <Button color=\"info\" outline onClick={() => onPriorityBtnClick(\"Low\")} active={data.priority === \"Low\"}>Low</Button>\n                          </ButtonGroup>\n                        </Col>\n\n                        <Col>\n                          <ButtonGroup>\n                            <Button color=\"secondary\" className=\"TaskField\" outline disabled>category</Button>\n                            <Button color=\"danger\" outline onClick={() => onCatBtnClick(\"Work\")} active={data.category === \"Work\"}>Work</Button>\n                            <Button color=\"warning\" outline onClick={() => onCatBtnClick(\"Home\")} active={data.category === \"Home\"}>Home</Button>\n                            <Button color=\"info\" outline onClick={() => onCatBtnClick(\"Personal\")} active={data.category === \"Personal\"}>Personal</Button>\n                          </ButtonGroup>\n                        </Col>\n                        </Row>\n                    </CardBody> \n                  </Card>\n                </ModalBody>\n                <ModalFooter className=\"float-left\">\n                  {loading ? <Spinner color=\"primary\" className=\"SubmitButton\" /> : <Button color=\"primary\" size=\"lg\" className=\"SubmitButton\" >Submit</Button>}\n                  {' '}\n                  <Button color=\"danger\" size=\"lg\" onClick={toggle}>Close</Button>\n                </ModalFooter>\n              </Form>\n            </Modal>\n          </center>\n        </div>\n      )\n    }\n\n  function renderAllTasks(allTasks) {\n      var tr_data = transformData(allTasks)\n\n      const table_data = {\n          columns: [\n            { title: 'Title', field: 'title' },\n            { title: 'Priority', field: 'priority', \n              lookup: { 'High': \"High\", 'Medium': \"Medium\", 'Low': \"Low\" } },\n            { title: 'Category', field: 'category',\n              lookup: { 'Work': \"Work\", 'Home': \"Home\", 'Personal': \"Personal\" }},\n            { title: 'Effort', field: 'effort', filtering: false },\n            { title: 'Deadline', field: 'deadline', type: 'date', filtering: false },\n            { title: 'Status', field: 'status',\n              lookup: { 'Pending': \"Pending\", 'InProgress': \"InProgress\", 'Completed': \"Completed\" }},\n          ],\n          data: tr_data,\n        };\n\n        return (\n          <MaterialTable\n            title=\"\"\n            columns={table_data.columns}\n            data={table_data.data}\n            icons={tableIcons}\n            options={\n              {\n                  headerStyle: {\n                      background: 'lightgray',\n                      color: '#213969'\n                  },\n                  search: false,\n                  toolbar: false,\n                  filtering: true,\n                  actionsColumnIndex: -1,\n                  paging: false,\n                  maxBodyHeight: 1000\n              }\n            }\n            editable={{\n              isEditable: rowData => rowData.status != 'Completed',\n              onRowUpdate: (newData, oldData) =>\n                new Promise(resolve => {\n                  setTimeout(() => {\n                    resolve();\n                    editTask(oldData.id, JSON.stringify(newData))\n                  }, 600);\n                }),\n              onRowDelete: oldData =>\n                new Promise(resolve => {\n                  setTimeout(() => {\n                    resolve();\n                    deleteTask(oldData.id)\n                  }, 600);\n                }),\n            }}\n            actions={[\n              rowData => ({\n                icon: 'check',\n                tooltip: 'Complete task',\n                onClick: (event, rowData) => \n                  new Promise(resolve => {\n                    setTimeout(() => {\n                      resolve();\n                      rowData.status = 'Completed'\n                      editTask(rowData.id, JSON.stringify(rowData))\n                    }, 600);\n                  }),\n                disabled: rowData.status == 'Completed'\n              })\n            ]}\n          />\n        );\n    }\n\n    function editTask(id, payload) {\n        props.dispatch(editTodo(id, payload))\n    }\n\n    function deleteTask(id) {\n        props.dispatch(deleteTodo(id))\n    }\n\n    return (<div className=\"task-list\">\n        <Grid justify='space-between' container className={classes.root}>\n          <Grid item>\n            <Typography variant=\"h4\" component=\"h4\">\n              You have {\n                props.allTodos.filter(function(t) {\n                  return JSON.parse(t.payload).status != 'Completed';\n                }).length\n              } open tasks.\n            </Typography>\n          </Grid>\n          <Grid item>\n            { \n              renderAddTaskButton()\n            }\n          </Grid>\n        </Grid>\n        {\n            renderAllTasks(props.allTodos)\n        }\n    </div>)\n}","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as TodoActions from '../actions'\nimport PlannerWidget from '../components/tasks/plannerwidget'\nimport { getAllTodos } from '../selectors'\n\nconst mapStateToProps = state => ({\n  allTodos: getAllTodos(state)\n})\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n    ...bindActionCreators(TodoActions, dispatch)\n  }\n}\n\nconst AllTodoList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PlannerWidget)\n\nexport default AllTodoList","import React, { Component } from 'react';\nimport PlannerWidgetContainer from '../containers/PlannerWidgetContainer';\n\nexport default class Planner extends Component {\n    render() {\n        return (\n            <div>\n                <PlannerWidgetContainer></PlannerWidgetContainer>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\n\nexport default class Past extends Component {\n    render() {\n        return (\n            <center>\n            <div>\n                This is past.\n            </div>\n            </center>\n        )\n    }\n}","import React, { Component } from 'react';\n\nexport default class Settings extends Component {\n    render() {\n        return (\n            <center>\n            <div>\n                Settings.\n            </div>\n            </center>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Switch, Route, HashRouter, Redirect } from 'react-router-dom';\nimport Today from './today';\nimport Planner from './planner';\nimport Past from './past';\nimport Settings from './settings';\n\nexport default class Main extends Component {\n\n    render() {\n        return (\n            <div className=\"content\">\n                <Switch>\n                    <Route path=\"/today\" component={Today}/>\n                    <Route path=\"/planner\" component={Planner}/>\n                    <Route path=\"/past\" component={Past}/>\n                    <Route path=\"/settings\" component={Settings}/>\n                    <Redirect exact from=\"/\" to=\"planner\" />\n                </Switch>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/header';\nimport Main from './components/main';\n\nclass App extends Component {\n  render() {\n    return (\n      <div id=\"colorlib-page\">\n        <div id=\"container-wrap\">\n          <Header></Header>\n          <Main></Main>\n      \t</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import {\n    ADD_TODO,\n    EDIT_TODO,\n    DELETE_TODO,\n    COMPLETE_TODO,\n    COMPLETE_ALL_TODOS,\n    CLEAR_COMPLETED\n  } from '../constants/ActionTypes'\n\nconst initialState = []\n\nexport default function todos(state = initialState, action) {\n    switch (action.type) {\n        case ADD_TODO:\n            return [\n                ...state,\n                {\n                    id: state.reduce((maxId, todo) => Math.max(todo.id, maxId), -1) + 1,\n                    payload: action.payload\n                }\n            ]\n        case EDIT_TODO:\n            return state.map(todo =>\n                todo.id === action.id ?\n                    { ...todo, payload: action.payload } :\n                    todo\n                )\n        case DELETE_TODO:\n            return state.filter(todo =>\n                todo.id !== action.id\n                )\n        default:\n            return state\n    }\n}","import { combineReducers } from 'redux'\nimport todos from './todos'\n\nconst rootReducer = combineReducers({\n    todos\n})\n\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { HashRouter } from 'react-router-dom';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\nimport rootReducer from './reducers'\nimport './index.css';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst store = createStore(persistedReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\nconst persistor = persistStore(store)\n\nReactDOM.render(\n  (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <HashRouter>\n          <App />\n        </HashRouter>\n      </PersistGate>\n    </Provider>),\n  document.getElementById('root')\n);\n"],"sourceRoot":""}