{"version":3,"sources":["components/tasks/todaysplan.jsx","components/header.jsx","constants/ActionTypes.js","actions/index.js","selectors/index.js","containers/TodayContainer.js","components/tasks/todayscompleted.jsx","containers/TodayCompletedContainer.js","components/today.jsx","components/tasks/plannerwidget.jsx","containers/PlannerWidgetContainer.js","components/planner.jsx","components/tasks/pastwidget.jsx","containers/PastWidgetContainer.js","components/past.jsx","components/main.jsx","components/settings.jsx","App.js","reducers/todos.js","reducers/index.js","index.js"],"names":["property","mapping","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","setState","react_default","a","createElement","Navbar","dark","expand","style","background","NavbarBrand","href","className","NavbarToggler","onClick","Collapse","navbar","Nav","NavLink","to","tag","RRNavLink","Component","ADD_TODO","EDIT_TODO","DELETE_TODO","addTodo","payload","type","types","editTodo","id","deleteTodo","completeTodo","completeAllTodos","clearCompleted","useStyles","makeStyles","theme","title_paper","backgroundColor","blue","padding","spacing","card","width","open_tasks_card","followup_task_card_header","grey","card_content","height","font_style","fontFamily","action_font_style","card_action","justifyContent","title","fontSize","avatar_red","red","avatar_blue","avatar_orange","orange","button_start","color","button_complete","margin","button_show_other_tasks","marginLeft","expandOpen","transform","root","StyledAvatar","withStyles","default","green","_ref","classes","other","objectWithoutProperties","Avatar","assign","aria-label","getAllTodos","createSelector","todos","TodaysPlan","connect","allTodos","dispatch","objectSpread","bindActionCreators","TodoActions","_useState","useState","_useState2","slicedToArray","showNonWorkTasks","setShowNonWorkTasks","_useState3","_useState4","showNonWorkTasksTitle","setShowNonWorkTasksTitle","renderTasks","oldOpenTasks","todaysOpenTasks","futureOpenTasks","reorderedOldTasks","reorderTasks","reorderedTasks","reorderedFutureTasks","allTasks","Array","prototype","push","apply","reorderedAllTasks","todaysTasks","numTodaysTasks","length","numTasksAtWork","getTasksByCategory","timeLeft","timeLeftAtWork","isAtWork","isMorning","isAfterWork","getTitle","Grid","justify","container","item","Typography","variant","component","Chip","size","label","Date","toDateString","renderOpenTasksTitle","Button","startIcon","VerifiedUser_default","hidden","alignItems","map","renderTask","openTasks","dayVal","isBeforeWork","workTasks","reorder","homeTasks","personalTasks","inprogressTasks","getTasksByStatus","pendingTasks","inprogress_high","getTasksByPriority","inprogress_med","inprogress_low","pending_high","pending_med","pending_low","task","taskJson","JSON","parse","category","effort","key","Slide","direction","in","mountOnEnter","unmountOnExit","Card","raised","CardHeader","avatar","renderCategoryAvatar","CardContent","CardActions","disableSpacing","AssignmentTurnedIn_default","handleActionChange","renderFollowupTask","action","align","renderDeadlineWarningChip","renderEffortChip","renderPriorityChip","priority","status","PlayArrow_default","xs","renderProgressChip","workLog","Pause_default","renderAction","renderOpenTask","tasks","filter","t","avatar_color","Computer_default","Home_default","EmojiPeople_default","isToday","deadline","daysLeft","priority_color","animate","time_spent_in_mins","computeSpentTime","effort_in_mins","progress_in_percent","toFixed","Progress","value","multi","bar","animated","effort_color","effort_suffix","converted_effort","icon","AccessTime_default","spentTime","i","start_time","end_time","getTime","newStatus","console","log","worklog_entry","date","toString","d","getDate","m","getMonth","getFullYear","formatDate","jsonPayload","stringify","editTask","useEffect","parts","split","mydate","now","morningTime","setHours","setMinutes","workStartTime","workEndTime","eveningTime","getHours","isPast","someDate","today","setSeconds","setMilliseconds","filterOldOpenTasks","filterFutureOpenTasks","filterTodaysTasks","filterOpenTasks","todaysTodos","openTodaysTasks","displayAll","completed_tasks_card","completed_card","completed_card_content","TodayCompletedPlan","renderCompletedTask","filterCompletedTasks","completedTasks","Paper","elevation","renderCompletedTasks","displayCompleted","Today","TodayContainer","TodayCompletedContainer","fab","AllTodoList","tableIcons","Add","forwardRef","ref","AddBox_default","Check","Check_default","Clear","Clear_default","Delete","DeleteOutline_default","DetailPanel","ChevronRight_default","Edit","Edit_default","Export","SaveAlt_default","Filter","FilterList_default","FirstPage","FirstPage_default","LastPage","LastPage_default","NextPage","PreviousPage","ChevronLeft_default","ResetSearch","Search","Search_default","SortArrow","ArrowUpward_default","ThirdStateCheck","Remove_default","ViewColumn","ViewColumn_default","data","setData","placeholdertitle","_useState5","_useState6","loading","setLoading","_useState7","_useState8","collapse","setCollapse","transformOneTask","t_payload","handleTitleChange","event","target","handleFollowupChange","followup","checked","onPriorityBtnClick","onEffortBtnClick","onCatBtnClick","handleDeadlineChange","formattedDate","getCurrentDate","handleSubmit","hasOwnProperty","preventDefault","input","toJSON","timezoneOffsetInHours","getTimezoneOffset","sign","leadingZero","Math","abs","correctedDate","getMinutes","getSeconds","getMilliseconds","toISOString","replace","filterData","renderWorkLogListItem","workLogEntry","ListItem","ListItemText","primary","secondary","Fab","Add_default","Modal","Form","onSubmit","ModalHeader","ModalBody","es_Card","outline","CardBody","Row","Col","Input","name","placeholder","onChange","Switch","ButtonGroup","es_Button","disabled","active","InputGroup","InputGroupAddon","addonType","defaultValue","ModalFooter","Spinner","table_data","columns","field","lookup","High","Medium","Low","Work","Home","Personal","filtering","render","rowData","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore_default","ExpansionPanelDetails","List","renderWorkLog","Pending","InProgress","Completed","transformData","dist_default","icons","options","headerStyle","search","toolbar","actionsColumnIndex","paging","maxBodyHeight","editable","isEditable","onRowUpdate","newData","oldData","Promise","resolve","setTimeout","onRowDelete","actions","tooltip","completeTask","renderAllTasks","Planner","PlannerWidgetContainer","grouping","defaultGroupOrder","Past","PastWidgetContainer","Main","react_router","path","exact","from","App","header_Header","main_Main","initialState","rootReducer","combineReducers","arguments","undefined","concat","toConsumableArray","reduce","maxId","todo","max","persistConfig","storage","persistedReducer","persistReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","ReactDOM","es","integration_react","react_router_dom","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.ce4fe8cf.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid';\nimport Chip from '@material-ui/core/Chip';\nimport { red, grey, green } from '@material-ui/core/colors';\nimport { blue } from '@material-ui/core/colors';\nimport { orange } from '@material-ui/core/colors';\nimport HomeIcon from '@material-ui/icons/Home';\nimport EmojiPeopleIcon from '@material-ui/icons/EmojiPeople';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport ComputerIcon from '@material-ui/icons/Computer';\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport Slide from '@material-ui/core/Slide';\nimport { Progress } from 'reactstrap';\nimport { editTodo } from '../../actions';\nimport './todaysplan.css';\nimport { fips } from 'crypto';\n\nconst useStyles = makeStyles(theme => ({\n        title_paper: {\n            backgroundColor: blue[50],\n            padding: theme.spacing(3, 2),\n        },\n        card: {\n            width: 270,\n        },\n        open_tasks_card: {\n            backgroundColor: blue[50],\n            padding: theme.spacing(3, 2),\n        },\n        followup_task_card_header: {\n            backgroundColor: grey[400],\n        },\n        card_content: {\n            backgroundColor: grey[100],\n            height: 110,\n        },\n        font_style: {\n            fontFamily: ['Montserrat','sans-serif']\n        },\n        action_font_style: {\n            fontFamily: ['Karla','sans-serif']\n        },\n        card_action: {\n            justifyContent: \"flex-start\"\n        },\n        title: {\n            fontSize: 14,\n        },\n        avatar_red: {\n            backgroundColor: red[500],\n        },\n        avatar_blue: {\n            backgroundColor: blue[500],\n        },\n        avatar_orange: {\n            backgroundColor: orange[500],\n        },\n        button_start: {\n            color: 'black',\n        },\n        button_complete: {\n            margin: theme.spacing(1),\n            background: '#388e3c',\n            color: 'white',\n        },\n        button_show_other_tasks: {\n            color: 'black',\n            margin: theme.spacing(1),\n\n        },\n        expand: {\n            marginLeft: 'auto',\n        },\n        expandOpen: {\n            transform: 'rotate(180deg)',\n        },\n        root: {\n            padding: theme.spacing(3, 2),\n        },\n    }));\n\nconst styledBy = (property, mapping) => props => mapping[props[property]];\n\nconst StyledAvatar = withStyles({\n    root: {\n        backgroundColor: styledBy('color', {\n            default: red[500],\n            blue: blue[500],\n            red: red[500],\n            green: green[500],\n            orange: orange[500],\n        })\n    },\n})(({ classes, color, ...other }) => <Avatar aria-label=\"recipe\" className={classes.root} {...other} />);\n\n\nexport default function Today(props) {\n    const classes = useStyles();\n\n    const [showNonWorkTasks, setShowNonWorkTasks] = useState(false);\n    const [showNonWorkTasksTitle, setShowNonWorkTasksTitle] = useState('Show');\n\n    useEffect(() => {\n        if(showNonWorkTasks) setShowNonWorkTasksTitle('Hide')\n        else setShowNonWorkTasksTitle('Show')\n      });\n\n    function renderTasks(oldOpenTasks, todaysOpenTasks, futureOpenTasks) {\n        var reorderedOldTasks = reorderTasks(oldOpenTasks)\n        var reorderedTasks = reorderTasks(todaysOpenTasks)\n        var reorderedFutureTasks = reorderTasks(futureOpenTasks)\n\n        var allTasks = []\n        Array.prototype.push.apply(allTasks, reorderedOldTasks);\n        Array.prototype.push.apply(allTasks, reorderedTasks);\n        Array.prototype.push.apply(allTasks, reorderedFutureTasks);\n\n        var reorderedAllTasks = reorderTasks(allTasks)\n        var title = getTitle(reorderedAllTasks)\n\n        return (\n            <div>\n                { renderOpenTasksTitle(title) }\n                <Button className={classes.button_show_other_tasks}\n                    startIcon={<VerifiedUserIcon />}\n                    onClick={() => setShowNonWorkTasks(!showNonWorkTasks)}\n                    hidden={!isAtWork()}\n                    >\n                        <Typography className={classes.action_font_style}>\n                            {showNonWorkTasksTitle} non-work tasks\n                        </Typography>\n                </Button>\n                <Grid className={classes.root} container spacing={5} alignItems=\"center\">\n                {\n                    reorderedAllTasks.map(renderTask)\n                }\n                </Grid>\n            </div>\n        );\n    }\n\n    function reorderTasks(openTasks) {\n        var reorderedTasks = []\n\n        var dayVal = getDayVal()\n\n        var workTasks = reorder(getTasksByCategory(openTasks, \"Work\"))\n        var homeTasks = reorder(getTasksByCategory(openTasks, \"Home\"))\n        var personalTasks = reorder(getTasksByCategory(openTasks, \"Personal\"))\n        if(dayVal == \"AT_WORK\") {\n            Array.prototype.push.apply(reorderedTasks, workTasks);\n            Array.prototype.push.apply(reorderedTasks, homeTasks);\n            Array.prototype.push.apply(reorderedTasks, personalTasks);\n        } else if(dayVal == \"BEFORE_WORK\") {\n            Array.prototype.push.apply(reorderedTasks, homeTasks);\n            Array.prototype.push.apply(reorderedTasks, workTasks);\n            Array.prototype.push.apply(reorderedTasks, personalTasks);\n        } else {\n            Array.prototype.push.apply(reorderedTasks, personalTasks);\n            Array.prototype.push.apply(reorderedTasks, homeTasks);\n            Array.prototype.push.apply(reorderedTasks, workTasks);\n        }\n\n        return reorderedTasks\n    }\n\n    function reorder(openTasks) {\n        var reorderedTasks = []\n\n        var inprogressTasks = getTasksByStatus(openTasks, \"InProgress\")\n        var pendingTasks = getTasksByStatus(openTasks, \"Pending\")\n\n        var inprogress_high = getTasksByPriority(inprogressTasks, \"High\")\n        var inprogress_med = getTasksByPriority(inprogressTasks, \"Medium\")\n        var inprogress_low = getTasksByPriority(inprogressTasks, \"Low\")\n\n        var pending_high = getTasksByPriority(pendingTasks, \"High\")\n        var pending_med = getTasksByPriority(pendingTasks, \"Medium\")\n        var pending_low = getTasksByPriority(pendingTasks, \"Low\")\n\n        Array.prototype.push.apply(reorderedTasks, inprogress_high);\n        Array.prototype.push.apply(reorderedTasks, inprogress_med);\n        Array.prototype.push.apply(reorderedTasks, inprogress_low);\n        Array.prototype.push.apply(reorderedTasks, pending_high);\n        Array.prototype.push.apply(reorderedTasks, pending_med);\n        Array.prototype.push.apply(reorderedTasks, pending_low);\n\n        return reorderedTasks\n    }\n\n    function renderTask(task) {\n        let taskJson = JSON.parse(task.payload);\n        if(isAtWork() && showNonWorkTasks == false && taskJson.category != 'Work') {\n            return;\n        }\n        if(taskJson.effort < 0.5) {\n            return (\n                renderFollowupTask(task)\n            )\n        } else {\n            return (\n                renderOpenTask(task)\n            )\n        }\n    }\n\n    function renderOpenTask(task) {\n        let taskJson = JSON.parse(task.payload);\n        return (\n            <Grid key={task.id} item>\n                <Slide direction=\"right\" in=\"false\" mountOnEnter unmountOnExit>\n                    <Card className={classes.card} raised={true}>\n                        <CardHeader \n                            avatar={renderCategoryAvatar(taskJson.category)}\n                            action={\n                                <div align=\"right\">\n                                    {/* {renderProgressChip(taskJson.effort, taskJson.workLog)} */}\n                                    {renderDeadlineWarningChip(taskJson)}\n                                    {/* <br /> */}\n                                    {renderEffortChip(taskJson.effort)}\n                                    {/* <br /> */}\n                                    {/* {renderProgressChip(taskJson.effort, taskJson.workLog)} */}\n                                    {/* {renderSpentChip(taskJson.workLog)} */}\n                                    <br />\n                                    {renderPriorityChip(taskJson.priority)}\n                                </div>\n                            }\n                        />\n                        <CardContent className={classes.card_content}>\n                            <Typography variant=\"h5\" component=\"h2\" className={classes.font_style}>\n                                {taskJson.title}\n                            </Typography>\n                        </CardContent>\n                        <CardActions disableSpacing>\n                        {\n                            renderAction(task.id, taskJson.status, taskJson)\n                        }\n                        </CardActions>\n                    </Card>\n                </Slide>\n            </Grid>\n            );\n    }\n\n    function renderFollowupTask(task) {\n        let taskJson = JSON.parse(task.payload);\n        return (\n            <Grid key={task.id} item>\n                <Slide direction=\"right\" in=\"true\" mountOnEnter unmountOnExit>\n                    <Card className={classes.card} raised={true}>\n                        <CardHeader \n                            className={classes.followup_task_card_header}\n                            avatar={renderCategoryAvatar(taskJson.category)}\n                            title={\n                                <Typography variant=\"h5\" component=\"h5\" className={classes.font_style}>\n                                    Follow-up\n                                </Typography>\n                            }\n                        />\n                        <CardContent className={classes.card_content}>\n                            <Typography variant=\"h5\" component=\"h2\" className={classes.font_style}>\n                                {taskJson.title}\n                            </Typography>\n                        </CardContent>\n                        <CardActions disableSpacing>\n                            <Button \n                                className={classes.button_start}\n                                startIcon={<AssignmentTurnedInIcon />}\n                                onClick={() => handleActionChange(task.id, \"Completed\", taskJson)}>\n                                <Typography className={classes.action_font_style}>\n                                    Done\n                                </Typography>\n                            </Button>\n                        </CardActions>\n                    </Card>\n                </Slide>\n            </Grid>\n        );\n    }\n\n    function getDayVal() {\n        var dayVal\n        if(isBeforeWork()) dayVal = 'BEFORE_WORK'\n        else if(isAfterWork()) dayVal = 'AFTER_WORK'\n        else dayVal = 'AT_WORK'\n\n        return dayVal\n    }\n\n    function getTasksByCategory(tasks, category) {\n        var filteredTasks = tasks.filter(function(t) {\n            return JSON.parse(t.payload).category == category;\n        });\n\n        return filteredTasks;\n    }\n\n    function getTasksByPriority(tasks, priority) {\n        var filteredTasks = tasks.filter(function(t) {\n            return JSON.parse(t.payload).priority == priority;\n        });\n\n        return filteredTasks;\n    }\n\n    function getTasksByStatus(tasks, status) {\n        var filteredTasks = tasks.filter(function(t) {\n            return JSON.parse(t.payload).status == status;\n        });\n\n        return filteredTasks;\n    }\n\n    function getTitle(todaysTasks) {\n        var title\n        var numTodaysTasks = todaysTasks.length\n        var numTasksAtWork = getTasksByCategory(todaysTasks, \"Work\").length\n        var timeLeft = timeLeftAtWork()\n        if(numTodaysTasks > 0) {\n            if(isAtWork()) {\n                if (numTasksAtWork == 0) {\n                    title = \"Plan your day at work.\"\n                } else {\n                    title = \"You have \" + (numTasksAtWork) + \" \"\n                    title += (numTasksAtWork == 1) ? \"task\" : \"tasks\"\n                    title += \" at work.\"\n                }\n                title += \" \" + timeLeft + \" hours left.\"\n            } else {\n                title = \"You have \" + (numTodaysTasks) + \" \"\n                title += (numTodaysTasks == 1) ? \"task\" : \"tasks\"\n                title += \" for the day.\"\n                if (numTasksAtWork > 0) {\n                    title += \" \"+(numTasksAtWork) + \" work tasks left.\"\n                }\n            }\n        } else if(isMorning()) {\n            title = \"Good Morning! Plan your day for today and get started.\"\n        } else if (isAfterWork()) {\n            title = \"No open tasks now!\"\n        } else {\n            title = timeLeftAtWork() +\" hours left at work. Everything done for now!\"\n        }\n        return title\n    }\n\n    function renderOpenTasksTitle(title) {\n        return (\n            <Grid justify='space-between' container className={classes.title_paper}>\n                <Grid item>\n                    <Typography variant=\"h4\" component=\"h4\" className={classes.font_style}>\n                        { title }\n                    </Typography>\n                </Grid>\n                <Grid item>\n                    { renderDate() }\n                </Grid>\n            </Grid>\n        );\n    }\n\n    function renderDate() {\n        return (\n            <Chip size=\"medium\" color=\"primary\" className={classes.font_style} label={new Date().toDateString()} />\n        );\n    }\n\n    function renderCategoryAvatar(category) {\n        var avatar_color\n        if(category == 'Work') {\n            avatar_color='blue'\n            return (\n                <StyledAvatar color={avatar_color}> <ComputerIcon color=\"action\" /> </StyledAvatar>\n            );\n        }\n        if(category == 'Home') {\n            avatar_color='orange'\n            return (\n                <StyledAvatar color={avatar_color}> <HomeIcon color=\"action\" /> </StyledAvatar>\n            );\n        }\n        if(category == 'Personal') {\n            avatar_color='green'\n            return (\n                <StyledAvatar color={avatar_color}> <EmojiPeopleIcon color=\"action\" /> </StyledAvatar>\n            );\n        }\n    }\n\n    function renderDeadlineWarningChip(taskJson) {\n        if(isToday(taskJson.deadline)) {\n            return\n            // return (\n                // <Chip className={classes.font_style} size=\"small\"  color=\"primary\" \n                // label=\"Today\" />\n            // );\n        } else {\n            return (\n                <div>\n                <Chip className={classes.font_style} size=\"small\"  color=\"secondary\" \n                label= {daysLeft(taskJson.deadline) + \" days late\"} />\n                <br />\n                </div>\n            );\n        }\n    }\n\n    function renderPriorityChip(priority) {\n        var priority_color\n        if(priority == 'High') {\n            priority_color='secondary'\n        }\n        if(priority == 'Medium') {\n            priority_color='primary'\n        }\n        if(priority == 'Low') {\n            priority_color='default'\n        }\n        return (\n            <Chip variant=\"outlined\" className={classes.font_style} size=\"small\"  color={priority_color} label={priority + \" Priority\"} />\n        );\n    }\n\n    function renderProgressChip(effort, workLog, animate) {\n        var time_spent_in_mins = computeSpentTime(workLog)\n        var effort_in_mins = effort * 60\n\n        var progress_in_percent = ((time_spent_in_mins * 100)/effort_in_mins).toFixed(0)\n\n        if(progress_in_percent >= 100) {\n            return (\n                <Progress color=\"danger\" value=\"100\">{time_spent_in_mins + \" mins spent\"}</Progress>\n            )\n        }\n\n        if(animate) {\n            return (\n                <Progress multi>\n                    <Progress bar animated color=\"success\" value={progress_in_percent}>{progress_in_percent+\"%\"}</Progress>\n                    <Progress bar value={100-progress_in_percent}>{(effort_in_mins - time_spent_in_mins)+\" mins left\"}</Progress>\n                </Progress>\n            );\n        } else {\n            return (\n                <div>\n                    <Progress multi>\n                        <Progress bar color=\"success\" value={progress_in_percent}>{progress_in_percent+\"%\"}</Progress>\n                        <Progress bar value={100-progress_in_percent}>{(effort_in_mins - time_spent_in_mins)+\" mins left\"}</Progress>\n                    </Progress>\n                </div>\n            );\n        }\n    }\n\n    function renderEffortChip(effort) {\n        var effort_color\n        var effort_suffix = 'hours'\n        var converted_effort = effort\n        if(effort >= 3) {\n            effort_color='secondary'\n        }\n        if(effort < 3) {\n            effort_color='primary'\n        }\n        if(effort < 1) {\n            effort_color='default'\n        }\n        \n        if(effort == 1) effort_suffix = 'hour'\n        if(effort < 1) {\n            converted_effort = effort * 60\n            effort_suffix = 'minutes'\n        }\n\n        return (\n            <Chip size=\"small\" className={classes.font_style} color={effort_color} icon={<AccessTimeIcon />} label={converted_effort + \" \" + effort_suffix} />\n        );\n    }\n\n    function renderSpentChip(workLog) {\n        var effort_color = 'secondary'\n        var effort_suffix = 'minutes'\n        // var converted_effort = effort\n        // if(effort >= 3) {\n        //     effort_color='secondary'\n        // }\n        // if(effort < 3) {\n        //     effort_color='primary'\n        // }\n        // if(effort < 1) {\n        //     effort_color='default'\n        // }\n        \n        // if(effort == 1) effort_suffix = 'hour'\n        // if(effort < 1) {\n        //     converted_effort = effort * 60\n        //     effort_suffix = 'minutes'\n        // }\n\n        var time_spent = computeSpentTime(workLog)\n\n        return (\n            <Chip size=\"small\" className={classes.font_style} color={effort_color} icon={<AccessTimeIcon />} label={\"Spent: \" + time_spent + \" \" + effort_suffix} />\n        );\n    }\n\n    function computeSpentTime(workLog) {\n        var spentTime = 0\n        for(var i=0; i<workLog.length; i++) {\n            var start_time = new Date(workLog[i]['start_time'])\n            var end_time = new Date()\n            if('end_time' in workLog[i]) {\n                end_time = new Date(workLog[i]['end_time'])\n            }\n            spentTime += (end_time.getTime() - start_time.getTime())\n        }\n        return (spentTime/(1000 * 60)).toFixed(0)\n    }\n\n    function handleActionChange(id, newStatus, task) {\n        console.log(\"Handling action for: \"+task.workLog)\n\n        task.status = newStatus\n        if(newStatus == 'InProgress') {\n            var worklog_entry = {\n                'start_time': new Date()\n            }\n            task.workLog.push(worklog_entry)\n        } else {\n            for(var i=0; i<task.workLog.length; i++) {\n                if(!('end_time' in task.workLog[i])) {\n                    task.workLog[i]['end_time'] = new Date()\n                }\n            }\n        }\n        editTask(id, task)\n    }\n\n    function renderAction(id, status, task) {\n        if(status == \"Pending\") {\n            return (\n                <Grid container spacing={1}>\n                    <Grid container justify='space-between'>\n                <Button \n                className={classes.button_start}\n                startIcon={<PlayArrowIcon />}\n                onClick={() => handleActionChange(id, \"InProgress\", task)}\n                >\n                    <Typography className={classes.action_font_style}>\n                        Start\n                    </Typography>\n                </Button>\n                </Grid>\n                <Grid item xs={12}>\n                        { renderProgressChip(task.effort, task.workLog, false) }\n                    </Grid>\n                </Grid>\n            );\n        }\n        if(status == \"InProgress\") {\n            return (\n                <Grid container spacing={1}>\n                    <Grid container justify='space-between'>\n                        <Button \n                            className={classes.button_start}\n                            startIcon={<PauseIcon />}\n                            onClick={() => handleActionChange(id, \"Pending\", task)}>\n                                <Typography className={classes.action_font_style}>\n                                    Pause\n                                </Typography>\n                        </Button>\n                        <Button \n                            className={classes.button_start}\n                            startIcon={<AssignmentTurnedInIcon />}\n                            onClick={() => handleActionChange(id, \"Completed\", task)}>\n                                <Typography className={classes.action_font_style}>\n                                    Complete\n                                </Typography>\n                        </Button>\n                    </Grid>\n                    <Grid item xs={12}>\n                        { renderProgressChip(task.effort, task.workLog, true) }\n                    </Grid>\n                </Grid>\n            );\n        }\n    }\n\n    function formatDate(date) {\n        if(date.toString().length < 12) return date\n  \n        var d = date.getDate();\n        var m = date.getMonth()+1;\n        var y = date.getFullYear();\n  \n        var formattedDate = y+\"-\"+(m <= 9 ? '0' + m : m)+\"-\"+(d <= 9 ? '0' + d : d)\n        return formattedDate\n    }\n\n    function editTask(id, payload) {\n        payload.deadline = formatDate(payload.deadline)\n        var jsonPayload = JSON.stringify(payload)\n        props.dispatch(editTodo(id, jsonPayload))\n    }\n\n    const daysLeft = (deadline) => {\n        var parts = deadline.split('-')\n        var mydate = new Date(parts[0], parts[1] - 1, parts[2]); \n        var now = new Date();\n        return ((now.getTime() - mydate.getTime())/(1000 * 3600 * 24)).toFixed(0)\n    }\n\n    const isMorning = () => {\n        var now = new Date();\n        var morningTime = new Date();\n        morningTime.setHours(11); morningTime.setMinutes(59);\n        return now.getTime() <= morningTime.getTime()\n    }\n\n    const isAtWork = () => {\n        var now = new Date();\n        var workStartTime = new Date();\n        workStartTime.setHours(8); workStartTime.setMinutes(0);\n        var workEndTime = new Date();\n        workEndTime.setHours(18); workEndTime.setMinutes(0);\n        return now.getTime() >= workStartTime.getTime() && now.getTime() <= workEndTime.getTime()\n    }\n\n    const isBeforeWork = () => {\n        var now = new Date();\n        var workStartTime = new Date();\n        workStartTime.setHours(8); workStartTime.setMinutes(0);\n        return now.getTime() < workStartTime.getTime()\n    }\n\n    const isAfterWork = () => {\n        var now = new Date();\n        var eveningTime = new Date();\n        eveningTime.setHours(18); eveningTime.setMinutes(0);\n        return now.getTime() >= eveningTime.getTime()\n    }\n\n    const timeLeftAtWork = () => {\n        var now = new Date();\n        var eveningTime = new Date();\n        eveningTime.setHours(18); eveningTime.setMinutes(0);\n        return eveningTime.getHours() - now.getHours()\n    }\n\n    const isPast = (someDate) => {\n        const today = new Date()\n        var parts = someDate.split('-')\n        var mydate = new Date(parts[0], parts[1] - 1, parts[2]); \n        today.setHours(0)\n        today.setMinutes(0)\n        today.setSeconds(0)\n        today.setMilliseconds(0)\n        return mydate < today\n    }\n\n    const isToday = (someDate) => {\n        const today = new Date()\n        var parts = someDate.split('-')\n        var mydate = new Date(parts[0], parts[1] - 1, parts[2]); \n        return mydate.getDate() == today.getDate() &&\n            mydate.getMonth() == today.getMonth() &&\n            mydate.getFullYear() == today.getFullYear()\n    }\n\n    const filterOldOpenTasks = (allTodos) => {\n        var oldOpen = allTodos.filter(function(t) {\n                        return isPast(JSON.parse(t.payload).deadline) && \n                        JSON.parse(t.payload).status != \"Completed\"\n                    });\n\n        return oldOpen;\n    }\n\n    const filterFutureOpenTasks = (allTodos) => {\n        var futureOpen = allTodos.filter(function(t) {\n                        return !isPast(JSON.parse(t.payload).deadline) && \n                        !isToday(JSON.parse(t.payload).deadline) &&\n                        JSON.parse(t.payload).status != \"Completed\"\n                    });\n\n        return futureOpen;\n    }\n\n    const filterTodaysTasks = (allTodos) => {\n        var todaystasks = allTodos.filter(function(t) {\n                        return isToday(JSON.parse(t.payload).deadline);\n                    });\n\n        return todaystasks;\n    }\n\n    const filterOpenTasks = (todaysTodos) => {\n        var completedTasks = todaysTodos.filter(function(t) {\n                        return JSON.parse(t.payload).status != \"Completed\";\n                    });\n\n        return completedTasks;\n    }\n\n    function displayAll(allTodos) {\n        let todaysTasks = filterTodaysTasks(allTodos)\n        let openTodaysTasks = filterOpenTasks(todaysTasks)\n        let oldOpenTasks = filterOldOpenTasks(allTodos)\n        let futureOpenTasks = filterFutureOpenTasks(allTodos)\n        return (\n            renderTasks(oldOpenTasks, openTodaysTasks, futureOpenTasks)\n        )\n    }\n\n    return <div className=\"task-list\">\n        {\n            displayAll(props.allTodos)\n        }\n    </div>;\n}","import React, { Component } from 'react';\nimport { Navbar, NavbarToggler, NavbarBrand, Nav, NavLink, Collapse } from 'reactstrap';\nimport { NavLink as RRNavLink } from 'react-router-dom';\n\nexport default class Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            isOpen: false\n        };\n    }\n    toggle() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n\n    render() {\n        return (\n            <Navbar dark expand=\"md\" style={{background:\"#213969\"}}>\n                <NavbarBrand href=\"/\"><span className=\"siteTitle\">ONE PLANNER</span></NavbarBrand>\n                <NavbarToggler onClick={this.toggle} />\n                <Collapse isOpen={this.state.isOpen} navbar>\n                    <Nav className=\"siteNav\" navbar>\n                        <NavLink to=\"/today\" tag={RRNavLink}>today's plan</NavLink>\n                        <NavLink to=\"/planner\" tag={RRNavLink}>planner</NavLink>\n                        <NavLink to=\"/past\" tag={RRNavLink}>past</NavLink>\n                    </Nav>\n                </Collapse>\n            </Navbar>\n        )\n    }\n}","export const ADD_TODO = 'ADD_TODO'\nexport const EDIT_TODO = 'EDIT_TODO'\nexport const DELETE_TODO = 'DELETE_TODO'\nexport const COMPLETE_TODO = 'COMPLETE_TODO'\nexport const COMPLETE_ALL_TODOS = 'COMPLETE_ALL_TODOS'\nexport const CLEAR_COMPLETED = 'CLEAR_COMPLETED'\nexport const SHOW_TODO = 'SHOW_TODO'","import * as types from '../constants/ActionTypes'\n\nexport const addTodo = payload => ({ type: types.ADD_TODO, payload })\nexport const editTodo = (id, payload) => ({ type: types.EDIT_TODO, id, payload })\nexport const deleteTodo = id => ({ type: types.DELETE_TODO, id })\nexport const completeTodo = id => ({ type: types.COMPLETE_TODO, id })\nexport const completeAllTodos = () => ({ type: types.COMPLETE_ALL_TODOS })\nexport const clearCompleted = () => ({ type: types.CLEAR_COMPLETED })","import {createSelector} from 'reselect';\n\nconst getTodos = state => state.todos\n\nexport const getAllTodos = createSelector(\n    [getTodos],\n    (todos) => {\n        return todos\n    }\n)","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as TodoActions from '../actions'\nimport Today from '../components/tasks/todaysplan'\nimport { getAllTodos } from '../selectors'\n\nconst mapStateToProps = state => ({\n  allTodos: getAllTodos(state)\n})\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n    ...bindActionCreators(TodoActions, dispatch)\n  }\n}\n\nconst TodaysPlan = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Today)\n\nexport default TodaysPlan","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Chip from '@material-ui/core/Chip';\nimport { grey, green } from '@material-ui/core/colors';\nimport Slide from '@material-ui/core/Slide';\nimport './todaysplan.css';\n\nconst useStyles = makeStyles(theme => ({\n        completed_tasks_card: {\n            backgroundColor: grey[200],\n            color: green[900],\n            padding: theme.spacing(3, 2),\n        },\n        completed_card: {\n            width: 270,\n            background: green[900],\n            color: 'white'\n        },\n        completed_card_content: {\n            height: 80,\n        },\n        font_style: {\n            fontFamily: ['Montserrat','sans-serif']\n        },\n        root: {\n            padding: theme.spacing(3, 2),\n        },\n    }));\n\nexport default function TodayCompleted(props) {\n    const classes = useStyles();\n\n    function renderCompletedTasks(completedTasks) {\n        if(completedTasks.length > 0) {\n            return (\n                <div>\n                    <Paper className={classes.completed_tasks_card} elevation={false}>\n                        <Typography variant=\"h4\" component=\"h4\" className={classes.font_style}>\n                            {\n                                \"Completed \" + (completedTasks.length) + \" tasks today..\"\n                            }\n                        </Typography>\n                    </Paper>\n                    <Grid className={classes.root} container spacing={5}>\n                    {\n                        completedTasks.map(renderCompletedTask)\n                    }\n                    </Grid>\n                </div>\n            );\n        }\n    }\n\n    function renderCompletedTask(task) {\n        let taskJson = JSON.parse(task.payload);\n        return (\n            <Grid key={taskJson.id} item>\n                <Slide direction=\"left\" in=\"true\" mountOnEnter unmountOnExit>\n                    <Card className={classes.completed_card} raised={true}>\n                        <CardContent className={classes.completed_card_content}>\n                            <Typography variant=\"h5\" component=\"h2\" className={classes.font_style}>\n                                {taskJson.title}\n                            </Typography>\n                        </CardContent>\n                        <CardActions>\n                            <Chip size=\"small\" className={classes.font_style} label={taskJson.category} />\n                        </CardActions>\n                    </Card>\n                </Slide>\n            </Grid>\n        );\n    }\n\n    const isToday = (someDate) => {\n        const today = new Date()\n        var parts = someDate.split('-')\n        var mydate = new Date(parts[0], parts[1] - 1, parts[2]); \n        return mydate.getDate() == today.getDate() &&\n            mydate.getMonth() == today.getMonth() &&\n            mydate.getFullYear() == today.getFullYear()\n    }\n\n    const filterTodaysTasks = (allTodos) => {\n        var todaystasks = allTodos.filter(function(t) {\n                        return isToday(JSON.parse(t.payload).deadline);\n                    });\n\n        return todaystasks;\n    }\n\n    const filterCompletedTasks = (todaysTodos) => {\n        var completedTasks = todaysTodos.filter(function(t) {\n                        return JSON.parse(t.payload).status == \"Completed\";\n                    });\n\n        return completedTasks;\n    }\n\n    function displayCompleted(allTodos) {\n        let todaysTasks = filterTodaysTasks(allTodos)\n        let completedTodaysTasks = filterCompletedTasks(todaysTasks)\n        return (\n            renderCompletedTasks(completedTodaysTasks)\n        )\n    }\n\n    return <div className=\"task-list\">\n        {\n            displayCompleted(props.allTodos)\n        }\n    </div>;\n}","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as TodoActions from '../actions'\nimport TodayCompleted from '../components/tasks/todayscompleted'\nimport { getAllTodos } from '../selectors'\n\nconst mapStateToProps = state => ({\n  allTodos: getAllTodos(state)\n})\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n    ...bindActionCreators(TodoActions, dispatch)\n  }\n}\n\nconst TodayCompletedPlan = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodayCompleted)\n\nexport default TodayCompletedPlan","import React, { Component } from 'react';\n\nimport TodayContainer from '../containers/TodayContainer';\nimport TodayCompletedContainer from '../containers/TodayCompletedContainer';\n\nexport default class Today extends Component {\n    render() {\n        return (\n            <div>\n                <TodayContainer></TodayContainer>\n                <TodayCompletedContainer></TodayCompletedContainer>\n            </div>\n        )\n    }\n}","import React, { useState } from 'react';\nimport { Button, Form, Input, Row, ButtonGroup, Col, InputGroup, InputGroupAddon } from 'reactstrap';\nimport { Card, CardBody, Spinner} from 'reactstrap';\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport Switch from '@material-ui/core/Switch';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport MaterialTable from 'material-table';\nimport { forwardRef } from 'react';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport { addTodo, editTodo, deleteTodo } from '../../actions';\nimport './plannerwidget.css';\n\nconst useStyles = makeStyles(theme => ({\n  fab: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    padding: theme.spacing(3, 2),\n  },\n}));\n\nexport default function PlannerWidget(props) {\n\n    const classes = useStyles();\n\n    const tableIcons = {\n        Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n        Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n        DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n        Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n        Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n        Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n        FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n        LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n        NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n        PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n        ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n        Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n        SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n        ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n        ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n    };\n\n    const [data, setData] = useState([]);\n    const [placeholdertitle, setPlaceholdertitle] = useState('Title');\n    const [loading, setLoading] = useState(false);\n    const [collapse, setCollapse] = useState(false);\n\n    function transformOneTask(task) {\n        var t_payload = JSON.parse(task.payload)\n        return {\n            id: task.id,\n            title: t_payload.title, \n            priority: t_payload.priority, \n            category: t_payload.category, \n            effort: \"\"+t_payload.effort, \n            deadline: \"\"+t_payload.deadline,\n            workLog: t_payload.workLog,\n            status: t_payload.status\n        }\n    }\n\n    function transformData(allTasks) {\n        var tr_data = allTasks.map(transformOneTask)\n\n        return tr_data;\n    }\n\n    function toggle() {\n      setCollapse(!collapse)\n    }\n\n    function handleTitleChange(event) {\n        setData({...data, title: event.target.value})\n    }\n\n    function handleFollowupChange(event) {\n        setData({...data, followup: event.target.checked})\n    }\n\n    function onPriorityBtnClick(priority) {\n        setData({...data, priority})\n    }\n\n    function onEffortBtnClick(effort) {\n        setData({...data, effort})\n    }\n\n    function onCatBtnClick(category) {\n        setData({...data, category})\n    }\n\n    function handleDeadlineChange(event) {\n        setData({...data, deadline: event.target.value})\n    }\n\n    function formatDate(date) {\n      var dateStr = date.toString()\n      if(date.toString().length < 12) return date\n\n      var d = date.getDate();\n      var m = date.getMonth()+1;\n      var y = date.getFullYear();\n\n      var formattedDate = y+\"-\"+(m <= 9 ? '0' + m : m)+\"-\"+(d <= 9 ? '0' + d : d)\n      console.log(\"Formatted: \"+formattedDate)\n      return formattedDate\n    }\n\n    function getCurrentDate() {\n      var curDate = new Date()\n      return curDate\n    }\n\n    Date.prototype.toJSON = function () {\n      var timezoneOffsetInHours = -(this.getTimezoneOffset() / 60); //UTC minus local time\n      var sign = timezoneOffsetInHours >= 0 ? '+' : '-';\n      var leadingZero = (Math.abs(timezoneOffsetInHours) < 10) ? '0' : '';\n    \n      //It's a bit unfortunate that we need to construct a new Date instance \n      //(we don't want _this_ Date instance to be modified)\n      var correctedDate = new Date(this.getFullYear(), this.getMonth(), \n          this.getDate(), this.getHours(), this.getMinutes(), this.getSeconds(), \n          this.getMilliseconds());\n      correctedDate.setHours(this.getHours() + timezoneOffsetInHours);\n      var iso = correctedDate.toISOString().replace('Z', '');\n    \n      return iso + sign + leadingZero + Math.abs(timezoneOffsetInHours).toString() + ':00';\n    }\n\n    function handleSubmit(event) {\n      setLoading(true)\n      data.status = \"Pending\";\n      if(!data.hasOwnProperty('deadline')) {\n        data.deadline = formatDate(getCurrentDate())\n      }\n\n      if(data.followup == true) {\n        data.effort = 0.1\n      }\n\n      if(!data.hasOwnProperty('workLog')) {\n        data.workLog = []\n      }\n\n      event.preventDefault();\n      var input = JSON.stringify(data);\n\n      console.log(input)\n\n      props.dispatch(addTodo(input))\n\n      setLoading(false)\n      setData({\n          'title':'',\n          'deadline':formatDate(getCurrentDate()),\n          'status': '',\n          'followup': false\n      })\n    }\n\n    function renderAddTaskButton() {\n      return (\n        <div>\n          <center>\n            <Fab className=\"btn\" color='secondary' size=\"small\" aria-label=\"add\">\n              <AddIcon color=\"white\" onClick={toggle} />\n            </Fab>\n\n            <Modal isOpen={collapse} size=\"lg\">\n              <Form onSubmit={handleSubmit}>\n                <ModalHeader>Add Task</ModalHeader>\n                <ModalBody>\n                  <Card outline color=\"secondary\">\n                    <CardBody>\n                      <Row>\n                        <Col>\n                            <Input className=\"TaskField\" type=\"text\" name=\"taskTitle\" id=\"taskTitle\" placeholder={placeholdertitle}\n                            value={data.title} onChange={handleTitleChange} />\n                        </Col>\n                      </Row>\n                      <br />\n                      <Row>\n                        <Col>\n                          <Switch\n                              onChange={handleFollowupChange}\n                              checked={data.followup}\n                              value=\"followup\"\n                              color=\"primary\"\n                          />\n                          Is Follow-up task?\n                        </Col>\n                      </Row>\n                      <br />\n                      <Row>\n                        <Col>\n                          <ButtonGroup >\n                            <Button color=\"secondary\" className=\"TaskField\" outline disabled>takes</Button>\n                            <Button color=\"info\" outline onClick={() => onEffortBtnClick(0.5)} active={data.effort === 0.5} disabled={data.followup}>0.5</Button>\n                            <Button color=\"info\" outline onClick={() => onEffortBtnClick(1)} active={data.effort === 1} disabled={data.followup}>1</Button>\n                            <Button color=\"info\" outline onClick={() => onEffortBtnClick(2)} active={data.effort === 2} disabled={data.followup}>2</Button>\n                            <Button color=\"info\" outline onClick={() => onEffortBtnClick(3)} active={data.effort === 3} disabled={data.followup}>3</Button>\n                            <Button color=\"info\" outline onClick={() => onEffortBtnClick(4)} active={data.effort === 4} disabled={data.followup}>4</Button>\n                            <Button color=\"info\" outline onClick={() => onEffortBtnClick(5)} active={data.effort === 5} disabled={data.followup}>5</Button>\n                            <Button color=\"info\" outline onClick={() => onEffortBtnClick(6)} active={data.effort === 6} disabled={data.followup}>6</Button>\n                            <Button color=\"secondary\" className=\"TaskField\" outline disabled>hours</Button>\n                          </ButtonGroup>\n                        </Col>\n                        <Col>\n                          <InputGroup>\n                            <InputGroupAddon className=\"TaskField\" addonType=\"prepend\">complete it by</InputGroupAddon>\n                            <Input className=\"TaskField\" type=\"date\" name=\"taskDeadline\" id=\"taskDeadline\" defaultValue={formatDate(getCurrentDate())}\n                            value={data.deadline} onChange={handleDeadlineChange}\n                            />\n                          </InputGroup>\n                        </Col>\n                      </Row>\n                      <br />\n                      <Row>\n                        <Col>\n                          <ButtonGroup>\n                            <Button color=\"secondary\" className=\"TaskField\" outline disabled>priority</Button>\n                            <Button color=\"danger\" outline onClick={() => onPriorityBtnClick(\"High\")} active={data.priority === \"High\"}>High</Button>\n                            <Button color=\"warning\" outline onClick={() => onPriorityBtnClick(\"Medium\")} active={data.priority === \"Medium\"}>Medium</Button>\n                            <Button color=\"info\" outline onClick={() => onPriorityBtnClick(\"Low\")} active={data.priority === \"Low\"}>Low</Button>\n                          </ButtonGroup>\n                        </Col>\n\n                        <Col>\n                          <ButtonGroup>\n                            <Button color=\"secondary\" className=\"TaskField\" outline disabled>category</Button>\n                            <Button color=\"danger\" outline onClick={() => onCatBtnClick(\"Work\")} active={data.category === \"Work\"}>Work</Button>\n                            <Button color=\"warning\" outline onClick={() => onCatBtnClick(\"Home\")} active={data.category === \"Home\"}>Home</Button>\n                            <Button color=\"info\" outline onClick={() => onCatBtnClick(\"Personal\")} active={data.category === \"Personal\"}>Personal</Button>\n                          </ButtonGroup>\n                        </Col>\n                        </Row>\n                    </CardBody> \n                  </Card>\n                </ModalBody>\n                <ModalFooter className=\"float-left\">\n                  {loading ? <Spinner color=\"primary\" className=\"SubmitButton\" /> : <Button color=\"primary\" size=\"lg\" className=\"SubmitButton\" >Submit</Button>}\n                  {' '}\n                  <Button color=\"danger\" size=\"lg\" onClick={toggle}>Close</Button>\n                </ModalFooter>\n              </Form>\n            </Modal>\n          </center>\n        </div>\n      )\n    }\n\n  const isPast = (someDate) => {\n      const today = new Date()\n      var parts = someDate.split('-')\n      var mydate = new Date(parts[0], parts[1] - 1, parts[2]); \n      today.setHours(0)\n      today.setMinutes(0)\n      today.setSeconds(0)\n      today.setMilliseconds(0)\n      return mydate < today\n  }\n\n  const filterData = (allTasks) => {\n      var filtered_data = allTasks.filter(function(t) {\n                      return JSON.parse(t.payload).status != \"Completed\"\n                      || !isPast(JSON.parse(t.payload).deadline)\n                  });\n\n      return filtered_data;\n  }\n\n  function renderWorkLogListItem(workLogEntry) {\n    return (\n      <ListItem>\n        <ListItemText primary={workLogEntry.start_time} secondary={workLogEntry.end_time}/>\n      </ListItem>\n    )\n  }\n\n  function renderWorkLog(rowData) {\n    var workLog = rowData.workLog\n\n    return (\n      <ExpansionPanel>\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n          {rowData.workLog.length + \" Entries\"}\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <List>\n            {\n              workLog.map(renderWorkLogListItem)\n            }\n          </List>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n        \n    )\n  }\n\n  function renderAllTasks(allTasks) {\n      var filtered_data = filterData(allTasks)\n      var tr_data = transformData(filtered_data)\n\n      const table_data = {\n          columns: [\n            { title: 'Title', field: 'title' },\n            { title: 'Priority', field: 'priority', \n              lookup: { 'High': \"High\", 'Medium': \"Medium\", 'Low': \"Low\" } },\n            { title: 'Category', field: 'category',\n              lookup: { 'Work': \"Work\", 'Home': \"Home\", 'Personal': \"Personal\" }},\n            { title: 'Effort', field: 'effort', filtering: false },\n            { title: 'Deadline', field: 'deadline', type: 'date', filtering: false },\n            { \n              title: 'Worklog', \n              field: 'workLog', \n              filtering: false, \n              render: rowData => renderWorkLog(rowData)\n            },\n            { title: 'Status', field: 'status',\n              lookup: { 'Pending': \"Pending\", 'InProgress': \"InProgress\", 'Completed': \"Completed\" }},\n          ],\n          data: tr_data,\n        };\n\n        return (\n          <MaterialTable\n            title=\"\"\n            columns={table_data.columns}\n            data={table_data.data}\n            icons={tableIcons}\n            options={\n              {\n                  headerStyle: {\n                      background: 'lightgray',\n                      color: '#213969'\n                  },\n                  search: false,\n                  toolbar: false,\n                  filtering: true,\n                  actionsColumnIndex: -1,\n                  paging: false,\n                  maxBodyHeight: 1000\n              }\n            }\n            editable={{\n              isEditable: rowData => rowData.status != 'Completed',\n              onRowUpdate: (newData, oldData) =>\n                new Promise(resolve => {\n                  setTimeout(() => {\n                    resolve();\n                    editTask(oldData.id, newData)\n                  }, 600);\n                }),\n              onRowDelete: oldData =>\n                new Promise(resolve => {\n                  setTimeout(() => {\n                    resolve();\n                    deleteTask(oldData.id)\n                  }, 600);\n                }),\n            }}\n            actions={[\n              rowData => ({\n                icon: 'check',\n                tooltip: 'Complete task',\n                onClick: (event, rowData) => \n                  new Promise(resolve => {\n                    setTimeout(() => {\n                      resolve();\n                      rowData.status = 'Completed'\n                      completeTask(rowData.id, rowData)\n                    }, 600);\n                  }),\n                disabled: rowData.status == 'Completed'\n              })\n            ]}\n          />\n        );\n    }\n\n    function completeTask(id, payload) {\n      var jsonPayload = JSON.stringify(payload)\n      props.dispatch(editTodo(id, jsonPayload))\n    }\n\n    function editTask(id, payload) {\n        payload.deadline = formatDate(payload.deadline)\n        var jsonPayload = JSON.stringify(payload)\n        props.dispatch(editTodo(id, jsonPayload))\n    }\n\n    function deleteTask(id) {\n        props.dispatch(deleteTodo(id))\n    }\n\n    return (<div className=\"task-list\">\n        <Grid justify='space-between' container className={classes.root}>\n          <Grid item>\n            <Typography variant=\"h4\" component=\"h4\">\n              You have {\n                props.allTodos.filter(function(t) {\n                  return JSON.parse(t.payload).status != 'Completed';\n                }).length\n              } open tasks.\n            </Typography>\n          </Grid>\n          <Grid item>\n            { \n              renderAddTaskButton()\n            }\n          </Grid>\n        </Grid>\n        {\n            renderAllTasks(props.allTodos)\n        }\n    </div>)\n}","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as TodoActions from '../actions'\nimport PlannerWidget from '../components/tasks/plannerwidget'\nimport { getAllTodos } from '../selectors'\n\nconst mapStateToProps = state => ({\n  allTodos: getAllTodos(state)\n})\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n    ...bindActionCreators(TodoActions, dispatch)\n  }\n}\n\nconst AllTodoList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PlannerWidget)\n\nexport default AllTodoList","import React, { Component } from 'react';\nimport PlannerWidgetContainer from '../containers/PlannerWidgetContainer';\n\nexport default class Planner extends Component {\n    render() {\n        return (\n            <div>\n                <PlannerWidgetContainer></PlannerWidgetContainer>\n            </div>\n        )\n    }\n}","import React, { useState } from 'react';\nimport { Button, Form, Input, Row, ButtonGroup, Col, InputGroup, InputGroupAddon } from 'reactstrap';\nimport { Card, CardBody, Spinner} from 'reactstrap';\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport Switch from '@material-ui/core/Switch';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport MaterialTable from 'material-table';\nimport { forwardRef } from 'react';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport Grid from '@material-ui/core/Grid';\n\nimport './plannerwidget.css';\n\nconst useStyles = makeStyles(theme => ({\n  fab: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    padding: theme.spacing(3, 2),\n  },\n}));\n\nexport default function PastWidget(props) {\n\n    const classes = useStyles();\n\n    const tableIcons = {\n        Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n        Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n        DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n        Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n        Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n        Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n        FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n        LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n        NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n        PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n        ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n        Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n        SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n        ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n        ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n    };\n\n    function transformOneTask(task) {\n        var t_payload = JSON.parse(task.payload)\n        return {\n            id: task.id,\n            title: t_payload.title, \n            category: t_payload.category, \n            effort: \"\"+t_payload.effort, \n            deadline: \"\"+t_payload.deadline\n        }\n    }\n\n    function transformData(allTasks) {\n        var tr_data = allTasks.map(transformOneTask)\n\n        return tr_data;\n    }\n\n    Date.prototype.toJSON = function () {\n      var timezoneOffsetInHours = -(this.getTimezoneOffset() / 60); //UTC minus local time\n      var sign = timezoneOffsetInHours >= 0 ? '+' : '-';\n      var leadingZero = (Math.abs(timezoneOffsetInHours) < 10) ? '0' : '';\n    \n      //It's a bit unfortunate that we need to construct a new Date instance \n      //(we don't want _this_ Date instance to be modified)\n      var correctedDate = new Date(this.getFullYear(), this.getMonth(), \n          this.getDate(), this.getHours(), this.getMinutes(), this.getSeconds(), \n          this.getMilliseconds());\n      correctedDate.setHours(this.getHours() + timezoneOffsetInHours);\n      var iso = correctedDate.toISOString().replace('Z', '');\n    \n      return iso + sign + leadingZero + Math.abs(timezoneOffsetInHours).toString() + ':00';\n    }\n    \n\n  const isPast = (someDate) => {\n      const today = new Date()\n      var parts = someDate.split('-')\n      var mydate = new Date(parts[0], parts[1] - 1, parts[2]); \n      today.setHours(0)\n      today.setMinutes(0)\n      today.setSeconds(0)\n      today.setMilliseconds(0)\n      return mydate < today\n  }\n\n  const filterData = (allTasks) => {\n      var filtered_data = allTasks.filter(function(t) {\n                      return JSON.parse(t.payload).status == \"Completed\"\n                      && isPast(JSON.parse(t.payload).deadline)\n                  });\n\n      return filtered_data;\n  }\n\n  function renderAllTasks(allTasks) {\n      var filtered_data = filterData(allTasks)\n      var tr_data = transformData(filtered_data)\n\n      const table_data = {\n          columns: [\n            { title: 'Title', field: 'title', grouping: false },\n            { title: 'Category', field: 'category',\n              lookup: { 'Work': \"Work\", 'Home': \"Home\", 'Personal': \"Personal\" }},\n            { title: 'Effort', field: 'effort', filtering: false },\n            { title: 'Deadline', field: 'deadline', type: 'date', filtering: false, defaultGroupOrder: 0 },\n          ],\n          data: tr_data,\n        };\n\n        return (\n          <MaterialTable\n            title=\"\"\n            columns={table_data.columns}\n            data={table_data.data}\n            icons={tableIcons}\n            options={\n              {\n                  headerStyle: {\n                      background: 'lightgray',\n                      color: '#213969'\n                  },\n                  search: false,\n                  toolbar: false,\n                  filtering: true,\n                  actionsColumnIndex: -1,\n                  paging: true,\n                  maxBodyHeight: 1000,\n                  grouping: true\n              }\n            }\n          />\n        );\n    }\n\n    return (<div className=\"task-list\">\n        {\n            renderAllTasks(props.allTodos)\n        }\n    </div>)\n}","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as TodoActions from '../actions'\nimport PastWidget from '../components/tasks/pastwidget'\nimport { getAllTodos } from '../selectors'\n\nconst mapStateToProps = state => ({\n  allTodos: getAllTodos(state)\n})\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n    ...bindActionCreators(TodoActions, dispatch)\n  }\n}\n\nconst AllTodoList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PastWidget)\n\nexport default AllTodoList","import React, { Component } from 'react';\nimport PastWidgetContainer from '../containers/PastWidgetContainer';\n\nexport default class Past extends Component {\n    render() {\n        return (\n            <div>\n                <PastWidgetContainer></PastWidgetContainer>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Switch, Route, HashRouter, Redirect } from 'react-router-dom';\nimport Today from './today';\nimport Planner from './planner';\nimport Past from './past';\nimport Settings from './settings';\n\nexport default class Main extends Component {\n\n    render() {\n        return (\n            <div className=\"content\">\n                <Switch>\n                    <Route path=\"/today\" component={Today}/>\n                    <Route path=\"/planner\" component={Planner}/>\n                    <Route path=\"/past\" component={Past}/>\n                    <Redirect exact from=\"/\" to=\"today\" />\n                </Switch>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\n\nexport default class Settings extends Component {\n    render() {\n        return (\n            <center>\n            <div>\n                Settings.\n            </div>\n            </center>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/header';\nimport Main from './components/main';\n\nclass App extends Component {\n  render() {\n    return (\n      <div id=\"colorlib-page\">\n        <div id=\"container-wrap\">\n          <Header></Header>\n          <Main></Main>\n      \t</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import {\n    ADD_TODO,\n    EDIT_TODO,\n    DELETE_TODO,\n    COMPLETE_TODO,\n    COMPLETE_ALL_TODOS,\n    CLEAR_COMPLETED\n  } from '../constants/ActionTypes'\n\nconst initialState = []\n\nexport default function todos(state = initialState, action) {\n    switch (action.type) {\n        case ADD_TODO:\n            return [\n                ...state,\n                {\n                    id: state.reduce((maxId, todo) => Math.max(todo.id, maxId), -1) + 1,\n                    payload: action.payload\n                }\n            ]\n        case EDIT_TODO:\n            return state.map(todo =>\n                todo.id === action.id ?\n                    { ...todo, payload: action.payload } :\n                    todo\n                )\n        case DELETE_TODO:\n            return state.filter(todo =>\n                todo.id !== action.id\n                )\n        default:\n            return state\n    }\n}","import { combineReducers } from 'redux'\nimport todos from './todos'\n\nconst rootReducer = combineReducers({\n    todos\n})\n\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { HashRouter } from 'react-router-dom';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\nimport rootReducer from './reducers'\nimport './index.css';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst store = createStore(persistedReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\nconst persistor = persistStore(store)\n\nReactDOM.render(\n  (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <HashRouter>\n          <App />\n        </HashRouter>\n      </PersistGate>\n    </Provider>),\n  document.getElementById('root')\n);\n"],"sourceRoot":""}