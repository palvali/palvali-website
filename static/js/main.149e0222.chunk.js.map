{"version":3,"sources":["components/header.jsx","constants/ActionTypes.js","actions/index.js","components/tasks/todaytaskscheduler.jsx","components/tasks/todaysplan.jsx","components/tasks/todaysplanstyles.jsx","selectors/index.js","containers/TodayContainer.js","components/tasks/todayscompleted.jsx","containers/TodayCompletedContainer.js","components/today.jsx","components/tasks/plannerwidget.jsx","containers/PlannerWidgetContainer.js","components/planner.jsx","components/tasks/pastwidget.jsx","containers/PastWidgetContainer.js","components/past.jsx","components/main.jsx","components/settings.jsx","App.js","reducers/todos.js","reducers/index.js","index.js"],"names":["Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","setState","react_default","a","createElement","Navbar","dark","expand","style","background","NavbarBrand","href","className","NavbarToggler","onClick","Collapse","navbar","Nav","NavLink","to","tag","RRNavLink","Component","ADD_TODO","EDIT_TODO","DELETE_TODO","addTodo","payload","type","types","editTodo","id","deleteTodo","completeTodo","completeAllTodos","clearCompleted","scheduleAtWork","oldOpenTasks","todaysOpenTasks","futureOpenTasks","reorderedTasks","timeLeft","timeLeftAtWork","oldWork","getTasksByCategory","todayWork","futureWork","Array","prototype","push","apply","i","totalEffort","getTotalEffort","reorderByPriority","console","log","length","futureTask","nonWorkTasks","reorderNonWorkTasks","scheduleAtHome","workTasks","oldWorkTasks","todayWorkTasks","openTasks","homeTasks","personalTasks","tasks","Number","JSON","parse","effort","high","getTasksByPriority","medium","low","category","filter","t","priority","property","mapping","now","Date","eveningTime","setHours","setMinutes","getHours","useStyles","makeStyles","theme","title_paper","backgroundColor","grey","padding","spacing","card","width","open_tasks_card","blue","followup_task_card_header","card_content","height","font_style","fontFamily","action_font_style","card_action","justifyContent","title","fontSize","avatar_red","red","avatar_blue","avatar_orange","orange","button_start","color","button_pause","button_complete","green","button_show_other_tasks","margin","marginLeft","expandOpen","transform","root","StyledAvatar","withStyles","default","_ref","classes","other","objectWithoutProperties","Avatar","assign","aria-label","BorderLinearProgress","lighten","bar","borderRadius","LinearProgress","getAllTodos","createSelector","todos","TodaysPlan","connect","allTodos","dispatch","objectSpread","bindActionCreators","TodoActions","_useState","useState","_useState2","slicedToArray","showNonWorkTasks","setShowNonWorkTasks","_useState3","_useState4","showNonWorkTasksTitle","setShowNonWorkTasksTitle","renderTasks","reorderedAllTasks","todaysTasks","numTodaysTasks","numTasksAtWork","isAtWork","isMorning","isAfterWork","getTitle","isBeforeWork","Grid","justify","container","item","Typography","variant","component","renderOpenTasksTitle","Button","startIcon","VerifiedUser_default","hidden","alignItems","map","renderTask","task","taskJson","key","Slide","direction","in","mountOnEnter","unmountOnExit","Card","raised","CardHeader","avatar","renderCategoryAvatar","CardContent","CardActions","disableSpacing","AssignmentTurnedIn_default","handleActionChange","renderFollowupTask","action","align","renderDeadlineWarningChip","renderEffortChip","renderPriorityChip","status","PlayArrow_default","xs","renderProgressChip","workLog","Pause_default","computeCompletionPercent","renderAction","renderOpenTask","avatar_color","Computer_default","Home_default","EmojiPeople_default","isToday","deadline","numDaysLeft","daysLeft","suffix","Chip","size","label","priority_color","animate","progress_in_percent","value","spentTime","start_time","end_time","getTime","toFixed","computeSpentTime","effort_color","effort_suffix","converted_effort","icon","AccessTime_default","newStatus","worklog_entry","date","toString","d","getDate","m","getMonth","getFullYear","formatDate","jsonPayload","stringify","editTask","useEffect","parts","split","mydate","Math","floor","morningTime","workStartTime","workEndTime","isPast","someDate","today","setSeconds","setMilliseconds","filterOldOpenTasks","filterFutureOpenTasks","filterTodaysTasks","filterOpenTasks","todaysTodos","openTodaysTasks","displayAll","completed_tasks_card","completed_card","completed_card_content","TodayCompletedPlan","renderCompletedTask","filterCompletedTasks","completedTasks","Paper","elevation","renderCompletedTasks","displayCompleted","Today","TodayContainer","TodayCompletedContainer","fab","AllTodoList","tableIcons","Add","forwardRef","ref","AddBox_default","Check","Check_default","Clear","Clear_default","Delete","DeleteOutline_default","DetailPanel","ChevronRight_default","Edit","Edit_default","Export","SaveAlt_default","Filter","FilterList_default","FirstPage","FirstPage_default","LastPage","LastPage_default","NextPage","PreviousPage","ChevronLeft_default","ResetSearch","Search","Search_default","SortArrow","ArrowUpward_default","ThirdStateCheck","Remove_default","ViewColumn","ViewColumn_default","data","setData","placeholdertitle","_useState5","_useState6","loading","setLoading","_useState7","_useState8","collapse","setCollapse","transformOneTask","t_payload","handleTitleChange","event","target","handleFollowupChange","followup","checked","onPriorityBtnClick","onEffortBtnClick","onCatBtnClick","handleDeadlineChange","formattedDate","getCurrentDate","handleSubmit","hasOwnProperty","preventDefault","input","toJSON","timezoneOffsetInHours","getTimezoneOffset","sign","leadingZero","abs","correctedDate","getMinutes","getSeconds","getMilliseconds","toISOString","replace","filterData","allTasks","renderWorkLogListItem","workLogEntry","ListItem","ListItemText","primary","secondary","Fab","Add_default","Modal","Form","onSubmit","ModalHeader","ModalBody","es_Card","outline","CardBody","Row","Col","Input","name","placeholder","onChange","Switch","ButtonGroup","es_Button","disabled","active","InputGroup","InputGroupAddon","addonType","defaultValue","ModalFooter","Spinner","table_data","columns","field","lookup","High","Medium","Low","Work","Home","Personal","filtering","render","rowData","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore_default","ExpansionPanelDetails","List","renderWorkLog","Pending","InProgress","Completed","transformData","dist_default","icons","options","headerStyle","search","toolbar","actionsColumnIndex","paging","maxBodyHeight","editable","isEditable","onRowUpdate","newData","oldData","Promise","resolve","setTimeout","onRowDelete","actions","tooltip","completeTask","renderAllTasks","Planner","PlannerWidgetContainer","grouping","defaultGroupOrder","Past","PastWidgetContainer","Main","react_router","path","exact","from","App","header_Header","main_Main","initialState","rootReducer","combineReducers","arguments","undefined","concat","toConsumableArray","reduce","maxId","todo","max","persistConfig","storage","persistedReducer","persistReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","ReactDOM","es","integration_react","react_router_dom","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.149e0222.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Navbar, NavbarToggler, NavbarBrand, Nav, NavLink, Collapse } from 'reactstrap';\nimport { NavLink as RRNavLink } from 'react-router-dom';\n\nexport default class Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            isOpen: false\n        };\n    }\n    toggle() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n\n    render() {\n        return (\n            <Navbar dark expand=\"md\" style={{background:\"#000000\"}}>\n                <NavbarBrand href=\"/\"><span className=\"siteTitle\">ONE PLANNER</span></NavbarBrand>\n                <NavbarToggler onClick={this.toggle} />\n                <Collapse isOpen={this.state.isOpen} navbar>\n                    <Nav className=\"siteNav\" navbar>\n                        <NavLink to=\"/today\" tag={RRNavLink}>today</NavLink>\n                        <NavLink to=\"/planner\" tag={RRNavLink}>planner</NavLink>\n                        <NavLink to=\"/past\" tag={RRNavLink}>past</NavLink>\n                    </Nav>\n                </Collapse>\n            </Navbar>\n        )\n    }\n}","export const ADD_TODO = 'ADD_TODO'\nexport const EDIT_TODO = 'EDIT_TODO'\nexport const DELETE_TODO = 'DELETE_TODO'\nexport const COMPLETE_TODO = 'COMPLETE_TODO'\nexport const COMPLETE_ALL_TODOS = 'COMPLETE_ALL_TODOS'\nexport const CLEAR_COMPLETED = 'CLEAR_COMPLETED'\nexport const SHOW_TODO = 'SHOW_TODO'","import * as types from '../constants/ActionTypes'\n\nexport const addTodo = payload => ({ type: types.ADD_TODO, payload })\nexport const editTodo = (id, payload) => ({ type: types.EDIT_TODO, id, payload })\nexport const deleteTodo = id => ({ type: types.DELETE_TODO, id })\nexport const completeTodo = id => ({ type: types.COMPLETE_TODO, id })\nexport const completeAllTodos = () => ({ type: types.COMPLETE_ALL_TODOS })\nexport const clearCompleted = () => ({ type: types.CLEAR_COMPLETED })","\nexport var scheduleAtWork = function(oldOpenTasks, todaysOpenTasks, futureOpenTasks) {\n    var reorderedTasks = []\n\n    var timeLeft = timeLeftAtWork()\n    \n    var oldWork = getTasksByCategory(oldOpenTasks, \"Work\")\n    var todayWork = getTasksByCategory(todaysOpenTasks, \"Work\")\n    var futureWork = getTasksByCategory(futureOpenTasks, \"Work\")\n\n    Array.prototype.push.apply(reorderedTasks, oldWork);\n    Array.prototype.push.apply(reorderedTasks, todayWork);\n\n    reorderedTasks = reorderByPriority(reorderedTasks)\n\n    var i = 0\n    var totalEffort = getTotalEffort(reorderedTasks)\n    futureWork = reorderByPriority(futureWork)\n\n    console.log(\"Total Effort: \"+totalEffort+\" hours, Time left: \"+timeLeft+\" hours\")\n    console.log(\"Current number of tasks: \"+reorderedTasks.length)\n\n    while (totalEffort < timeLeft && i < futureWork.length) {\n        var futureTask = futureWork[i]\n        reorderedTasks.push(futureTask)\n        totalEffort = getTotalEffort(reorderedTasks)\n        console.log(\"Added one task from future\")\n        i++\n    }\n    console.log(\"Returning tasks: \"+reorderedTasks.length)\n\n    var nonWorkTasks = reorderNonWorkTasks(oldOpenTasks, todaysOpenTasks, futureOpenTasks)\n    Array.prototype.push.apply(reorderedTasks, nonWorkTasks)\n\n    return reorderedTasks\n}\n\nexport var scheduleAtHome = function(oldOpenTasks, todaysOpenTasks, futureOpenTasks) {\n    var reorderedTasks = reorderNonWorkTasks(oldOpenTasks, todaysOpenTasks, futureOpenTasks)\n\n    var workTasks = []\n    var oldWorkTasks = getTasksByCategory(oldOpenTasks, \"Work\")\n    var todayWorkTasks = getTasksByCategory(todaysOpenTasks, \"Work\")\n    Array.prototype.push.apply(workTasks, oldWorkTasks)\n    Array.prototype.push.apply(workTasks, todayWorkTasks)\n    workTasks = reorderByPriority(workTasks)\n\n    Array.prototype.push.apply(reorderedTasks, workTasks)\n\n    return reorderedTasks\n}\n\nfunction reorderNonWorkTasks(oldOpenTasks, todaysOpenTasks, futureOpenTasks) {\n    var reorderedTasks = []\n\n    var openTasks = []\n\n    Array.prototype.push.apply(openTasks, oldOpenTasks)\n    Array.prototype.push.apply(openTasks, todaysOpenTasks)\n    Array.prototype.push.apply(openTasks, futureOpenTasks)\n\n    var homeTasks = getTasksByCategory(openTasks, \"Home\")\n    var personalTasks = getTasksByCategory(openTasks, \"Personal\")\n    \n    Array.prototype.push.apply(reorderedTasks, personalTasks)\n    Array.prototype.push.apply(reorderedTasks, homeTasks)\n\n    reorderedTasks = reorderByPriority(reorderedTasks)\n\n    return reorderedTasks\n}\n\nfunction getTotalEffort(tasks) {\n    var totalEffort = 0\n    for(var i=0; i<tasks.length; i++) {\n        var effort = Number(JSON.parse(tasks[i].payload).effort)\n        totalEffort += effort\n    }\n    return totalEffort\n}\n\nfunction reorderByPriority(tasks) {\n    var reorderedTasks = []\n\n    var high = getTasksByPriority(tasks, \"High\")\n    var medium = getTasksByPriority(tasks, \"Medium\")\n    var low = getTasksByPriority(tasks, \"Low\")\n\n    Array.prototype.push.apply(reorderedTasks, high);\n    Array.prototype.push.apply(reorderedTasks, medium);\n    Array.prototype.push.apply(reorderedTasks, low);\n\n    return reorderedTasks\n}\n\nfunction getTasksByCategory(tasks, category) {\n    var filteredTasks = tasks.filter(function(t) {\n        return JSON.parse(t.payload).category == category;\n    });\n\n    return filteredTasks;\n}\n\nfunction getTasksByPriority(tasks, priority) {\n    var filteredTasks = tasks.filter(function(t) {\n        return JSON.parse(t.payload).priority == priority;\n    });\n\n    return filteredTasks;\n}\n\nconst timeLeftAtWork = () => {\n    var now = new Date();\n    var eveningTime = new Date();\n    eveningTime.setHours(19); eveningTime.setMinutes(0);\n    return eveningTime.getHours() - now.getHours()\n}","import React, { useState, useEffect } from 'react';\nimport { lighten, withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid';\nimport Chip from '@material-ui/core/Chip';\nimport { red, grey, green } from '@material-ui/core/colors';\nimport { blue } from '@material-ui/core/colors';\nimport { orange } from '@material-ui/core/colors';\nimport HomeIcon from '@material-ui/icons/Home';\nimport EmojiPeopleIcon from '@material-ui/icons/EmojiPeople';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport ComputerIcon from '@material-ui/icons/Computer';\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport Slide from '@material-ui/core/Slide';\nimport { Progress } from 'reactstrap';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { editTodo } from '../../actions';\nimport './todaysplan.css';\nimport {scheduleAtWork, scheduleAtHome} from './todaytaskscheduler'\nimport {useStyles} from './todaysplanstyles'\n\nconst styledBy = (property, mapping) => props => mapping[props[property]];\n\nconst StyledAvatar = withStyles({\n    root: {\n        backgroundColor: styledBy('color', {\n            default: red[500],\n            blue: blue[500],\n            red: red[500],\n            green: green[500],\n            orange: orange[500],\n        })\n    },\n})(({ classes, color, ...other }) => <Avatar aria-label=\"recipe\" className={classes.root} {...other} />);\n\nconst BorderLinearProgress = withStyles({\n    root: {\n        height: 10,\n        backgroundColor: lighten('#ff6c5c', 0.5),\n    },\n    bar: {\n        borderRadius: 20,\n        backgroundColor: '#ff6c5c',\n    },\n})(LinearProgress);\n\nexport default function Today(props) {\n    const classes = useStyles();\n\n    const [showNonWorkTasks, setShowNonWorkTasks] = useState(false);\n    const [showNonWorkTasksTitle, setShowNonWorkTasksTitle] = useState('Show');\n\n    useEffect(() => {\n        if(showNonWorkTasks) setShowNonWorkTasksTitle('Hide')\n        else setShowNonWorkTasksTitle('Show')\n      });\n\n    function renderTasks(oldOpenTasks, todaysOpenTasks, futureOpenTasks) {\n\n        var dayVal = getDayVal()\n\n        var reorderedAllTasks\n        if(dayVal == \"AT_WORK\") {\n            reorderedAllTasks = scheduleAtWork(oldOpenTasks, todaysOpenTasks, futureOpenTasks)\n        } else {\n            reorderedAllTasks = scheduleAtHome(oldOpenTasks, todaysOpenTasks, futureOpenTasks)\n        }\n\n        var title = getTitle(reorderedAllTasks)\n\n        return (\n            <div>\n                { renderOpenTasksTitle(title) }\n                <Button className={classes.button_show_other_tasks}\n                    startIcon={<VerifiedUserIcon />}\n                    onClick={() => setShowNonWorkTasks(!showNonWorkTasks)}\n                    hidden={!isAtWork()}\n                    >\n                        <Typography className={classes.action_font_style}>\n                            {showNonWorkTasksTitle} non-work tasks\n                        </Typography>\n                </Button>\n                <Grid className={classes.root} container spacing={5} alignItems=\"center\">\n                {\n                    reorderedAllTasks.map(renderTask)\n                }\n                </Grid>\n            </div>\n        );\n    }\n\n    function renderTask(task) {\n        let taskJson = JSON.parse(task.payload);\n        if(isAtWork() && showNonWorkTasks == false && taskJson.category != 'Work') {\n            return;\n        }\n        if(taskJson.effort < 0.5) {\n            return (\n                renderFollowupTask(task)\n            )\n        } else {\n            return (\n                renderOpenTask(task)\n            )\n        }\n    }\n\n    function renderOpenTask(task) {\n        let taskJson = JSON.parse(task.payload);\n        return (\n            <Grid key={task.id} item>\n                <Slide direction=\"right\" in=\"false\" mountOnEnter unmountOnExit>\n                    <Card className={classes.card} raised={true}>\n                        <CardHeader \n                            avatar={renderCategoryAvatar(taskJson.category)}\n                            action={\n                                <div align=\"right\">\n                                    {renderDeadlineWarningChip(taskJson)}\n                                    {renderEffortChip(taskJson.effort)}\n                                    <br />\n                                    {renderPriorityChip(taskJson.priority)}\n                                </div>\n                            }\n                        />\n                        <CardContent className={classes.card_content}>\n                            <Typography variant=\"h5\" component=\"h2\" className={classes.font_style}>\n                                {taskJson.title}\n                            </Typography>\n                        </CardContent>\n                        <CardActions disableSpacing>\n                        {\n                            renderAction(task.id, taskJson.status, taskJson)\n                        }\n                        </CardActions>\n                    </Card>\n                </Slide>\n            </Grid>\n            );\n    }\n\n    function renderFollowupTask(task) {\n        let taskJson = JSON.parse(task.payload);\n        return (\n            <Grid key={task.id} item>\n                <Slide direction=\"right\" in=\"true\" mountOnEnter unmountOnExit>\n                    <Card className={classes.card} raised={true}>\n                        <CardHeader \n                            className={classes.followup_task_card_header}\n                            avatar={renderCategoryAvatar(taskJson.category)}\n                            title={\n                                <Typography variant=\"h5\" component=\"h5\" className={classes.font_style}>\n                                    Follow-up\n                                </Typography>\n                            }\n                        />\n                        <CardContent className={classes.card_content}>\n                            <Typography variant=\"h5\" component=\"h2\" className={classes.font_style}>\n                                {taskJson.title}\n                            </Typography>\n                        </CardContent>\n                        <CardActions disableSpacing>\n                            <Button \n                                className={classes.button_start}\n                                startIcon={<AssignmentTurnedInIcon />}\n                                onClick={() => handleActionChange(task.id, \"Completed\", taskJson)}>\n                                <Typography className={classes.action_font_style}>\n                                    Done\n                                </Typography>\n                            </Button>\n                        </CardActions>\n                    </Card>\n                </Slide>\n            </Grid>\n        );\n    }\n\n    function getDayVal() {\n        var dayVal\n        if(isBeforeWork()) dayVal = 'BEFORE_WORK'\n        else if(isAfterWork()) dayVal = 'AFTER_WORK'\n        else dayVal = 'AT_WORK'\n\n        return dayVal\n    }\n\n    function getTasksByCategory(tasks, category) {\n        var filteredTasks = tasks.filter(function(t) {\n            return JSON.parse(t.payload).category == category;\n        });\n\n        return filteredTasks;\n    }\n\n    function getTitle(todaysTasks) {\n        var title\n        var numTodaysTasks = todaysTasks.length\n        var numTasksAtWork = getTasksByCategory(todaysTasks, \"Work\").length\n        var timeLeft = timeLeftAtWork()\n        if(numTodaysTasks > 0) {\n            if(isAtWork()) {\n                if (numTasksAtWork == 0) {\n                    title = \"Plan your day at work.\"\n                } else {\n                    title = \"You have \" + (numTasksAtWork) + \" \"\n                    title += (numTasksAtWork == 1) ? \"task\" : \"tasks\"\n                    title += \" at work.\"\n                }\n                title += \" \" + timeLeft + \" hours left.\"\n            } else {\n                title = \"You have \" + (numTodaysTasks) + \" \"\n                title += (numTodaysTasks == 1) ? \"task\" : \"tasks\"\n                title += \" for the day.\"\n                if (numTasksAtWork > 0) {\n                    title += \" \"+(numTasksAtWork) + \" work tasks left.\"\n                }\n            }\n        } else if(isMorning()) {\n            title = \"Good Morning! Plan your day for today and get started.\"\n        } else if (isAfterWork()) {\n            title = \"No open tasks now!\"\n        } else {\n            title = timeLeftAtWork() +\" hours left at work. Everything done for now!\"\n        }\n        return title\n    }\n\n    function renderOpenTasksTitle(title) {\n        return (\n            <Grid justify='space-between' container className={classes.title_paper}>\n                <Grid item>\n                    <Typography variant=\"h4\" component=\"h4\" className={classes.font_style}>\n                        { title }\n                    </Typography>\n                </Grid>\n                {/* <Grid item>\n                    { renderDate() }\n                </Grid> */}\n            </Grid>\n        );\n    }\n\n    function renderCategoryAvatar(category) {\n        var avatar_color\n        if(category == 'Work') {\n            avatar_color='blue'\n            return (\n                <StyledAvatar color={avatar_color}> <ComputerIcon color=\"action\" /> </StyledAvatar>\n            );\n        }\n        if(category == 'Home') {\n            avatar_color='orange'\n            return (\n                <StyledAvatar color={avatar_color}> <HomeIcon color=\"action\" /> </StyledAvatar>\n            );\n        }\n        if(category == 'Personal') {\n            avatar_color='green'\n            return (\n                <StyledAvatar color={avatar_color}> <EmojiPeopleIcon color=\"action\" /> </StyledAvatar>\n            );\n        }\n    }\n\n    function renderDeadlineWarningChip(taskJson) {\n        if(isToday(taskJson.deadline)) {\n            return\n        } else {\n            var numDaysLeft = daysLeft(taskJson.deadline)\n            var suffix = (numDaysLeft == 1 || numDaysLeft == -1) ? \"day\" : \"days\"\n            if(numDaysLeft < 0) {\n                numDaysLeft *= -1\n                suffix = (numDaysLeft == 1)?\"day\":\"days\"\n                suffix += \" left\"\n                return (\n                    <div>\n                    <Chip className={classes.font_style} size=\"small\"  color=\"default\" \n                    label= {numDaysLeft + \" \" + suffix} />\n                    <br />\n                    </div>\n                );\n            }\n            suffix += \" late\"\n            return (\n                <div>\n                <Chip className={classes.font_style} size=\"small\"  color=\"secondary\" \n                label= {numDaysLeft + \" \" + suffix} />\n                <br />\n                </div>\n            );\n        }\n    }\n\n    function renderPriorityChip(priority) {\n        var priority_color\n        if(priority == 'High') {\n            priority_color='secondary'\n        }\n        if(priority == 'Medium') {\n            priority_color='primary'\n        }\n        if(priority == 'Low') {\n            priority_color='default'\n        }\n        return (\n            <Chip variant=\"outlined\" className={classes.font_style} size=\"small\"  color={priority_color} label={priority + \" Priority\"} />\n        );\n    }\n\n    function renderProgressChip(effort, workLog, animate) {\n        \n        var progress_in_percent = computeCompletionPercent(effort, workLog)\n        if(progress_in_percent >= 100) {\n            return (\n                <BorderLinearProgress variant=\"determinate\" color=\"danger\" value={100} />\n            )\n        }\n\n        if(animate) {\n            return (\n                <BorderLinearProgress variant=\"determinate\" color=\"primary\" value={progress_in_percent} />\n            );\n        } else {\n            return (\n                <LinearProgress variant=\"determinate\" color=\"primary\" value={progress_in_percent} />\n            );\n        }\n    }\n\n    function computeCompletionPercent(effort, workLog) {\n        var time_spent_in_mins = computeSpentTime(workLog)\n        var effort_in_mins = effort * 60\n\n        var progress_in_percent = ((time_spent_in_mins * 100)/effort_in_mins).toFixed(0)\n\n        return progress_in_percent\n    }\n\n    function renderEffortChip(effort) {\n        var effort_color\n        var effort_suffix = 'hours'\n        var converted_effort = effort\n        if(effort >= 3) {\n            effort_color='secondary'\n        }\n        if(effort < 3) {\n            effort_color='primary'\n        }\n        if(effort < 1) {\n            effort_color='default'\n        }\n        \n        if(effort == 1) effort_suffix = 'hour'\n        if(effort < 1) {\n            converted_effort = effort * 60\n            effort_suffix = 'minutes'\n        }\n\n        return (\n            <Chip size=\"small\" className={classes.font_style} color={effort_color} icon={<AccessTimeIcon />} label={converted_effort + \" \" + effort_suffix} />\n        );\n    }\n\n    function computeSpentTime(workLog) {\n        var spentTime = 0\n        for(var i=0; i<workLog.length; i++) {\n            var start_time = new Date(workLog[i]['start_time'])\n            var end_time = new Date()\n            if('end_time' in workLog[i]) {\n                end_time = new Date(workLog[i]['end_time'])\n            }\n            spentTime += (end_time.getTime() - start_time.getTime())\n        }\n        return (spentTime/(1000 * 60)).toFixed(0)\n    }\n\n    function handleActionChange(id, newStatus, task) {\n        task.status = newStatus\n        if(newStatus == 'InProgress') {\n            var worklog_entry = {\n                'start_time': new Date()\n            }\n            task.workLog.push(worklog_entry)\n        } else {\n            for(var i=0; i<task.workLog.length; i++) {\n                if(!('end_time' in task.workLog[i])) {\n                    task.workLog[i]['end_time'] = new Date()\n                }\n            }\n        }\n        editTask(id, task)\n    }\n\n    function renderAction(id, status, task) {\n        if(status == \"Pending\") {\n            return (\n                <Grid container spacing={1}>\n                    <Grid container justify='space-between'>\n                <Button \n                className={classes.button_start}\n                startIcon={<PlayArrowIcon />}\n                onClick={() => handleActionChange(id, \"InProgress\", task)}\n                >\n                    <Typography className={classes.action_font_style}>\n                        Start\n                    </Typography>\n                </Button>\n                </Grid>\n                <Grid item xs={12}>\n                        { renderProgressChip(task.effort, task.workLog, false) }\n                    </Grid>\n                </Grid>\n            );\n        }\n        if(status == \"InProgress\") {\n            return (\n                <Grid container spacing={1}>\n                    <Grid container justify='space-between'>\n                        <Button \n                            className={classes.button_pause}\n                            startIcon={<PauseIcon />}\n                            onClick={() => handleActionChange(id, \"Pending\", task)}>\n                                <Typography className={classes.action_font_style}>\n                                    { computeCompletionPercent(task.effort, task.workLog) + \"% done\" }\n                                </Typography>\n                        </Button>\n                        <Button \n                            className={classes.button_complete}\n                            startIcon={<AssignmentTurnedInIcon />}\n                            onClick={() => handleActionChange(id, \"Completed\", task)}>\n                                <Typography className={classes.action_font_style}>\n                                    Complete\n                                </Typography>\n                        </Button>\n                    </Grid>\n                    <Grid item xs={12}>\n                        { renderProgressChip(task.effort, task.workLog, true) }\n                    </Grid>\n                </Grid>\n            );\n        }\n    }\n\n    function formatDate(date) {\n        if(date.toString().length < 12) return date\n  \n        var d = date.getDate();\n        var m = date.getMonth()+1;\n        var y = date.getFullYear();\n  \n        var formattedDate = y+\"-\"+(m <= 9 ? '0' + m : m)+\"-\"+(d <= 9 ? '0' + d : d)\n        return formattedDate\n    }\n\n    function editTask(id, payload) {\n        payload.deadline = formatDate(payload.deadline)\n        var jsonPayload = JSON.stringify(payload)\n        props.dispatch(editTodo(id, jsonPayload))\n    }\n\n    const daysLeft = (deadline) => {\n        var parts = deadline.split('-')\n        var mydate = new Date(parts[0], parts[1] - 1, parts[2]); \n        var now = new Date();\n        return Math.floor(((now.getTime() - mydate.getTime())/(1000 * 3600 * 24))).toFixed(0)\n    }\n\n    const isMorning = () => {\n        var now = new Date();\n        var morningTime = new Date();\n        morningTime.setHours(11); morningTime.setMinutes(59);\n        return now.getTime() <= morningTime.getTime()\n    }\n\n    const isAtWork = () => {\n        var now = new Date();\n        var workStartTime = new Date();\n        workStartTime.setHours(8); workStartTime.setMinutes(0);\n        var workEndTime = new Date();\n        workEndTime.setHours(18); workEndTime.setMinutes(0);\n        return now.getTime() >= workStartTime.getTime() && now.getTime() <= workEndTime.getTime()\n    }\n\n    const isBeforeWork = () => {\n        var now = new Date();\n        var workStartTime = new Date();\n        workStartTime.setHours(8); workStartTime.setMinutes(0);\n        return now.getTime() < workStartTime.getTime()\n    }\n\n    const isAfterWork = () => {\n        var now = new Date();\n        var eveningTime = new Date();\n        eveningTime.setHours(18); eveningTime.setMinutes(0);\n        return now.getTime() >= eveningTime.getTime()\n    }\n\n    const timeLeftAtWork = () => {\n        var now = new Date();\n        var eveningTime = new Date();\n        eveningTime.setHours(18); eveningTime.setMinutes(0);\n        return eveningTime.getHours() - now.getHours()\n    }\n\n    const isPast = (someDate) => {\n        const today = new Date()\n        var parts = someDate.split('-')\n        var mydate = new Date(parts[0], parts[1] - 1, parts[2]); \n        today.setHours(0)\n        today.setMinutes(0)\n        today.setSeconds(0)\n        today.setMilliseconds(0)\n        return mydate < today\n    }\n\n    const isToday = (someDate) => {\n        const today = new Date()\n        var parts = someDate.split('-')\n        var mydate = new Date(parts[0], parts[1] - 1, parts[2]); \n        return mydate.getDate() == today.getDate() &&\n            mydate.getMonth() == today.getMonth() &&\n            mydate.getFullYear() == today.getFullYear()\n    }\n\n    const filterOldOpenTasks = (allTodos) => {\n        var oldOpen = allTodos.filter(function(t) {\n                        return isPast(JSON.parse(t.payload).deadline) && \n                        JSON.parse(t.payload).status != \"Completed\"\n                    });\n\n        return oldOpen;\n    }\n\n    const filterFutureOpenTasks = (allTodos) => {\n        var futureOpen = allTodos.filter(function(t) {\n                        return !isPast(JSON.parse(t.payload).deadline) && \n                        !isToday(JSON.parse(t.payload).deadline) &&\n                        JSON.parse(t.payload).status != \"Completed\"\n                    });\n\n        return futureOpen;\n    }\n\n    const filterTodaysTasks = (allTodos) => {\n        var todaystasks = allTodos.filter(function(t) {\n                        return isToday(JSON.parse(t.payload).deadline);\n                    });\n\n        return todaystasks;\n    }\n\n    const filterOpenTasks = (todaysTodos) => {\n        var completedTasks = todaysTodos.filter(function(t) {\n                        return JSON.parse(t.payload).status != \"Completed\";\n                    });\n\n        return completedTasks;\n    }\n\n    function displayAll(allTodos) {\n        let todaysTasks = filterTodaysTasks(allTodos)\n        let openTodaysTasks = filterOpenTasks(todaysTasks)\n        let oldOpenTasks = filterOldOpenTasks(allTodos)\n        let futureOpenTasks = filterFutureOpenTasks(allTodos)\n        return (\n            renderTasks(oldOpenTasks, openTodaysTasks, futureOpenTasks)\n        )\n    }\n\n    return <div className=\"task-list\">\n        {\n            displayAll(props.allTodos)\n        }\n    </div>;\n}","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { red, grey, green } from '@material-ui/core/colors';\nimport { blue } from '@material-ui/core/colors';\nimport { orange } from '@material-ui/core/colors';\nimport './todaysplan.css';\n\nexport const useStyles = makeStyles(theme => ({\n        title_paper: {\n            backgroundColor: grey[100],\n            padding: theme.spacing(3, 2),\n        },\n        card: {\n            width: 270,\n        },\n        open_tasks_card: {\n            backgroundColor: blue[50],\n            padding: theme.spacing(3, 2),\n        },\n        followup_task_card_header: {\n            backgroundColor: grey[400],\n        },\n        card_content: {\n            backgroundColor: grey[100],\n            height: 110,\n        },\n        font_style: {\n            fontFamily: ['Montserrat','sans-serif']\n        },\n        action_font_style: {\n            fontFamily: ['Karla','sans-serif']\n        },\n        card_action: {\n            justifyContent: \"flex-start\"\n        },\n        title: {\n            fontSize: 14,\n        },\n        avatar_red: {\n            backgroundColor: red[500],\n        },\n        avatar_blue: {\n            backgroundColor: blue[500],\n        },\n        avatar_orange: {\n            backgroundColor: orange[500],\n        },\n        button_start: {\n            color: 'black',\n        },\n        button_pause: {\n            color: 'red',\n            background: red[50]\n        },\n        button_complete: {\n            color: 'green',\n            background: green[50]\n        },\n        button_show_other_tasks: {\n            color: 'black',\n            margin: theme.spacing(1),\n        },\n        expand: {\n            marginLeft: 'auto',\n        },\n        expandOpen: {\n            transform: 'rotate(180deg)',\n        },\n        root: {\n            padding: theme.spacing(3, 2),\n        },\n    }));\n\n\n","import {createSelector} from 'reselect';\n\nconst getTodos = state => state.todos\n\nexport const getAllTodos = createSelector(\n    [getTodos],\n    (todos) => {\n        return todos\n    }\n)","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as TodoActions from '../actions'\nimport Today from '../components/tasks/todaysplan'\nimport { getAllTodos } from '../selectors'\n\nconst mapStateToProps = state => ({\n  allTodos: getAllTodos(state)\n})\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n    ...bindActionCreators(TodoActions, dispatch)\n  }\n}\n\nconst TodaysPlan = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Today)\n\nexport default TodaysPlan","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Chip from '@material-ui/core/Chip';\nimport { grey, green } from '@material-ui/core/colors';\nimport Slide from '@material-ui/core/Slide';\nimport './todaysplan.css';\n\nconst useStyles = makeStyles(theme => ({\n        completed_tasks_card: {\n            backgroundColor: grey[200],\n            color: grey[900],\n            padding: theme.spacing(3, 2),\n        },\n        completed_card: {\n            width: 270,\n            background: grey[800],\n            color: 'white'\n        },\n        completed_card_content: {\n            height: 80,\n        },\n        font_style: {\n            fontFamily: ['Montserrat','sans-serif']\n        },\n        root: {\n            padding: theme.spacing(3, 2),\n        },\n    }));\n\nexport default function TodayCompleted(props) {\n    const classes = useStyles();\n\n    function renderCompletedTasks(completedTasks) {\n        if(completedTasks.length > 0) {\n            return (\n                <div>\n                    <Paper className={classes.completed_tasks_card} elevation={false}>\n                        <Typography variant=\"h4\" component=\"h4\" className={classes.font_style}>\n                            {\n                                \"Completed \" + (completedTasks.length) + \" tasks today..\"\n                            }\n                        </Typography>\n                    </Paper>\n                    <Grid className={classes.root} container spacing={5}>\n                    {\n                        completedTasks.map(renderCompletedTask)\n                    }\n                    </Grid>\n                </div>\n            );\n        }\n    }\n\n    function renderCompletedTask(task) {\n        let taskJson = JSON.parse(task.payload);\n        return (\n            <Grid key={taskJson.id} item>\n                <Slide direction=\"left\" in=\"true\" mountOnEnter unmountOnExit>\n                    <Card className={classes.completed_card} raised={true}>\n                        <CardContent className={classes.completed_card_content}>\n                            <Typography variant=\"h5\" component=\"h2\" className={classes.font_style}>\n                                {taskJson.title}\n                            </Typography>\n                        </CardContent>\n                        <CardActions>\n                            <Chip size=\"small\" className={classes.font_style} label={taskJson.category} />\n                        </CardActions>\n                    </Card>\n                </Slide>\n            </Grid>\n        );\n    }\n\n    const isToday = (someDate) => {\n        const today = new Date()\n        var parts = someDate.split('-')\n        var mydate = new Date(parts[0], parts[1] - 1, parts[2]); \n        return mydate.getDate() == today.getDate() &&\n            mydate.getMonth() == today.getMonth() &&\n            mydate.getFullYear() == today.getFullYear()\n    }\n\n    const filterTodaysTasks = (allTodos) => {\n        var todaystasks = allTodos.filter(function(t) {\n                        return isToday(JSON.parse(t.payload).deadline);\n                    });\n\n        return todaystasks;\n    }\n\n    const filterCompletedTasks = (todaysTodos) => {\n        var completedTasks = todaysTodos.filter(function(t) {\n                        return JSON.parse(t.payload).status == \"Completed\";\n                    });\n\n        return completedTasks;\n    }\n\n    function displayCompleted(allTodos) {\n        let todaysTasks = filterTodaysTasks(allTodos)\n        let completedTodaysTasks = filterCompletedTasks(todaysTasks)\n        return (\n            renderCompletedTasks(completedTodaysTasks)\n        )\n    }\n\n    return <div className=\"task-list\">\n        {\n            displayCompleted(props.allTodos)\n        }\n    </div>;\n}","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as TodoActions from '../actions'\nimport TodayCompleted from '../components/tasks/todayscompleted'\nimport { getAllTodos } from '../selectors'\n\nconst mapStateToProps = state => ({\n  allTodos: getAllTodos(state)\n})\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n    ...bindActionCreators(TodoActions, dispatch)\n  }\n}\n\nconst TodayCompletedPlan = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodayCompleted)\n\nexport default TodayCompletedPlan","import React, { Component } from 'react';\n\nimport TodayContainer from '../containers/TodayContainer';\nimport TodayCompletedContainer from '../containers/TodayCompletedContainer';\n\nexport default class Today extends Component {\n    render() {\n        return (\n            <div>\n                <TodayContainer></TodayContainer>\n                <TodayCompletedContainer></TodayCompletedContainer>\n            </div>\n        )\n    }\n}","import React, { useState } from 'react';\nimport { Button, Form, Input, Row, ButtonGroup, Col, InputGroup, InputGroupAddon } from 'reactstrap';\nimport { Card, CardBody, Spinner} from 'reactstrap';\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport Switch from '@material-ui/core/Switch';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport MaterialTable from 'material-table';\nimport { forwardRef } from 'react';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport { addTodo, editTodo, deleteTodo } from '../../actions';\nimport './plannerwidget.css';\n\nconst useStyles = makeStyles(theme => ({\n  fab: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    padding: theme.spacing(3, 2),\n  },\n}));\n\nexport default function PlannerWidget(props) {\n\n    const classes = useStyles();\n\n    const tableIcons = {\n        Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n        Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n        DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n        Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n        Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n        Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n        FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n        LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n        NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n        PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n        ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n        Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n        SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n        ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n        ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n    };\n\n    const [data, setData] = useState([]);\n    const [placeholdertitle, setPlaceholdertitle] = useState('Title');\n    const [loading, setLoading] = useState(false);\n    const [collapse, setCollapse] = useState(false);\n\n    function transformOneTask(task) {\n        var t_payload = JSON.parse(task.payload)\n        return {\n            id: task.id,\n            title: t_payload.title, \n            priority: t_payload.priority, \n            category: t_payload.category, \n            effort: \"\"+t_payload.effort, \n            deadline: \"\"+t_payload.deadline,\n            workLog: t_payload.workLog,\n            status: t_payload.status\n        }\n    }\n\n    function transformData(allTasks) {\n        var tr_data = allTasks.map(transformOneTask)\n\n        return tr_data;\n    }\n\n    function toggle() {\n      setCollapse(!collapse)\n    }\n\n    function handleTitleChange(event) {\n        setData({...data, title: event.target.value})\n    }\n\n    function handleFollowupChange(event) {\n        setData({...data, followup: event.target.checked})\n    }\n\n    function onPriorityBtnClick(priority) {\n        setData({...data, priority})\n    }\n\n    function onEffortBtnClick(effort) {\n        setData({...data, effort})\n    }\n\n    function onCatBtnClick(category) {\n        setData({...data, category})\n    }\n\n    function handleDeadlineChange(event) {\n        setData({...data, deadline: event.target.value})\n    }\n\n    function formatDate(date) {\n      var dateStr = date.toString()\n      if(date.toString().length < 12) return date\n\n      var d = date.getDate();\n      var m = date.getMonth()+1;\n      var y = date.getFullYear();\n\n      var formattedDate = y+\"-\"+(m <= 9 ? '0' + m : m)+\"-\"+(d <= 9 ? '0' + d : d)\n      console.log(\"Formatted: \"+formattedDate)\n      return formattedDate\n    }\n\n    function getCurrentDate() {\n      var curDate = new Date()\n      return curDate\n    }\n\n    Date.prototype.toJSON = function () {\n      var timezoneOffsetInHours = -(this.getTimezoneOffset() / 60); //UTC minus local time\n      var sign = timezoneOffsetInHours >= 0 ? '+' : '-';\n      var leadingZero = (Math.abs(timezoneOffsetInHours) < 10) ? '0' : '';\n    \n      //It's a bit unfortunate that we need to construct a new Date instance \n      //(we don't want _this_ Date instance to be modified)\n      var correctedDate = new Date(this.getFullYear(), this.getMonth(), \n          this.getDate(), this.getHours(), this.getMinutes(), this.getSeconds(), \n          this.getMilliseconds());\n      correctedDate.setHours(this.getHours() + timezoneOffsetInHours);\n      var iso = correctedDate.toISOString().replace('Z', '');\n    \n      return iso + sign + leadingZero + Math.abs(timezoneOffsetInHours).toString() + ':00';\n    }\n\n    function handleSubmit(event) {\n      setLoading(true)\n      data.status = \"Pending\";\n      if(!data.hasOwnProperty('deadline')) {\n        data.deadline = formatDate(getCurrentDate())\n      }\n\n      if(data.followup == true) {\n        data.effort = 0.1\n      }\n\n      if(!data.hasOwnProperty('workLog')) {\n        data.workLog = []\n      }\n\n      event.preventDefault();\n      var input = JSON.stringify(data);\n\n      console.log(input)\n\n      props.dispatch(addTodo(input))\n\n      setLoading(false)\n      setData({\n          'title':'',\n          'deadline':formatDate(getCurrentDate()),\n          'status': '',\n          'followup': false\n      })\n    }\n\n    function renderAddTaskButton() {\n      return (\n        <div>\n          <center>\n            <Fab className=\"btn\" color='secondary' size=\"small\" aria-label=\"add\">\n              <AddIcon color=\"white\" onClick={toggle} />\n            </Fab>\n\n            <Modal isOpen={collapse} size=\"lg\">\n              <Form onSubmit={handleSubmit}>\n                <ModalHeader>Add Task</ModalHeader>\n                <ModalBody>\n                  <Card outline color=\"secondary\">\n                    <CardBody>\n                      <Row>\n                        <Col>\n                            <Input className=\"TaskField\" type=\"text\" name=\"taskTitle\" id=\"taskTitle\" placeholder={placeholdertitle}\n                            value={data.title} onChange={handleTitleChange} />\n                        </Col>\n                      </Row>\n                      <br />\n                      <Row>\n                        <Col>\n                          <Switch\n                              onChange={handleFollowupChange}\n                              checked={data.followup}\n                              value=\"followup\"\n                              color=\"primary\"\n                          />\n                          Is Follow-up task?\n                        </Col>\n                      </Row>\n                      <br />\n                      <Row>\n                        <Col>\n                          <ButtonGroup >\n                            <Button color=\"secondary\" className=\"TaskField\" outline disabled>takes</Button>\n                            <Button color=\"info\" outline onClick={() => onEffortBtnClick(0.5)} active={data.effort === 0.5} disabled={data.followup}>0.5</Button>\n                            <Button color=\"info\" outline onClick={() => onEffortBtnClick(1)} active={data.effort === 1} disabled={data.followup}>1</Button>\n                            <Button color=\"info\" outline onClick={() => onEffortBtnClick(2)} active={data.effort === 2} disabled={data.followup}>2</Button>\n                            <Button color=\"info\" outline onClick={() => onEffortBtnClick(3)} active={data.effort === 3} disabled={data.followup}>3</Button>\n                            <Button color=\"info\" outline onClick={() => onEffortBtnClick(4)} active={data.effort === 4} disabled={data.followup}>4</Button>\n                            <Button color=\"info\" outline onClick={() => onEffortBtnClick(5)} active={data.effort === 5} disabled={data.followup}>5</Button>\n                            <Button color=\"info\" outline onClick={() => onEffortBtnClick(6)} active={data.effort === 6} disabled={data.followup}>6</Button>\n                            <Button color=\"secondary\" className=\"TaskField\" outline disabled>hours</Button>\n                          </ButtonGroup>\n                        </Col>\n                        <Col>\n                          <InputGroup>\n                            <InputGroupAddon className=\"TaskField\" addonType=\"prepend\">complete it by</InputGroupAddon>\n                            <Input className=\"TaskField\" type=\"date\" name=\"taskDeadline\" id=\"taskDeadline\" defaultValue={formatDate(getCurrentDate())}\n                            value={data.deadline} onChange={handleDeadlineChange}\n                            />\n                          </InputGroup>\n                        </Col>\n                      </Row>\n                      <br />\n                      <Row>\n                        <Col>\n                          <ButtonGroup>\n                            <Button color=\"secondary\" className=\"TaskField\" outline disabled>priority</Button>\n                            <Button color=\"danger\" outline onClick={() => onPriorityBtnClick(\"High\")} active={data.priority === \"High\"}>High</Button>\n                            <Button color=\"warning\" outline onClick={() => onPriorityBtnClick(\"Medium\")} active={data.priority === \"Medium\"}>Medium</Button>\n                            <Button color=\"info\" outline onClick={() => onPriorityBtnClick(\"Low\")} active={data.priority === \"Low\"}>Low</Button>\n                          </ButtonGroup>\n                        </Col>\n\n                        <Col>\n                          <ButtonGroup>\n                            <Button color=\"secondary\" className=\"TaskField\" outline disabled>category</Button>\n                            <Button color=\"danger\" outline onClick={() => onCatBtnClick(\"Work\")} active={data.category === \"Work\"}>Work</Button>\n                            <Button color=\"warning\" outline onClick={() => onCatBtnClick(\"Home\")} active={data.category === \"Home\"}>Home</Button>\n                            <Button color=\"info\" outline onClick={() => onCatBtnClick(\"Personal\")} active={data.category === \"Personal\"}>Personal</Button>\n                          </ButtonGroup>\n                        </Col>\n                        </Row>\n                    </CardBody> \n                  </Card>\n                </ModalBody>\n                <ModalFooter className=\"float-left\">\n                  {loading ? <Spinner color=\"primary\" className=\"SubmitButton\" /> : <Button color=\"primary\" size=\"lg\" className=\"SubmitButton\" >Submit</Button>}\n                  {' '}\n                  <Button color=\"danger\" size=\"lg\" onClick={toggle}>Close</Button>\n                </ModalFooter>\n              </Form>\n            </Modal>\n          </center>\n        </div>\n      )\n    }\n\n  const isPast = (someDate) => {\n      const today = new Date()\n      var parts = someDate.split('-')\n      var mydate = new Date(parts[0], parts[1] - 1, parts[2]); \n      today.setHours(0)\n      today.setMinutes(0)\n      today.setSeconds(0)\n      today.setMilliseconds(0)\n      return mydate < today\n  }\n\n  const filterData = (allTasks) => {\n      var filtered_data = allTasks.filter(function(t) {\n                      return JSON.parse(t.payload).status != \"Completed\"\n                      || !isPast(JSON.parse(t.payload).deadline)\n                  });\n\n      return filtered_data;\n  }\n\n  function renderWorkLogListItem(workLogEntry) {\n    return (\n      <ListItem>\n        <ListItemText primary={workLogEntry.start_time} secondary={workLogEntry.end_time}/>\n      </ListItem>\n    )\n  }\n\n  function renderWorkLog(rowData) {\n    var workLog = rowData.workLog\n\n    return (\n      <ExpansionPanel>\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n          {rowData.workLog.length + \" Entries\"}\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <List>\n            {\n              workLog.map(renderWorkLogListItem)\n            }\n          </List>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n        \n    )\n  }\n\n  function renderAllTasks(allTasks) {\n      var filtered_data = filterData(allTasks)\n      var tr_data = transformData(filtered_data)\n\n      const table_data = {\n          columns: [\n            { title: 'Title', field: 'title' },\n            { title: 'Priority', field: 'priority', \n              lookup: { 'High': \"High\", 'Medium': \"Medium\", 'Low': \"Low\" } },\n            { title: 'Category', field: 'category',\n              lookup: { 'Work': \"Work\", 'Home': \"Home\", 'Personal': \"Personal\" }},\n            { title: 'Effort', field: 'effort', filtering: false },\n            { title: 'Deadline', field: 'deadline', type: 'date', filtering: false },\n            { \n              title: 'Worklog', \n              field: 'workLog', \n              filtering: false, \n              render: rowData => renderWorkLog(rowData)\n            },\n            { title: 'Status', field: 'status',\n              lookup: { 'Pending': \"Pending\", 'InProgress': \"InProgress\", 'Completed': \"Completed\" }},\n          ],\n          data: tr_data,\n        };\n\n        return (\n          <MaterialTable\n            title=\"\"\n            columns={table_data.columns}\n            data={table_data.data}\n            icons={tableIcons}\n            options={\n              {\n                  headerStyle: {\n                      background: 'lightgray',\n                      color: '#213969'\n                  },\n                  search: false,\n                  toolbar: false,\n                  filtering: true,\n                  actionsColumnIndex: -1,\n                  paging: false,\n                  maxBodyHeight: 1000\n              }\n            }\n            editable={{\n              isEditable: rowData => rowData.status != 'Completed',\n              onRowUpdate: (newData, oldData) =>\n                new Promise(resolve => {\n                  setTimeout(() => {\n                    resolve();\n                    editTask(oldData.id, newData)\n                  }, 600);\n                }),\n              onRowDelete: oldData =>\n                new Promise(resolve => {\n                  setTimeout(() => {\n                    resolve();\n                    deleteTask(oldData.id)\n                  }, 600);\n                }),\n            }}\n            actions={[\n              rowData => ({\n                icon: 'check',\n                tooltip: 'Complete task',\n                onClick: (event, rowData) => \n                  new Promise(resolve => {\n                    setTimeout(() => {\n                      resolve();\n                      rowData.status = 'Completed'\n                      completeTask(rowData.id, rowData)\n                    }, 600);\n                  }),\n                disabled: rowData.status == 'Completed'\n              })\n            ]}\n          />\n        );\n    }\n\n    function completeTask(id, payload) {\n      var jsonPayload = JSON.stringify(payload)\n      props.dispatch(editTodo(id, jsonPayload))\n    }\n\n    function editTask(id, payload) {\n        payload.deadline = formatDate(payload.deadline)\n        var jsonPayload = JSON.stringify(payload)\n        props.dispatch(editTodo(id, jsonPayload))\n    }\n\n    function deleteTask(id) {\n        props.dispatch(deleteTodo(id))\n    }\n\n    return (<div className=\"task-list\">\n        <Grid justify='space-between' container className={classes.root}>\n          <Grid item>\n            <Typography variant=\"h4\" component=\"h4\">\n              You have {\n                props.allTodos.filter(function(t) {\n                  return JSON.parse(t.payload).status != 'Completed';\n                }).length\n              } open tasks.\n            </Typography>\n          </Grid>\n          <Grid item>\n            { \n              renderAddTaskButton()\n            }\n          </Grid>\n        </Grid>\n        {\n            renderAllTasks(props.allTodos)\n        }\n    </div>)\n}","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as TodoActions from '../actions'\nimport PlannerWidget from '../components/tasks/plannerwidget'\nimport { getAllTodos } from '../selectors'\n\nconst mapStateToProps = state => ({\n  allTodos: getAllTodos(state)\n})\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n    ...bindActionCreators(TodoActions, dispatch)\n  }\n}\n\nconst AllTodoList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PlannerWidget)\n\nexport default AllTodoList","import React, { Component } from 'react';\nimport PlannerWidgetContainer from '../containers/PlannerWidgetContainer';\n\nexport default class Planner extends Component {\n    render() {\n        return (\n            <div>\n                <PlannerWidgetContainer></PlannerWidgetContainer>\n            </div>\n        )\n    }\n}","import React, { useState } from 'react';\nimport { Button, Form, Input, Row, ButtonGroup, Col, InputGroup, InputGroupAddon } from 'reactstrap';\nimport { Card, CardBody, Spinner} from 'reactstrap';\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport Switch from '@material-ui/core/Switch';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport MaterialTable from 'material-table';\nimport { forwardRef } from 'react';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport Grid from '@material-ui/core/Grid';\n\nimport './plannerwidget.css';\n\nconst useStyles = makeStyles(theme => ({\n  fab: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    padding: theme.spacing(3, 2),\n  },\n}));\n\nexport default function PastWidget(props) {\n\n    const classes = useStyles();\n\n    const tableIcons = {\n        Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n        Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n        DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n        Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n        Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n        Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n        FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n        LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n        NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n        PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n        ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n        Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n        SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n        ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n        ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n    };\n\n    function transformOneTask(task) {\n        var t_payload = JSON.parse(task.payload)\n        return {\n            id: task.id,\n            title: t_payload.title, \n            category: t_payload.category, \n            effort: \"\"+t_payload.effort, \n            deadline: \"\"+t_payload.deadline\n        }\n    }\n\n    function transformData(allTasks) {\n        var tr_data = allTasks.map(transformOneTask)\n\n        return tr_data;\n    }\n\n    Date.prototype.toJSON = function () {\n      var timezoneOffsetInHours = -(this.getTimezoneOffset() / 60); //UTC minus local time\n      var sign = timezoneOffsetInHours >= 0 ? '+' : '-';\n      var leadingZero = (Math.abs(timezoneOffsetInHours) < 10) ? '0' : '';\n    \n      //It's a bit unfortunate that we need to construct a new Date instance \n      //(we don't want _this_ Date instance to be modified)\n      var correctedDate = new Date(this.getFullYear(), this.getMonth(), \n          this.getDate(), this.getHours(), this.getMinutes(), this.getSeconds(), \n          this.getMilliseconds());\n      correctedDate.setHours(this.getHours() + timezoneOffsetInHours);\n      var iso = correctedDate.toISOString().replace('Z', '');\n    \n      return iso + sign + leadingZero + Math.abs(timezoneOffsetInHours).toString() + ':00';\n    }\n    \n\n  const isPast = (someDate) => {\n      const today = new Date()\n      var parts = someDate.split('-')\n      var mydate = new Date(parts[0], parts[1] - 1, parts[2]); \n      today.setHours(0)\n      today.setMinutes(0)\n      today.setSeconds(0)\n      today.setMilliseconds(0)\n      return mydate < today\n  }\n\n  const filterData = (allTasks) => {\n      var filtered_data = allTasks.filter(function(t) {\n                      return JSON.parse(t.payload).status == \"Completed\"\n                      && isPast(JSON.parse(t.payload).deadline)\n                  });\n\n      return filtered_data;\n  }\n\n  function renderAllTasks(allTasks) {\n      var filtered_data = filterData(allTasks)\n      var tr_data = transformData(filtered_data)\n\n      const table_data = {\n          columns: [\n            { title: 'Title', field: 'title', grouping: false },\n            { title: 'Category', field: 'category',\n              lookup: { 'Work': \"Work\", 'Home': \"Home\", 'Personal': \"Personal\" }},\n            { title: 'Effort', field: 'effort', filtering: false },\n            { title: 'Deadline', field: 'deadline', type: 'date', filtering: false, defaultGroupOrder: 0 },\n          ],\n          data: tr_data,\n        };\n\n        return (\n          <MaterialTable\n            title=\"\"\n            columns={table_data.columns}\n            data={table_data.data}\n            icons={tableIcons}\n            options={\n              {\n                  headerStyle: {\n                      background: 'lightgray',\n                      color: '#213969'\n                  },\n                  search: false,\n                  toolbar: false,\n                  filtering: true,\n                  actionsColumnIndex: -1,\n                  paging: true,\n                  maxBodyHeight: 1000,\n                  grouping: true\n              }\n            }\n          />\n        );\n    }\n\n    return (<div className=\"task-list\">\n        {\n            renderAllTasks(props.allTodos)\n        }\n    </div>)\n}","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as TodoActions from '../actions'\nimport PastWidget from '../components/tasks/pastwidget'\nimport { getAllTodos } from '../selectors'\n\nconst mapStateToProps = state => ({\n  allTodos: getAllTodos(state)\n})\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n    ...bindActionCreators(TodoActions, dispatch)\n  }\n}\n\nconst AllTodoList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PastWidget)\n\nexport default AllTodoList","import React, { Component } from 'react';\nimport PastWidgetContainer from '../containers/PastWidgetContainer';\n\nexport default class Past extends Component {\n    render() {\n        return (\n            <div>\n                <PastWidgetContainer></PastWidgetContainer>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Switch, Route, HashRouter, Redirect } from 'react-router-dom';\nimport Today from './today';\nimport Planner from './planner';\nimport Past from './past';\nimport Settings from './settings';\n\nexport default class Main extends Component {\n\n    render() {\n        return (\n            <div className=\"content\">\n                <Switch>\n                    <Route path=\"/today\" component={Today}/>\n                    <Route path=\"/planner\" component={Planner}/>\n                    <Route path=\"/past\" component={Past}/>\n                    <Redirect exact from=\"/\" to=\"today\" />\n                </Switch>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\n\nexport default class Settings extends Component {\n    render() {\n        return (\n            <center>\n            <div>\n                Settings.\n            </div>\n            </center>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/header';\nimport Main from './components/main';\n\nclass App extends Component {\n  render() {\n    return (\n      <div id=\"colorlib-page\">\n        <div id=\"container-wrap\">\n          <Header></Header>\n          <Main></Main>\n      \t</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import {\n    ADD_TODO,\n    EDIT_TODO,\n    DELETE_TODO,\n    COMPLETE_TODO,\n    COMPLETE_ALL_TODOS,\n    CLEAR_COMPLETED\n  } from '../constants/ActionTypes'\n\nconst initialState = []\n\nexport default function todos(state = initialState, action) {\n    switch (action.type) {\n        case ADD_TODO:\n            return [\n                ...state,\n                {\n                    id: state.reduce((maxId, todo) => Math.max(todo.id, maxId), -1) + 1,\n                    payload: action.payload\n                }\n            ]\n        case EDIT_TODO:\n            return state.map(todo =>\n                todo.id === action.id ?\n                    { ...todo, payload: action.payload } :\n                    todo\n                )\n        case DELETE_TODO:\n            return state.filter(todo =>\n                todo.id !== action.id\n                )\n        default:\n            return state\n    }\n}","import { combineReducers } from 'redux'\nimport todos from './todos'\n\nconst rootReducer = combineReducers({\n    todos\n})\n\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { HashRouter } from 'react-router-dom';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\nimport rootReducer from './reducers'\nimport './index.css';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst store = createStore(persistedReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\nconst persistor = persistStore(store)\n\nReactDOM.render(\n  (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <HashRouter>\n          <App />\n        </HashRouter>\n      </PersistGate>\n    </Provider>),\n  document.getElementById('root')\n);\n"],"sourceRoot":""}