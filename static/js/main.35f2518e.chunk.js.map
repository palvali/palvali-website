{"version":3,"sources":["components/tasks/todaysplan.jsx","components/header.jsx","constants/ActionTypes.js","actions/index.js","components/tasks/taskitem.jsx","selectors/index.js","containers/TodayContainer.js","components/today.jsx","components/tasks/addtask.jsx","containers/AddTaskContainer.js","components/tasks/showtasks.jsx","containers/ShowTasksContainer.js","components/planner.jsx","components/past.jsx","components/settings.jsx","components/main.jsx","App.js","reducers/todos.js","reducers/index.js","index.js"],"names":["property","mapping","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","setState","react_default","a","createElement","Navbar","dark","expand","style","background","NavbarBrand","href","className","NavbarToggler","onClick","Collapse","navbar","Nav","NavLink","to","tag","RRNavLink","Component","ADD_TODO","EDIT_TODO","DELETE_TODO","addTodo","payload","type","types","editTodo","id","deleteTodo","completeTodo","completeAllTodos","clearCompleted","useStyles","makeStyles","theme","card","minWidth","maxWidth","title","fontSize","avatar_red","backgroundColor","red","avatar_blue","blue","avatar_orange","orange","root","padding","spacing","StyledAvatar","withStyles","default","_ref","classes","other","color","objectWithoutProperties","Avatar","assign","aria-label","getAllTodos","createSelector","todos","TodaysPlan","connect","allTodos","dispatch","actions","bindActionCreators","TodoActions","renderAvatar","category","avatar_color","Work_default","Home_default","EmojiPeople_default","renderTask","task","taskJson","JSON","parse","Grid","key","item","Card","raised","CardHeader","avatar","Chip","variant","label","priority","subheader","effort","CardContent","Typography","component","CardActions","Button","size","todaysTasks","filterTodaysTasks","filter","t","someDate","today","Date","parts","split","mydate","getDate","getMonth","getFullYear","isToday","deadline","length","Paper","elevation","container","map","Today","TodayContainer","AddTask","data","placeholdertitle","loading","collapse","expandButtonText","handleTitleChange","handleFollowupChange","onPriorityBtnClick","onEffortBtnClick","onCatBtnClick","handleDeadlineChange","handleSubmit","baseStateData","event","objectSpread","target","value","followup","checked","status","hasOwnProperty","toISOString","substr","console","log","preventDefault","input","stringify","_this2","Fab","Add_default","Modal","Form","onSubmit","ModalHeader","ModalBody","es_Card","outline","CardBody","Row","Col","Input","name","placeholder","onChange","Switch","ButtonGroup","es_Button","disabled","active","InputGroup","InputGroupAddon","addonType","defaultValue","ModalFooter","Spinner","fab","margin","extendedIcon","marginRight","AllTodoList","tableIcons","Add","forwardRef","ref","AddBox_default","Check","Check_default","Clear","Clear_default","Delete","DeleteOutline_default","DetailPanel","ChevronRight_default","Edit","Edit_default","Export","SaveAlt_default","Filter","FilterList_default","FirstPage","FirstPage_default","LastPage","LastPage_default","NextPage","PreviousPage","ChevronLeft_default","ResetSearch","Search","Search_default","SortArrow","ArrowUpward_default","ThirdStateCheck","Remove_default","ViewColumn","ViewColumn_default","transformOneTask","t_payload","editTask","deleteTask","allTasks","table_data","columns","field","lookup","High","Medium","Low","Work","Home","Personal","filtering","Pending","InProgress","Completed","transformData","dist_default","icons","options","headerStyle","search","toolbar","actionsColumnIndex","paging","maxBodyHeight","editable","isEditable","rowData","onRowUpdate","newData","oldData","Promise","resolve","setTimeout","onRowDelete","icon","tooltip","renderAllTasks","Planner","ShowTasksContainer","AddTaskContainer","Past","Settings","Main","react_router","path","exact","from","App","header_Header","main_Main","initialState","rootReducer","combineReducers","arguments","undefined","action","concat","toConsumableArray","reduce","maxId","todo","Math","max","persistConfig","storage","persistedReducer","persistReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","ReactDOM","render","es","integration_react","react_router_dom","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.35f2518e.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid';\nimport Chip from '@material-ui/core/Chip';\nimport { red } from '@material-ui/core/colors';\nimport { blue } from '@material-ui/core/colors';\nimport { orange } from '@material-ui/core/colors';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WorkIcon from '@material-ui/icons/Work';\nimport EmojiPeopleIcon from '@material-ui/icons/EmojiPeople';\nimport TaskItem from './taskitem'\nimport './addtask.css';\n\nconst useStyles = makeStyles(theme => ({\n        card: {\n            minWidth: 100,\n            maxWidth: 300,\n        },\n        title: {\n            fontSize: 14,\n        },\n        avatar_red: {\n            backgroundColor: red[500],\n        },\n        avatar_blue: {\n            backgroundColor: blue[500],\n        },\n        avatar_orange: {\n            backgroundColor: orange[500],\n        },\n        root: {\n            padding: theme.spacing(3, 2),\n        },\n    }));\n\nconst styledBy = (property, mapping) => props => mapping[props[property]];\n\nconst StyledAvatar = withStyles({\n    root: {\n        backgroundColor: styledBy('color', {\n            default: red[500],\n            blue: blue[500],\n            red: red[500],\n            orange: orange[500],\n        })\n    },\n})(({ classes, color, ...other }) => <Avatar aria-label=\"recipe\" className={classes.root} {...other} />);\n      \n\nexport default function Today(props) {\n    const classes = useStyles();\n\n    function renderTasks(todaysTasks) {\n        if(todaysTasks.length > 0) {\n            return (\n                <div>\n                <Paper className={classes.root} elevation={false}>\n                    <Typography variant=\"h4\" component=\"h4\">\n                        {\n                            \"You have \" + (todaysTasks.length) + \" tasks for the day\"\n                        }\n                    </Typography>\n                </Paper>\n                <Grid className={classes.root} container spacing={5}>\n                {\n                    todaysTasks.map(renderTask)\n                }\n                </Grid>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                <Paper>\n                    <br />\n                    <Typography variant=\"h3\" component=\"h3\">\n                        Hooray! No tasks today..\n                    </Typography>\n                    <br />\n                </Paper>\n                </div>\n            );\n        }\n    }\n\n    function renderAvatar(category) {\n        var avatar_color\n        if(category == 'Work') {\n            avatar_color='red'\n            return (\n                <StyledAvatar color={avatar_color}> <WorkIcon color=\"action\" /> </StyledAvatar>\n            );\n        }\n        if(category == 'Home') {\n            avatar_color='orange'\n            return (\n                <StyledAvatar color={avatar_color}> <HomeIcon color=\"action\" /> </StyledAvatar>\n            );\n        }\n        if(category == 'Personal') {\n            avatar_color='blue'\n            return (\n                <StyledAvatar color={avatar_color}> <EmojiPeopleIcon color=\"action\" /> </StyledAvatar>\n            );\n        }\n    }\n\n    function renderTask(task) {\n        let taskJson = JSON.parse(task.payload);\n        var avatar_color\n        if(taskJson.category == 'Work') avatar_color='red'\n        if(taskJson.category == 'Home') avatar_color='orange'\n        if(taskJson.category == 'Personal') avatar_color='blue'\n        return (\n            <Grid key={taskJson.id} item>\n            <Card className={classes.card} raised={true}>\n                <CardHeader\n                    avatar={\n                        renderAvatar(taskJson.category)\n                    }\n                    title={\n                        <Chip variant=\"outlined\" color=\"secondary\" label={taskJson.priority + \" Priority\"} />\n                    }\n                    subheader={\n                        <Chip variant=\"outlined\" color=\"primary\" label={taskJson.effort + \" hours\"} />\n                    }\n                />\n                <CardContent>\n                    <Typography variant=\"h5\" component=\"h2\">\n                        {taskJson.title}\n                    </Typography>\n                </CardContent>\n                <CardActions>\n                    <Button size=\"small\" color=\"primary\">Complete Task</Button>\n                </CardActions>\n          </Card>\n          </Grid>\n        );\n    }\n\n    const isToday = (someDate) => {\n        const today = new Date()\n        var parts = someDate.split('-')\n        var mydate = new Date(parts[0], parts[1] - 1, parts[2]); \n        return mydate.getDate() == today.getDate() &&\n            mydate.getMonth() == today.getMonth() &&\n            mydate.getFullYear() == today.getFullYear()\n    }\n\n    const filterTodaysTasks = (allTodos) => {\n        var todaystasks = allTodos.filter(function(t) {\n                        return isToday(JSON.parse(t.payload).deadline);\n                    });\n\n        return todaystasks;\n    }\n\n    function displayAll(allTodos) {\n        let todaysTasks = filterTodaysTasks(props.allTodos)\n        return [\n            renderTasks(todaysTasks),\n        ]\n    }\n\n    return <div className=\"task-list\">\n        {\n            displayAll(props.allTodos)\n        }\n    </div>;\n}","import React, { Component } from 'react';\nimport { Navbar, NavbarToggler, NavbarBrand, Nav, NavLink, Collapse } from 'reactstrap';\nimport { NavLink as RRNavLink } from 'react-router-dom';\n\nexport default class Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            isOpen: false\n        };\n    }\n    toggle() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n\n    render() {\n        return (\n            <Navbar dark expand=\"md\" style={{background:\"#213969\"}}>\n                <NavbarBrand href=\"/\"><span className=\"siteTitle\">ONE PLANNER</span></NavbarBrand>\n                <NavbarToggler onClick={this.toggle} />\n                <Collapse isOpen={this.state.isOpen} navbar>\n                    <Nav className=\"siteNav\" navbar>\n                        <NavLink to=\"/today\" tag={RRNavLink}>today's plan</NavLink>\n                        <NavLink to=\"/planner\" tag={RRNavLink}>planner</NavLink>\n                        <NavLink to=\"/past\" tag={RRNavLink}>past</NavLink>\n                        <NavLink to=\"/settings\" tag={RRNavLink}>settings</NavLink>\n                    </Nav>\n                </Collapse>\n            </Navbar>\n        )\n    }\n}","export const ADD_TODO = 'ADD_TODO'\nexport const EDIT_TODO = 'EDIT_TODO'\nexport const DELETE_TODO = 'DELETE_TODO'\nexport const COMPLETE_TODO = 'COMPLETE_TODO'\nexport const COMPLETE_ALL_TODOS = 'COMPLETE_ALL_TODOS'\nexport const CLEAR_COMPLETED = 'CLEAR_COMPLETED'\nexport const SHOW_TODO = 'SHOW_TODO'","import * as types from '../constants/ActionTypes'\n\nexport const addTodo = payload => ({ type: types.ADD_TODO, payload })\nexport const editTodo = (id, payload) => ({ type: types.EDIT_TODO, id, payload })\nexport const deleteTodo = id => ({ type: types.DELETE_TODO, id })\nexport const completeTodo = id => ({ type: types.COMPLETE_TODO, id })\nexport const completeAllTodos = () => ({ type: types.COMPLETE_ALL_TODOS })\nexport const clearCompleted = () => ({ type: types.CLEAR_COMPLETED })","import React, { Component } from 'react';\nimport { Button, Badge, Form, Input, Row, ButtonGroup, Col, InputGroup, InputGroupAddon } from 'reactstrap';\nimport { Card, CardTitle, CardText, CardHeader, CardBody, Spinner, Container } from 'reactstrap';\nimport { Table } from 'reactstrap';\nimport './addtask.css';\n\nexport default class TaskItem extends Component {\n\n    constructor (props) {\n        super(props);\n\n        this.state = {\n            task: {},\n            id: '',\n            priorityColor: 'info',\n            categoryColor: 'info'\n        }\n    }\n\n    componentDidMount(){\n        let task = JSON.parse( this.props.task );\n        this.setState({task: task});\n        this.setState(state => ({ id: this.props.key }));\n        console.log(\"Parsed \"+JSON.stringify(task))\n        var priorityColor\n        if(task.priority == 'High') {\n            priorityColor = 'danger'\n        } else if(task.priority == 'Medium') {\n            priorityColor = 'warning'\n        } else {\n            priorityColor = 'info'\n        }\n\n        var categoryColor\n        if(task.category == 'Work') {\n            categoryColor = 'danger'\n        } else if(task.category == 'Home') {\n            categoryColor = 'warning'\n        } else {\n            categoryColor = 'info'\n        }\n\n        this.setState(state => ({ priorityColor: priorityColor }));\n        this.setState(state => ({ categoryColor: categoryColor }));\n    }\n\n    render() {\n        return (\n            <Row>\n                <Col xs=\"auto\">{this.state.task.title}</Col>\n                <Col><Badge color={this.state.priorityColor} outline>{this.state.task.priority}</Badge></Col>\n                <Col><Badge color={this.state.categoryColor} outline>{this.state.task.category}</Badge></Col>\n                <Col><Badge outline>{\"\"+this.state.task.effort} hours</Badge></Col>\n                <Col><Badge outline>{\"\"+this.state.task.deadline}</Badge></Col>\n            </Row>\n        )\n    }\n}","import {createSelector} from 'reselect';\nimport {SHOW_TODO} from '../constants/ActionTypes';\nimport Task from '../components/tasks/task.js'\n\nconst getTodos = state => state.todos\n\nexport const getAllTodos = createSelector(\n    [getTodos],\n    (todos) => {\n        return todos\n    }\n)\n\nfunction getAllTasks() {\n    var tasks = [];\n    for (var i = 0; i < 5; i++) { \n        tasks[i] = createMockTask();\n    }\n    return tasks;\n}\n\nfunction createMockTask() {\n    var id = Math.random().toString(36).substr(2, 5);\n    var title = Math.random().toString(36).substr(2, 5);\n    var effort = 3;\n    var deadline = new Date();\n    var priority = \"Med\";\n    var category = \"Home\";\n    return new Task(id, title, effort, deadline, priority, category);\n}","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as TodoActions from '../actions'\nimport Today from '../components/tasks/todaysplan'\nimport { getAllTodos } from '../selectors'\n\nconst mapStateToProps = state => ({\n  allTodos: getAllTodos(state)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(TodoActions, dispatch)\n})\n\n\nconst TodaysPlan = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Today)\n\nexport default TodaysPlan","import React, { Component } from 'react';\n\nimport TodayContainer from '../containers/TodayContainer';\n\nexport default class Today extends Component {\n    render() {\n        return (\n            <div>\n                <TodayContainer></TodayContainer>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Form, Input, Row, ButtonGroup, Col, InputGroup, InputGroupAddon } from 'reactstrap';\nimport { Card, CardHeader, CardFooter, CardBody, Spinner, Collapse} from 'reactstrap';\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport './addtask.css';\nimport { addTodo } from '../../actions';\n\nexport default class AddTask extends Component {\n\n    constructor (props) {\n        super(props);\n\n        this.state = {\n            data: [],\n            placeholdertitle: 'Title',\n            loading: false,\n            collapse: false,\n            expandButtonText: 'Expand'\n        };\n\n        this.toggle = this.toggle.bind(this);\n\n        this.handleTitleChange = this.handleTitleChange.bind(this);\n        this.handleFollowupChange = this.handleFollowupChange.bind(this);\n        this.onPriorityBtnClick = this.onPriorityBtnClick.bind(this);\n        this.onEffortBtnClick = this.onEffortBtnClick.bind(this);\n        this.onCatBtnClick = this.onCatBtnClick.bind(this);\n        this.handleDeadlineChange = this.handleDeadlineChange.bind(this);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.baseStateData = this.state.data;\n    }\n\n    toggle() {\n        this.setState(state => ({ collapse: !state.collapse }));\n        var expandButtonText;\n        if(this.state.collapse == true) {\n            expandButtonText = 'Expand'\n        } else {\n            expandButtonText = 'Collapse'\n        }\n        this.setState(state => ({ expandButtonText: expandButtonText }));\n    }\n\n    handleTitleChange(event) {\n        this.setState({ data: { ...this.state.data, title: event.target.value} });\n    }\n\n    handleFollowupChange(event) {\n        this.setState({ data: { ...this.state.data, followup: event.target.checked} });\n    }\n\n    onPriorityBtnClick(priority) {\n        this.setState({ data: { ...this.state.data, priority} });\n    }\n\n    onEffortBtnClick(effort) {\n        this.setState({ data: { ...this.state.data, effort} });\n    }\n\n    onCatBtnClick(category) {\n        this.setState({ data: { ...this.state.data, category} });\n    }\n\n    handleDeadlineChange(event) {\n        this.setState({ data: { ...this.state.data, deadline: event.target.value} });\n    }\n\n    handleSubmit(event) {\n        this.setState({loading: true});\n        this.state.data.status = \"Pending\";\n        if(!this.state.data.hasOwnProperty('deadline')) {\n            this.state.data.deadline = new Date().toISOString().substr(0,10);\n        }\n\n        if(this.state.data.followup == true) {\n            this.state.data.effort = 0.1\n        }\n\n        console.log(this.state.data)\n\n        event.preventDefault();\n        var input = JSON.stringify(this.state.data);\n\n        console.log(input)\n\n        this.props.dispatch(addTodo(input))\n\n        this.setState({loading: false});\n        this.setState({data: {\n            'title':'',\n            'deadline':new Date().toISOString().substr(0,10),\n            'status': '',\n            'followup': false\n        }});\n    }\n\n    render() {\n        return (\n            <div>\n                <br />\n                <center>\n                    <Fab className=\"btn\" color='secondary' aria-label=\"add\">\n                        <AddIcon color=\"white\" onClick={this.toggle} />\n                    </Fab>\n\n                    <Modal isOpen={this.state.collapse} size=\"lg\">\n                        <Form onSubmit={this.handleSubmit}>\n                            <ModalHeader>Add Task</ModalHeader>\n                            <ModalBody>\n                                <Card outline color=\"secondary\">\n                                    <CardBody>\n                                        <Row>\n                                            <Col>\n                                                <Input className=\"TaskField\" type=\"text\" name=\"taskTitle\" id=\"taskTitle\" placeholder={this.state.placeholdertitle}\n                                                value={this.state.data.title} onChange={this.handleTitleChange} />\n                                            </Col>\n                                        </Row>\n                                        <br />\n                                        <Row>\n                                            <Col>\n                                                <Switch\n                                                    onChange={this.handleFollowupChange}\n                                                    value=\"followup\"\n                                                    color=\"primary\"\n                                                />\n                                                Is Follow-up task?\n                                            </Col>\n                                        </Row>\n                                        <br />\n                                        <Row>\n                                            <Col>\n                                                <ButtonGroup >\n                                                    <Button color=\"secondary\" className=\"TaskField\" outline disabled>takes</Button>\n                                                    <Button color=\"info\" outline onClick={() => this.onEffortBtnClick(1)} active={this.state.data.effort === 1} disabled={this.state.data.followup}>1</Button>\n                                                    <Button color=\"info\" outline onClick={() => this.onEffortBtnClick(2)} active={this.state.data.effort === 2} disabled={this.state.data.followup}>2</Button>\n                                                    <Button color=\"info\" outline onClick={() => this.onEffortBtnClick(3)} active={this.state.data.effort === 3} disabled={this.state.data.followup}>3</Button>\n                                                    <Button color=\"info\" outline onClick={() => this.onEffortBtnClick(4)} active={this.state.data.effort === 4} disabled={this.state.data.followup}>4</Button>\n                                                    <Button color=\"info\" outline onClick={() => this.onEffortBtnClick(5)} active={this.state.data.effort === 5} disabled={this.state.data.followup}>5</Button>\n                                                    <Button color=\"info\" outline onClick={() => this.onEffortBtnClick(6)} active={this.state.data.effort === 6} disabled={this.state.data.followup}>6</Button>\n                                                    <Button color=\"secondary\" className=\"TaskField\" outline disabled>hours</Button>\n                                                </ButtonGroup>\n                                            </Col>\n                                            <Col>\n                                                <InputGroup>\n                                                    <InputGroupAddon className=\"TaskField\" addonType=\"prepend\">complete it by</InputGroupAddon>\n                                                    <Input className=\"TaskField\" type=\"date\" name=\"taskDeadline\" id=\"taskDeadline\" defaultValue={new Date().toISOString().substr(0,10)}\n                                                    value={this.state.data.deadline} onChange={this.handleDeadlineChange}\n                                                    />\n                                                </InputGroup>\n                                            </Col>\n                                        </Row>\n                                        <br />\n                                        <Row>\n                                            <Col>\n                                                <ButtonGroup>\n                                                    <Button color=\"secondary\" className=\"TaskField\" outline disabled>priority</Button>\n                                                    <Button color=\"danger\" outline onClick={() => this.onPriorityBtnClick(\"High\")} active={this.state.data.priority === \"High\"}>High</Button>\n                                                    <Button color=\"warning\" outline onClick={() => this.onPriorityBtnClick(\"Medium\")} active={this.state.data.priority === \"Medium\"}>Medium</Button>\n                                                    <Button color=\"info\" outline onClick={() => this.onPriorityBtnClick(\"Low\")} active={this.state.data.priority === \"Low\"}>Low</Button>\n                                                </ButtonGroup>\n                                            </Col>\n\n                                            <Col>\n                                                <ButtonGroup>\n                                                    <Button color=\"secondary\" className=\"TaskField\" outline disabled>category</Button>\n                                                    <Button color=\"danger\" outline onClick={() => this.onCatBtnClick(\"Work\")} active={this.state.data.category === \"Work\"}>Work</Button>\n                                                    <Button color=\"warning\" outline onClick={() => this.onCatBtnClick(\"Home\")} active={this.state.data.category === \"Home\"}>Home</Button>\n                                                    <Button color=\"info\" outline onClick={() => this.onCatBtnClick(\"Personal\")} active={this.state.data.category === \"Personal\"}>Personal</Button>\n                                                </ButtonGroup>\n                                            </Col>\n                                        </Row>\n                                    </CardBody> \n                                </Card>\n                            </ModalBody>\n                            <ModalFooter className=\"float-left\">\n                                {this.state.loading ? <Spinner color=\"primary\" className=\"SubmitButton\" /> : <Button color=\"primary\" size=\"lg\" className=\"SubmitButton\" >Submit</Button>}\n                                {' '}\n                                <Button color=\"danger\" size=\"lg\" onClick={this.toggle}>Close</Button>\n                            </ModalFooter>\n                        </Form>\n                    </Modal>\n                </center>\n            </div>\n        )\n    }\n}","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport AddTask from '../components/tasks/addtask'\nimport {addTodo} from '../actions'\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n      dispatch,\n      ...bindActionCreators({ addTodo }, dispatch)\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(AddTask)","import React from 'react';\nimport { Button, Table, Card, CardText, CardHeader, Row, Col } from 'reactstrap';\nimport TaskItem from './taskitem'\nimport './addtask.css';\nimport { deleteTodo, editTodo, addTodo } from '../../actions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport MaterialTable, {MTableToolbar} from 'material-table';\nimport { forwardRef } from 'react';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\nconst useStyles = makeStyles(theme => ({\n  fab: {\n    margin: theme.spacing(1),\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n  root: {\n    padding: theme.spacing(3, 2),\n  },\n}));\n\nexport default function ShowTasks(props) {\n\n    const classes = useStyles();\n\n    const tableIcons = {\n        Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n        Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n        DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n        Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n        Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n        Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n        FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n        LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n        NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n        PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n        ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n        Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n        SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n        ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n        ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n    };\n\n    function transformOneTask(task) {\n        var t_payload = JSON.parse(task.payload)\n        return {\n            id: task.id,\n            title: t_payload.title, \n            priority: t_payload.priority, \n            category: t_payload.category, \n            effort: \"\"+t_payload.effort, \n            deadline: \"\"+t_payload.deadline,\n            status: t_payload.status\n        }\n    }\n\n    function transformData(allTasks) {\n        var tr_data = allTasks.map(transformOneTask)\n\n        return tr_data;\n    }\n\n    function renderAllTasks(allTasks) {\n\n        var tr_data = transformData(allTasks)\n\n        const table_data = {\n            columns: [\n              { title: 'Title', field: 'title' },\n              { title: 'Priority', field: 'priority', \n                lookup: { 'High': \"High\", 'Medium': \"Medium\", 'Low': \"Low\" } },\n              { title: 'Category', field: 'category',\n                lookup: { 'Work': \"Work\", 'Home': \"Home\", 'Personal': \"Personal\" }},\n              { title: 'Effort', field: 'effort', filtering: false },\n              { title: 'Deadline', field: 'deadline', type: 'date', filtering: false },\n              { title: 'Status', field: 'status',\n                lookup: { 'Pending': \"Pending\", 'InProgress': \"InProgress\", 'Completed': \"Completed\" }},\n            ],\n            data: tr_data,\n          };\n\n          return (\n            <MaterialTable\n            // components={{\n            //     Toolbar: props => (\n            //         <div style={{ background: 'linear-gradient(45deg, white 15%, #21CBF3 60%)', borderStyle: 'solid', borderWidth: 1, borderColor:'black' }}>\n            //             <MTableToolbar {...props} />\n            //         </div>\n            //     )\n            // }}\n              title=\"\"\n              columns={table_data.columns}\n              data={table_data.data}\n              icons={tableIcons}\n              options={\n                {\n                    headerStyle: {\n                        background: 'lightgray',\n                        color: '#213969'\n                    },\n                    search: false,\n                    toolbar: false,\n                    filtering: true,\n                    actionsColumnIndex: -1,\n                    paging: false,\n                    maxBodyHeight: 300\n                }\n              }\n              editable={{\n                isEditable: rowData => rowData.status != 'Completed',\n                // onRowAdd: newData =>\n                //   new Promise(resolve => {\n                //     setTimeout(() => {\n                //       resolve();\n                //       const data = [...table_data.data];\n                //       data.push(newData);\n                //       props.dispatch(addTodo(JSON.stringify(newData)))\n                //     }, 600);\n                //   }),\n                onRowUpdate: (newData, oldData) =>\n                  new Promise(resolve => {\n                    setTimeout(() => {\n                      resolve();\n                      editTask(oldData.id, JSON.stringify(newData))\n                    }, 600);\n                  }),\n                onRowDelete: oldData =>\n                  new Promise(resolve => {\n                    setTimeout(() => {\n                      resolve();\n                      deleteTask(oldData.id)\n                    }, 600);\n                  }),\n              }}\n              actions={[\n                rowData => ({\n                  icon: 'check',\n                  tooltip: 'Complete task',\n                  onClick: (event, rowData) => \n                    new Promise(resolve => {\n                      setTimeout(() => {\n                        resolve();\n                        rowData.status = 'Completed'\n                        editTask(rowData.id, JSON.stringify(rowData))\n                      }, 600);\n                    }),\n                  disabled: rowData.status == 'Completed'\n                })\n              ]}\n            />\n          );\n    }\n\n    function renderTaskItem(task) {\n        return (\n            <center>\n            <Card body outline color=\"secondary\" style={{width:\"70%\"}}>\n                <CardText>\n                    <Row>\n                        <Col xs=\"auto\"><TaskItem task={task.payload} key={task.id}></TaskItem></Col>\n                        <Col>\n                            <Fab color=\"secondary\" aria-label=\"edit\" className={classes.fab}>\n                                <EditIcon onClick={() => editTask(task.id)} />\n                            </Fab>\n                            <Fab aria-label=\"delete\" className={classes.fab}>\n                                <DeleteIcon onClick={() => deleteTask(task.id)} />\n                            </Fab>\n                        </Col>\n                    </Row>\n                </CardText>\n            </Card>\n            <br />\n            </center>\n        );\n    }\n\n    function editTask(id, payload) {\n        props.dispatch(editTodo(id, payload))\n    }\n\n    function deleteTask(id) {\n        props.dispatch(deleteTodo(id))\n    }\n\n    return <div className=\"task-list\">\n        <Paper className={classes.root}>\n        <Typography variant=\"h4\" component=\"h4\">\n          You have {\n            props.allTodos.filter(function(t) {\n              return JSON.parse(t.payload).status != 'Completed';\n            }).length\n          } open tasks.\n        </Typography>\n        </Paper>\n        {\n            renderAllTasks(props.allTodos)\n            // props.allTodos.map(renderTaskItem) \n        }\n    </div>\n}","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as TodoActions from '../actions'\nimport ShowTasks from '../components/tasks/showtasks'\nimport { getAllTodos } from '../selectors'\n\nconst mapStateToProps = state => ({\n  allTodos: getAllTodos(state)\n})\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n    ...bindActionCreators(TodoActions, dispatch)\n  }\n}\n\nconst AllTodoList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ShowTasks)\n\nexport default AllTodoList","import React, { Component } from 'react';\nimport AddTaskContainer from '../containers/AddTaskContainer';\nimport ShowTasksContainer from '../containers/ShowTasksContainer';\n\nexport default class Planner extends Component {\n    render() {\n        return (\n            <div>\n                <ShowTasksContainer></ShowTasksContainer>\n                <br />\n                <AddTaskContainer></AddTaskContainer>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\n\nexport default class Past extends Component {\n    render() {\n        return (\n            <center>\n            <div>\n                This is past.\n            </div>\n            </center>\n        )\n    }\n}","import React, { Component } from 'react';\n\nexport default class Settings extends Component {\n    render() {\n        return (\n            <center>\n            <div>\n                Settings.\n            </div>\n            </center>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Switch, Route, HashRouter, Redirect } from 'react-router-dom';\nimport Today from './today';\nimport Planner from './planner';\nimport Past from './past';\nimport Settings from './settings';\n\nexport default class Main extends Component {\n\n    render() {\n        return (\n            <div className=\"content\">\n                <Switch>\n                    <Route path=\"/today\" component={Today}/>\n                    <Route path=\"/planner\" component={Planner}/>\n                    <Route path=\"/past\" component={Past}/>\n                    <Route path=\"/settings\" component={Settings}/>\n                    <Redirect exact from=\"/\" to=\"planner\" />\n                </Switch>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/header';\nimport Main from './components/main';\n\nclass App extends Component {\n  render() {\n    return (\n      <div id=\"colorlib-page\">\n        <div id=\"container-wrap\">\n          <Header></Header>\n          <Main></Main>\n      \t</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import {\n    ADD_TODO,\n    EDIT_TODO,\n    DELETE_TODO,\n    COMPLETE_TODO,\n    COMPLETE_ALL_TODOS,\n    CLEAR_COMPLETED\n  } from '../constants/ActionTypes'\n\nconst initialState = []\n\nexport default function todos(state = initialState, action) {\n    switch (action.type) {\n        case ADD_TODO:\n            return [\n                ...state,\n                {\n                    id: state.reduce((maxId, todo) => Math.max(todo.id, maxId), -1) + 1,\n                    payload: action.payload\n                }\n            ]\n        case EDIT_TODO:\n            return state.map(todo =>\n                todo.id === action.id ?\n                    { ...todo, payload: action.payload } :\n                    todo\n                )\n        case DELETE_TODO:\n            return state.filter(todo =>\n                todo.id !== action.id\n                )\n        default:\n            return state\n    }\n}","import { combineReducers } from 'redux'\nimport todos from './todos'\n\nconst rootReducer = combineReducers({\n    todos\n})\n\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { HashRouter } from 'react-router-dom';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\nimport rootReducer from './reducers'\nimport './index.css';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst store = createStore(persistedReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\nconst persistor = persistStore(store)\n\nReactDOM.render(\n  (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <HashRouter>\n          <App />\n        </HashRouter>\n      </PersistGate>\n    </Provider>),\n  document.getElementById('root')\n);\n"],"sourceRoot":""}