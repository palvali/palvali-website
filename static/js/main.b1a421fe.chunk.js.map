{"version":3,"sources":["components/tasks/todaysplan.jsx","components/header.jsx","constants/ActionTypes.js","actions/index.js","selectors/index.js","containers/TodayContainer.js","components/today.jsx","components/tasks/plannerwidget.jsx","containers/PlannerWidgetContainer.js","components/planner.jsx","components/past.jsx","components/settings.jsx","components/main.jsx","App.js","reducers/todos.js","reducers/index.js","index.js"],"names":["property","mapping","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","setState","react_default","a","createElement","Navbar","dark","expand","style","background","NavbarBrand","href","className","NavbarToggler","onClick","Collapse","navbar","Nav","NavLink","to","tag","RRNavLink","Component","ADD_TODO","EDIT_TODO","DELETE_TODO","addTodo","payload","type","types","editTodo","id","deleteTodo","completeTodo","completeAllTodos","clearCompleted","useStyles","makeStyles","theme","title_paper","backgroundColor","blue","padding","spacing","card","width","open_tasks_card","completed_tasks_card","grey","color","green","completed_card","completed_card_content","height","card_content","card_action","justifyContent","title","fontSize","avatar_red","red","avatar_blue","avatar_orange","orange","button_start","margin","button_complete","marginLeft","expandOpen","transform","root","StyledAvatar","withStyles","default","_ref","classes","other","objectWithoutProperties","Avatar","assign","aria-label","getAllTodos","createSelector","todos","TodaysPlan","connect","allTodos","dispatch","actions","bindActionCreators","TodoActions","renderTasks","todaysOpenTasks","todaysTasks","length","isMorning","isAfterWork","timeLeftAtWork","reorderedTasks","openTasks","dayVal","isBeforeWork","workTasks","reorder","getTasksByCategory","homeTasks","personalTasks","Array","prototype","push","apply","reorderTasks","renderOpenTasksTitle","Grid","container","map","renderTask","inprogressTasks","getTasksByStatus","pendingTasks","inprogress_high","getTasksByPriority","inprogress_med","inprogress_low","pending_high","pending_med","pending_low","tasks","category","filter","t","JSON","parse","priority","status","Paper","elevation","Typography","variant","component","Chip","size","label","Date","toDateString","renderCompletedTasks","completedTasks","renderCompletedTask","task","taskJson","key","item","Slide","direction","in","mountOnEnter","unmountOnExit","Card","raised","CardContent","CardActions","renderCategoryAvatar","avatar_color","Computer_default","Home_default","EmojiPeople_default","renderPriorityChip","priority_color","renderEffortChip","effort","effort_color","effort_suffix","converted_effort","icon","AccessTime_default","CardHeader","avatar","action","align","disableSpacing","PlayArrow_default","Pause_default","now","morningTime","setHours","setMinutes","getTime","workStartTime","eveningTime","getHours","filterTodaysTasks","someDate","today","parts","split","mydate","getDate","getMonth","getFullYear","isToday","deadline","filterCompletedTasks","todaysTodos","filterOpenTasks","openTodaysTasks","completedTodaysTasks","displayAll","Today","TodayContainer","fab","AllTodoList","objectSpread","tableIcons","Add","forwardRef","ref","AddBox_default","Check","Check_default","Clear","Clear_default","Delete","DeleteOutline_default","DetailPanel","ChevronRight_default","Edit","Edit_default","Export","SaveAlt_default","Filter","FilterList_default","FirstPage","FirstPage_default","LastPage","LastPage_default","NextPage","PreviousPage","ChevronLeft_default","ResetSearch","Search","Search_default","SortArrow","ArrowUpward_default","ThirdStateCheck","Remove_default","ViewColumn","ViewColumn_default","_useState","useState","_useState2","slicedToArray","data","setData","_useState3","_useState4","placeholdertitle","_useState5","_useState6","loading","setLoading","_useState7","_useState8","collapse","setCollapse","transformOneTask","t_payload","handleTitleChange","event","target","value","handleFollowupChange","followup","checked","onPriorityBtnClick","onEffortBtnClick","onCatBtnClick","handleDeadlineChange","formatDate","date","console","log","dateStr","toString","d","m","formattedDate","getCurrentDate","handleSubmit","hasOwnProperty","preventDefault","input","stringify","toJSON","timezoneOffsetInHours","getTimezoneOffset","sign","leadingZero","Math","abs","correctedDate","getMinutes","getSeconds","getMilliseconds","toISOString","replace","justify","Fab","Add_default","Modal","Form","onSubmit","ModalHeader","ModalBody","es_Card","outline","CardBody","Row","Col","Input","name","placeholder","onChange","Switch","ButtonGroup","Button","disabled","active","InputGroup","InputGroupAddon","addonType","defaultValue","ModalFooter","Spinner","allTasks","table_data","columns","field","lookup","High","Medium","Low","Work","Home","Personal","filtering","Pending","InProgress","Completed","transformData","dist_default","icons","options","headerStyle","search","toolbar","actionsColumnIndex","paging","maxBodyHeight","editable","isEditable","rowData","onRowUpdate","newData","oldData","Promise","resolve","setTimeout","jsonPayload","editTask","onRowDelete","tooltip","completeTask","renderAllTasks","Planner","PlannerWidgetContainer","Past","Settings","Main","react_router","path","exact","from","App","header_Header","main_Main","initialState","rootReducer","combineReducers","arguments","undefined","concat","toConsumableArray","reduce","maxId","todo","max","persistConfig","storage","persistedReducer","persistReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","ReactDOM","render","es","integration_react","react_router_dom","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.b1a421fe.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid';\nimport Chip from '@material-ui/core/Chip';\nimport { red, lightBlue, grey, green } from '@material-ui/core/colors';\nimport { blue } from '@material-ui/core/colors';\nimport { orange } from '@material-ui/core/colors';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WorkIcon from '@material-ui/icons/Work';\nimport EmojiPeopleIcon from '@material-ui/icons/EmojiPeople';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport LabelIcon from '@material-ui/icons/Label';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport ComputerIcon from '@material-ui/icons/Computer';\nimport clsx from 'clsx';\nimport Grow from '@material-ui/core/Grow';\nimport Slide from '@material-ui/core/Slide';\nimport './todaysplan.css';\n\nconst useStyles = makeStyles(theme => ({\n        title_paper: {\n            backgroundColor: blue[50],\n            padding: theme.spacing(3, 2),\n        },\n        card: {\n            width: 270,\n            // height: 300\n        },\n        open_tasks_card: {\n            backgroundColor: blue[50],\n            padding: theme.spacing(3, 2),\n        },\n        completed_tasks_card: {\n            backgroundColor: grey[200],\n            color: green[900],\n            padding: theme.spacing(3, 2),\n        },\n        completed_card: {\n            width: 270,\n            // background: 'linear-gradient(45deg, #045494 30%, #045494 90%)',\n            background: green[900],\n            color: 'white'\n        },\n        completed_card_content: {\n            // backgroundColor: grey[100],\n            height: 80,\n            // textAlign: \"center\"\n        },\n        card_content: {\n            backgroundColor: grey[100],\n            height: 110,\n            // textAlign: \"center\"\n        },\n        card_action: {\n            justifyContent: \"flex-start\"\n        },\n        title: {\n            fontSize: 14,\n        },\n        avatar_red: {\n            backgroundColor: red[500],\n        },\n        avatar_blue: {\n            backgroundColor: blue[500],\n        },\n        avatar_orange: {\n            backgroundColor: orange[500],\n        },\n        button_start: {\n            margin: theme.spacing(1),\n            background: '#01579b',\n            color: 'white',\n        },\n        button_complete: {\n            margin: theme.spacing(1),\n            background: '#388e3c',\n            color: 'white',\n        },\n        expand: {\n            // transform: 'rotate(0deg)',\n            marginLeft: 'auto',\n            // transition: theme.transitions.create('transform', {\n            //     duration: theme.transitions.duration.shortest,\n            // }),\n        },\n        expandOpen: {\n            transform: 'rotate(180deg)',\n        },\n        root: {\n            padding: theme.spacing(3, 2),\n        },\n    }));\n\nconst styledBy = (property, mapping) => props => mapping[props[property]];\n\nconst StyledAvatar = withStyles({\n    root: {\n        backgroundColor: styledBy('color', {\n            default: red[500],\n            blue: blue[500],\n            red: red[500],\n            green: green[500],\n            orange: orange[500],\n        })\n    },\n})(({ classes, color, ...other }) => <Avatar aria-label=\"recipe\" className={classes.root} {...other} />);\n\n\nexport default function Today(props) {\n    const classes = useStyles();\n\n    function renderTasks(todaysOpenTasks) {\n        var title = getTitle(todaysOpenTasks)\n        if(todaysOpenTasks.length > 0) {\n            var reorderedTasks = reorderTasks(todaysOpenTasks)\n            return (\n                <div>\n                    { renderOpenTasksTitle(title) }\n                    <Grid className={classes.root} container spacing={5}>\n                    {\n                        reorderedTasks.map(renderTask)\n                    }\n                    </Grid>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    { renderOpenTasksTitle(title) }\n                </div>\n            );\n        }\n    }\n\n    function reorderTasks(openTasks) {\n        var reorderedTasks = []\n\n        var dayVal = getDayVal()\n\n        var workTasks = reorder(getTasksByCategory(openTasks, \"Work\"))\n        var homeTasks = reorder(getTasksByCategory(openTasks, \"Home\"))\n        var personalTasks = reorder(getTasksByCategory(openTasks, \"Personal\"))\n        if(dayVal == \"AT_WORK\") {\n            Array.prototype.push.apply(reorderedTasks, workTasks);\n            Array.prototype.push.apply(reorderedTasks, homeTasks);\n            Array.prototype.push.apply(reorderedTasks, personalTasks);\n        } else if(dayVal == \"BEFORE_WORK\") {\n            Array.prototype.push.apply(reorderedTasks, homeTasks);\n            Array.prototype.push.apply(reorderedTasks, workTasks);\n            Array.prototype.push.apply(reorderedTasks, personalTasks);\n        } else {\n            Array.prototype.push.apply(reorderedTasks, personalTasks);\n            Array.prototype.push.apply(reorderedTasks, homeTasks);\n            Array.prototype.push.apply(reorderedTasks, workTasks);\n        }\n\n        return reorderedTasks\n    }\n\n    function reorder(openTasks) {\n        var reorderedTasks = []\n\n        var inprogressTasks = getTasksByStatus(openTasks, \"InProgress\")\n        var pendingTasks = getTasksByStatus(openTasks, \"Pending\")\n\n        var inprogress_high = getTasksByPriority(inprogressTasks, \"High\")\n        var inprogress_med = getTasksByPriority(inprogressTasks, \"Medium\")\n        var inprogress_low = getTasksByPriority(inprogressTasks, \"Low\")\n\n        var pending_high = getTasksByPriority(pendingTasks, \"High\")\n        var pending_med = getTasksByPriority(pendingTasks, \"Medium\")\n        var pending_low = getTasksByPriority(pendingTasks, \"Low\")\n\n        Array.prototype.push.apply(reorderedTasks, inprogress_high);\n        Array.prototype.push.apply(reorderedTasks, inprogress_med);\n        Array.prototype.push.apply(reorderedTasks, inprogress_low);\n        Array.prototype.push.apply(reorderedTasks, pending_high);\n        Array.prototype.push.apply(reorderedTasks, pending_med);\n        Array.prototype.push.apply(reorderedTasks, pending_low);\n\n        return reorderedTasks\n    }\n\n    function getDayVal() {\n        var dayVal\n        if(isBeforeWork()) dayVal = 'BEFORE_WORK'\n        else if(isAfterWork()) dayVal = 'AFTER_WORK'\n        else dayVal = 'AT_WORK'\n\n        return dayVal\n    }\n\n    function getTasksByCategory(tasks, category) {\n        var filteredTasks = tasks.filter(function(t) {\n            return JSON.parse(t.payload).category == category;\n        });\n\n        return filteredTasks;\n    }\n\n    function getTasksByPriority(tasks, priority) {\n        var filteredTasks = tasks.filter(function(t) {\n            return JSON.parse(t.payload).priority == priority;\n        });\n\n        return filteredTasks;\n    }\n\n    function getTasksByStatus(tasks, status) {\n        var filteredTasks = tasks.filter(function(t) {\n            return JSON.parse(t.payload).status == status;\n        });\n\n        return filteredTasks;\n    }\n\n    function getTitle(todaysTasks) {\n        var title\n        if(todaysTasks.length > 0) {\n            title = \"You have \" + (todaysTasks.length) + \" tasks for the day\"\n        } else if(isMorning()) {\n            title = \"Good Morning! Plan your day for today and get started.\"\n        } else if (isAfterWork()) {\n            title = \"Good job at work. No open tasks now!\"\n        } else {\n            title = timeLeftAtWork() +\"hours left at work. Everything done for now!\"\n        }\n        return title\n    }\n\n    function renderOpenTasksTitle(title) {\n        return (\n            <Paper className={classes.title_paper} elevation={false}>\n                <Typography variant=\"h4\" component=\"h4\">\n                    {title} { renderDate() }\n                </Typography>\n            </Paper>\n        );\n    }\n\n    function renderDate() {\n        return (\n            <Chip size=\"large\" color=\"primary\" label={new Date().toDateString()} />\n        );\n    }\n\n    function renderCompletedTasks(completedTasks) {\n        if(completedTasks.length > 0) {\n            return (\n                <div>\n                <Paper className={classes.completed_tasks_card} elevation={false}>\n                    <Typography variant=\"h4\" component=\"h4\">\n                        {\n                            \"Completed \" + (completedTasks.length) + \" tasks today..\"\n                        }\n                    </Typography>\n                </Paper>\n                <Grid className={classes.root} container spacing={5}>\n                {\n                    completedTasks.map(renderCompletedTask)\n                }\n                </Grid>\n                </div>\n            );\n        }\n    }\n\n    function renderCompletedTask(task) {\n        let taskJson = JSON.parse(task.payload);\n        return (\n            <Grid key={taskJson.id} item>\n                <Slide direction=\"left\" in=\"true\" mountOnEnter unmountOnExit>\n            <Card className={classes.completed_card} raised={true}>\n                <CardContent className={classes.completed_card_content}>\n                    <Typography variant=\"h5\" component=\"h2\">\n                        {taskJson.title}\n                    </Typography>\n                </CardContent>\n                <CardActions>\n                    <Chip size=\"small\"  label={taskJson.category} />\n                </CardActions>\n          </Card>\n          </Slide>\n          </Grid>\n        );\n    }\n\n    function renderCategoryAvatar(category) {\n        var avatar_color\n        if(category == 'Work') {\n            avatar_color='blue'\n            return (\n                <StyledAvatar color={avatar_color}> <ComputerIcon color=\"action\" /> </StyledAvatar>\n            );\n        }\n        if(category == 'Home') {\n            avatar_color='orange'\n            return (\n                <StyledAvatar color={avatar_color}> <HomeIcon color=\"action\" /> </StyledAvatar>\n            );\n        }\n        if(category == 'Personal') {\n            avatar_color='green'\n            return (\n                <StyledAvatar color={avatar_color}> <EmojiPeopleIcon color=\"action\" /> </StyledAvatar>\n            );\n        }\n    }\n\n    function renderCategoryChip(category) {\n        var avatar_color\n        if(category == 'Work') {\n            avatar_color='red'\n            return (\n                <LabelIcon color=\"{avatar_color}\"> Work </LabelIcon>\n            );\n        }\n        if(category == 'Home') {\n            avatar_color='orange'\n            return (\n                <StyledAvatar color={avatar_color}> <HomeIcon color=\"action\" /> </StyledAvatar>\n            );\n        }\n        if(category == 'Personal') {\n            avatar_color='blue'\n            return (\n                <StyledAvatar color={avatar_color}> <EmojiPeopleIcon color=\"action\" /> </StyledAvatar>\n            );\n        }\n    }\n\n    function renderPriorityChip(priority) {\n        var priority_color\n        if(priority == 'High') {\n            priority_color='secondary'\n        }\n        if(priority == 'Medium') {\n            priority_color='primary'\n        }\n        if(priority == 'Low') {\n            priority_color='default'\n        }\n        return (\n            <Chip variant=\"outlined\" size=\"small\"  color={priority_color} label={priority + \" Priority\"} />\n        );\n    }\n\n    function renderEffortChip(effort) {\n        var effort_color\n        var effort_suffix = 'hours'\n        var converted_effort = effort\n        if(effort >= 3) {\n            effort_color='secondary'\n        }\n        if(effort < 3) {\n            effort_color='primary'\n        }\n        if(effort < 1) {\n            effort_color='default'\n        }\n        \n        if(effort == 1) effort_suffix = 'hour'\n        if(effort < 1) {\n            converted_effort = effort * 60\n            effort_suffix = 'minutes'\n        }\n\n        return (\n            <Chip size=\"small\" color={effort_color} icon={<AccessTimeIcon />} label={converted_effort + \" \" + effort_suffix} />\n        );\n    }\n\n    function renderAction(status) {\n        if(status == \"Pending\") {\n            return (\n                // <Button \n                // variant=\"contained\"\n                // color=\"secondary\"\n                // className={classes.button_start}\n                // startIcon={<PlayArrowIcon />}>Start</Button>\n                // <IconButton aria-label=\"start\">\n                    // <PlayArrowIcon />\n                // </IconButton>\n                <StyledAvatar color=\"action\"> <PlayArrowIcon color=\"action\" /> </StyledAvatar>\n            );\n        }\n        if(status == \"InProgress\") {\n            return (\n                // <Button \n                // variant=\"contained\"\n                // color=\"secondary\"\n                // className={classes.button_complete}\n                // startIcon={<AssignmentTurnedInIcon />}>Complete</Button>\n                // <IconButton aria-label=\"in progress\">\n                    // <PauseIcon /> \n                    // <div>\n                    <StyledAvatar color=\"action\"> <PauseIcon color=\"action\" /> </StyledAvatar>\n                    // <Chip variant=\"outlined\" size=\"small\" label=\"In progress\" />\n                    // </div>\n                // </IconButton>\n            );\n        }\n    }\n\n    function renderTask(task) {\n        let taskJson = JSON.parse(task.payload);\n        return (\n            <Grid key={taskJson.id} item>\n                 <Slide direction=\"right\" in=\"true\" mountOnEnter unmountOnExit>\n            <Card className={classes.card} raised={true}>\n                <CardHeader \n                    avatar={renderCategoryAvatar(taskJson.category)}\n                    action={\n                        <div align=\"right\">\n                        {renderEffortChip(taskJson.effort)}\n                        <br />\n                        {renderPriorityChip(taskJson.priority)}\n                        </div>\n                      }\n                    // title={\n                    //     renderPriorityChip(taskJson.priority)\n                    // }\n                    // subheader={renderEffortChip(taskJson.effort)\n                        // <Chip variant=\"outlined\" color=\"primary\" label={taskJson.effort + \" hours\"} />\n                    // }\n                />\n                <CardContent className={classes.card_content}>\n                    <Typography variant=\"h5\" component=\"h2\">\n                        {taskJson.title}\n                    </Typography>\n                </CardContent>\n                {/* <CardActions className={classes.card_action}>\n                    {\n                        renderAction(taskJson.status)\n                    }\n                </CardActions> */}\n                <CardActions disableSpacing>\n                    {\n                        renderAction(taskJson.status)\n                    }\n                    {/* <Chip className={classes.expand} variant=\"outlined\" size=\"small\"  color=\"secondary\" label=\"Complete\" /> */}\n                </CardActions>\n            </Card>\n            </Slide>\n            </Grid>\n        );\n    }\n\n    const isMorning = () => {\n        var now = new Date();\n        var morningTime = new Date();\n        morningTime.setHours(11); morningTime.setMinutes(59);\n        return now.getTime() <= morningTime.getTime()\n    }\n\n    const isBeforeWork = () => {\n        var now = new Date();\n        var workStartTime = new Date();\n        workStartTime.setHours(9); workStartTime.setMinutes(0);\n        return now.getTime() < workStartTime.getTime()\n    }\n\n    const isAfterWork = () => {\n        var now = new Date();\n        var eveningTime = new Date();\n        eveningTime.setHours(17); eveningTime.setMinutes(0);\n        return now.getTime() >= eveningTime.getTime()\n    }\n\n    const timeLeftAtWork = () => {\n        var now = new Date();\n        var eveningTime = new Date();\n        eveningTime.setHours(17); eveningTime.setMinutes(0);\n        return eveningTime.getHours() - now.getHours()\n    }\n\n    const isToday = (someDate) => {\n        const today = new Date()\n        var parts = someDate.split('-')\n        var mydate = new Date(parts[0], parts[1] - 1, parts[2]); \n        return mydate.getDate() == today.getDate() &&\n            mydate.getMonth() == today.getMonth() &&\n            mydate.getFullYear() == today.getFullYear()\n    }\n\n    const filterTodaysTasks = (allTodos) => {\n        var todaystasks = allTodos.filter(function(t) {\n                        return isToday(JSON.parse(t.payload).deadline);\n                    });\n\n        return todaystasks;\n    }\n\n    const isCompleted = (status) => {\n        return status == \"Completed\"\n    }\n\n    const filterCompletedTasks = (todaysTodos) => {\n        var completedTasks = todaysTodos.filter(function(t) {\n                        return isCompleted(JSON.parse(t.payload).status);\n                    });\n\n        return completedTasks;\n    }\n\n    const filterOpenTasks = (todaysTodos) => {\n        var completedTasks = todaysTodos.filter(function(t) {\n                        return JSON.parse(t.payload).status != \"Completed\";\n                    });\n\n        return completedTasks;\n    }\n\n    function displayAll(allTodos) {\n        let todaysTasks = filterTodaysTasks(props.allTodos)\n        let openTodaysTasks = filterOpenTasks(todaysTasks)\n        let completedTodaysTasks = filterCompletedTasks(todaysTasks)\n        return [\n            renderTasks(openTodaysTasks),\n            renderCompletedTasks(completedTodaysTasks)\n        ]\n    }\n\n    return <div className=\"task-list\">\n        {\n            displayAll(props.allTodos)\n        }\n    </div>;\n}","import React, { Component } from 'react';\nimport { Navbar, NavbarToggler, NavbarBrand, Nav, NavLink, Collapse } from 'reactstrap';\nimport { NavLink as RRNavLink } from 'react-router-dom';\n\nexport default class Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            isOpen: false\n        };\n    }\n    toggle() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n\n    render() {\n        return (\n            <Navbar dark expand=\"md\" style={{background:\"#213969\"}}>\n                <NavbarBrand href=\"/\"><span className=\"siteTitle\">ONE PLANNER</span></NavbarBrand>\n                <NavbarToggler onClick={this.toggle} />\n                <Collapse isOpen={this.state.isOpen} navbar>\n                    <Nav className=\"siteNav\" navbar>\n                        <NavLink to=\"/today\" tag={RRNavLink}>today's plan</NavLink>\n                        <NavLink to=\"/planner\" tag={RRNavLink}>planner</NavLink>\n                        <NavLink to=\"/past\" tag={RRNavLink}>past</NavLink>\n                        <NavLink to=\"/settings\" tag={RRNavLink}>settings</NavLink>\n                    </Nav>\n                </Collapse>\n            </Navbar>\n        )\n    }\n}","export const ADD_TODO = 'ADD_TODO'\nexport const EDIT_TODO = 'EDIT_TODO'\nexport const DELETE_TODO = 'DELETE_TODO'\nexport const COMPLETE_TODO = 'COMPLETE_TODO'\nexport const COMPLETE_ALL_TODOS = 'COMPLETE_ALL_TODOS'\nexport const CLEAR_COMPLETED = 'CLEAR_COMPLETED'\nexport const SHOW_TODO = 'SHOW_TODO'","import * as types from '../constants/ActionTypes'\n\nexport const addTodo = payload => ({ type: types.ADD_TODO, payload })\nexport const editTodo = (id, payload) => ({ type: types.EDIT_TODO, id, payload })\nexport const deleteTodo = id => ({ type: types.DELETE_TODO, id })\nexport const completeTodo = id => ({ type: types.COMPLETE_TODO, id })\nexport const completeAllTodos = () => ({ type: types.COMPLETE_ALL_TODOS })\nexport const clearCompleted = () => ({ type: types.CLEAR_COMPLETED })","import {createSelector} from 'reselect';\n\nconst getTodos = state => state.todos\n\nexport const getAllTodos = createSelector(\n    [getTodos],\n    (todos) => {\n        return todos\n    }\n)","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as TodoActions from '../actions'\nimport Today from '../components/tasks/todaysplan'\nimport { getAllTodos } from '../selectors'\n\nconst mapStateToProps = state => ({\n  allTodos: getAllTodos(state)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(TodoActions, dispatch)\n})\n\n\nconst TodaysPlan = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Today)\n\nexport default TodaysPlan","import React, { Component } from 'react';\n\nimport TodayContainer from '../containers/TodayContainer';\n\nexport default class Today extends Component {\n    render() {\n        return (\n            <div>\n                <TodayContainer></TodayContainer>\n            </div>\n        )\n    }\n}","import React, { useState } from 'react';\nimport { Button, Form, Input, Row, ButtonGroup, Col, InputGroup, InputGroupAddon } from 'reactstrap';\nimport { Card, CardBody, Spinner} from 'reactstrap';\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport Switch from '@material-ui/core/Switch';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport MaterialTable from 'material-table';\nimport { forwardRef } from 'react';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport Grid from '@material-ui/core/Grid';\n\nimport { addTodo, editTodo, deleteTodo } from '../../actions';\nimport './plannerwidget.css';\n\nconst useStyles = makeStyles(theme => ({\n  fab: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    padding: theme.spacing(3, 2),\n  },\n}));\n\nexport default function PlannerWidget(props) {\n\n    const classes = useStyles();\n\n    const tableIcons = {\n        Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n        Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n        DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n        Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n        Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n        Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n        FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n        LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n        NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n        PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n        ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n        Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n        SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n        ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n        ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n    };\n\n    const [data, setData] = useState([]);\n    const [placeholdertitle, setPlaceholdertitle] = useState('Title');\n    const [loading, setLoading] = useState(false);\n    const [collapse, setCollapse] = useState(false);\n\n    function transformOneTask(task) {\n        var t_payload = JSON.parse(task.payload)\n        return {\n            id: task.id,\n            title: t_payload.title, \n            priority: t_payload.priority, \n            category: t_payload.category, \n            effort: \"\"+t_payload.effort, \n            deadline: \"\"+t_payload.deadline,\n            status: t_payload.status\n        }\n    }\n\n    function transformData(allTasks) {\n        var tr_data = allTasks.map(transformOneTask)\n\n        return tr_data;\n    }\n\n    function toggle() {\n      setCollapse(!collapse)\n    }\n\n    function handleTitleChange(event) {\n        setData({...data, title: event.target.value})\n    }\n\n    function handleFollowupChange(event) {\n        setData({...data, followup: event.target.checked})\n    }\n\n    function onPriorityBtnClick(priority) {\n        setData({...data, priority})\n    }\n\n    function onEffortBtnClick(effort) {\n        setData({...data, effort})\n    }\n\n    function onCatBtnClick(category) {\n        setData({...data, category})\n    }\n\n    function handleDeadlineChange(event) {\n        setData({...data, deadline: event.target.value})\n    }\n\n    function formatDate(date) {\n      console.log(\"Formatting: \"+date)\n      var dateStr = date.toString()\n      console.log(\"FormattingStr: \"+dateStr)\n      if(date.toString().length < 12) return date\n\n      var d = date.getDate();\n      var m = date.getMonth()+1;\n      var y = date.getFullYear();\n\n      var formattedDate = y+\"-\"+(m <= 9 ? '0' + m : m)+\"-\"+(d <= 9 ? '0' + d : d)\n      console.log(\"Formatted: \"+formattedDate)\n      return formattedDate\n    }\n\n    function getCurrentDate() {\n      var curDate = new Date()\n      return curDate\n    }\n\n    Date.prototype.toJSON = function () {\n      var timezoneOffsetInHours = -(this.getTimezoneOffset() / 60); //UTC minus local time\n      var sign = timezoneOffsetInHours >= 0 ? '+' : '-';\n      var leadingZero = (Math.abs(timezoneOffsetInHours) < 10) ? '0' : '';\n    \n      //It's a bit unfortunate that we need to construct a new Date instance \n      //(we don't want _this_ Date instance to be modified)\n      var correctedDate = new Date(this.getFullYear(), this.getMonth(), \n          this.getDate(), this.getHours(), this.getMinutes(), this.getSeconds(), \n          this.getMilliseconds());\n      correctedDate.setHours(this.getHours() + timezoneOffsetInHours);\n      var iso = correctedDate.toISOString().replace('Z', '');\n    \n      return iso + sign + leadingZero + Math.abs(timezoneOffsetInHours).toString() + ':00';\n    }\n\n    function handleSubmit(event) {\n      setLoading(true)\n      data.status = \"Pending\";\n      if(!data.hasOwnProperty('deadline')) {\n          data.deadline = formatDate(getCurrentDate())\n      }\n\n      if(data.followup == true) {\n          data.effort = 0.1\n      }\n\n      event.preventDefault();\n      var input = JSON.stringify(data);\n\n      console.log(input)\n\n      props.dispatch(addTodo(input))\n\n      setLoading(false)\n      setData({\n          'title':'',\n          'deadline':formatDate(getCurrentDate()),\n          'status': '',\n          'followup': false\n      })\n    }\n\n    function renderAddTaskButton() {\n      return (\n        <div>\n          <center>\n            <Fab className=\"btn\" color='secondary' size=\"small\" aria-label=\"add\">\n              <AddIcon color=\"white\" onClick={toggle} />\n            </Fab>\n\n            <Modal isOpen={collapse} size=\"lg\">\n              <Form onSubmit={handleSubmit}>\n                <ModalHeader>Add Task</ModalHeader>\n                <ModalBody>\n                  <Card outline color=\"secondary\">\n                    <CardBody>\n                      <Row>\n                        <Col>\n                            <Input className=\"TaskField\" type=\"text\" name=\"taskTitle\" id=\"taskTitle\" placeholder={placeholdertitle}\n                            value={data.title} onChange={handleTitleChange} />\n                        </Col>\n                      </Row>\n                      <br />\n                      <Row>\n                        <Col>\n                          <Switch\n                              onChange={handleFollowupChange}\n                              value=\"followup\"\n                              color=\"primary\"\n                          />\n                          Is Follow-up task?\n                        </Col>\n                      </Row>\n                      <br />\n                      <Row>\n                        <Col>\n                          <ButtonGroup >\n                            <Button color=\"secondary\" className=\"TaskField\" outline disabled>takes</Button>\n                            <Button color=\"info\" outline onClick={() => onEffortBtnClick(1)} active={data.effort === 1} disabled={data.followup}>1</Button>\n                            <Button color=\"info\" outline onClick={() => onEffortBtnClick(2)} active={data.effort === 2} disabled={data.followup}>2</Button>\n                            <Button color=\"info\" outline onClick={() => onEffortBtnClick(3)} active={data.effort === 3} disabled={data.followup}>3</Button>\n                            <Button color=\"info\" outline onClick={() => onEffortBtnClick(4)} active={data.effort === 4} disabled={data.followup}>4</Button>\n                            <Button color=\"info\" outline onClick={() => onEffortBtnClick(5)} active={data.effort === 5} disabled={data.followup}>5</Button>\n                            <Button color=\"info\" outline onClick={() => onEffortBtnClick(6)} active={data.effort === 6} disabled={data.followup}>6</Button>\n                            <Button color=\"secondary\" className=\"TaskField\" outline disabled>hours</Button>\n                          </ButtonGroup>\n                        </Col>\n                        <Col>\n                          <InputGroup>\n                            <InputGroupAddon className=\"TaskField\" addonType=\"prepend\">complete it by</InputGroupAddon>\n                            <Input className=\"TaskField\" type=\"date\" name=\"taskDeadline\" id=\"taskDeadline\" defaultValue={formatDate(getCurrentDate())}\n                            value={data.deadline} onChange={handleDeadlineChange}\n                            />\n                          </InputGroup>\n                        </Col>\n                      </Row>\n                      <br />\n                      <Row>\n                        <Col>\n                          <ButtonGroup>\n                            <Button color=\"secondary\" className=\"TaskField\" outline disabled>priority</Button>\n                            <Button color=\"danger\" outline onClick={() => onPriorityBtnClick(\"High\")} active={data.priority === \"High\"}>High</Button>\n                            <Button color=\"warning\" outline onClick={() => onPriorityBtnClick(\"Medium\")} active={data.priority === \"Medium\"}>Medium</Button>\n                            <Button color=\"info\" outline onClick={() => onPriorityBtnClick(\"Low\")} active={data.priority === \"Low\"}>Low</Button>\n                          </ButtonGroup>\n                        </Col>\n\n                        <Col>\n                          <ButtonGroup>\n                            <Button color=\"secondary\" className=\"TaskField\" outline disabled>category</Button>\n                            <Button color=\"danger\" outline onClick={() => onCatBtnClick(\"Work\")} active={data.category === \"Work\"}>Work</Button>\n                            <Button color=\"warning\" outline onClick={() => onCatBtnClick(\"Home\")} active={data.category === \"Home\"}>Home</Button>\n                            <Button color=\"info\" outline onClick={() => onCatBtnClick(\"Personal\")} active={data.category === \"Personal\"}>Personal</Button>\n                          </ButtonGroup>\n                        </Col>\n                        </Row>\n                    </CardBody> \n                  </Card>\n                </ModalBody>\n                <ModalFooter className=\"float-left\">\n                  {loading ? <Spinner color=\"primary\" className=\"SubmitButton\" /> : <Button color=\"primary\" size=\"lg\" className=\"SubmitButton\" >Submit</Button>}\n                  {' '}\n                  <Button color=\"danger\" size=\"lg\" onClick={toggle}>Close</Button>\n                </ModalFooter>\n              </Form>\n            </Modal>\n          </center>\n        </div>\n      )\n    }\n\n  function renderAllTasks(allTasks) {\n      var tr_data = transformData(allTasks)\n\n      const table_data = {\n          columns: [\n            { title: 'Title', field: 'title' },\n            { title: 'Priority', field: 'priority', \n              lookup: { 'High': \"High\", 'Medium': \"Medium\", 'Low': \"Low\" } },\n            { title: 'Category', field: 'category',\n              lookup: { 'Work': \"Work\", 'Home': \"Home\", 'Personal': \"Personal\" }},\n            { title: 'Effort', field: 'effort', filtering: false },\n            { title: 'Deadline', field: 'deadline', type: 'date', filtering: false },\n            { title: 'Status', field: 'status',\n              lookup: { 'Pending': \"Pending\", 'InProgress': \"InProgress\", 'Completed': \"Completed\" }},\n          ],\n          data: tr_data,\n        };\n\n        return (\n          <MaterialTable\n            title=\"\"\n            columns={table_data.columns}\n            data={table_data.data}\n            icons={tableIcons}\n            options={\n              {\n                  headerStyle: {\n                      background: 'lightgray',\n                      color: '#213969'\n                  },\n                  search: false,\n                  toolbar: false,\n                  filtering: true,\n                  actionsColumnIndex: -1,\n                  paging: false,\n                  maxBodyHeight: 1000\n              }\n            }\n            editable={{\n              isEditable: rowData => rowData.status != 'Completed',\n              onRowUpdate: (newData, oldData) =>\n                new Promise(resolve => {\n                  setTimeout(() => {\n                    resolve();\n                    editTask(oldData.id, newData)\n                  }, 600);\n                }),\n              onRowDelete: oldData =>\n                new Promise(resolve => {\n                  setTimeout(() => {\n                    resolve();\n                    deleteTask(oldData.id)\n                  }, 600);\n                }),\n            }}\n            actions={[\n              rowData => ({\n                icon: 'check',\n                tooltip: 'Complete task',\n                onClick: (event, rowData) => \n                  new Promise(resolve => {\n                    setTimeout(() => {\n                      resolve();\n                      rowData.status = 'Completed'\n                      completeTask(rowData.id, rowData)\n                    }, 600);\n                  }),\n                disabled: rowData.status == 'Completed'\n              })\n            ]}\n          />\n        );\n    }\n\n    function completeTask(id, payload) {\n      var jsonPayload = JSON.stringify(payload)\n      props.dispatch(editTodo(id, jsonPayload))\n    }\n\n    function editTask(id, payload) {\n        payload.deadline = formatDate(payload.deadline)\n        var jsonPayload = JSON.stringify(payload)\n        props.dispatch(editTodo(id, jsonPayload))\n    }\n\n    function deleteTask(id) {\n        props.dispatch(deleteTodo(id))\n    }\n\n    return (<div className=\"task-list\">\n        <Grid justify='space-between' container className={classes.root}>\n          <Grid item>\n            <Typography variant=\"h4\" component=\"h4\">\n              You have {\n                props.allTodos.filter(function(t) {\n                  return JSON.parse(t.payload).status != 'Completed';\n                }).length\n              } open tasks.\n            </Typography>\n          </Grid>\n          <Grid item>\n            { \n              renderAddTaskButton()\n            }\n          </Grid>\n        </Grid>\n        {\n            renderAllTasks(props.allTodos)\n        }\n    </div>)\n}","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as TodoActions from '../actions'\nimport PlannerWidget from '../components/tasks/plannerwidget'\nimport { getAllTodos } from '../selectors'\n\nconst mapStateToProps = state => ({\n  allTodos: getAllTodos(state)\n})\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n    ...bindActionCreators(TodoActions, dispatch)\n  }\n}\n\nconst AllTodoList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PlannerWidget)\n\nexport default AllTodoList","import React, { Component } from 'react';\nimport PlannerWidgetContainer from '../containers/PlannerWidgetContainer';\n\nexport default class Planner extends Component {\n    render() {\n        return (\n            <div>\n                <PlannerWidgetContainer></PlannerWidgetContainer>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\n\nexport default class Past extends Component {\n    render() {\n        return (\n            <center>\n            <div>\n                This is past.\n            </div>\n            </center>\n        )\n    }\n}","import React, { Component } from 'react';\n\nexport default class Settings extends Component {\n    render() {\n        return (\n            <center>\n            <div>\n                Settings.\n            </div>\n            </center>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Switch, Route, HashRouter, Redirect } from 'react-router-dom';\nimport Today from './today';\nimport Planner from './planner';\nimport Past from './past';\nimport Settings from './settings';\n\nexport default class Main extends Component {\n\n    render() {\n        return (\n            <div className=\"content\">\n                <Switch>\n                    <Route path=\"/today\" component={Today}/>\n                    <Route path=\"/planner\" component={Planner}/>\n                    <Route path=\"/past\" component={Past}/>\n                    <Route path=\"/settings\" component={Settings}/>\n                    <Redirect exact from=\"/\" to=\"planner\" />\n                </Switch>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/header';\nimport Main from './components/main';\n\nclass App extends Component {\n  render() {\n    return (\n      <div id=\"colorlib-page\">\n        <div id=\"container-wrap\">\n          <Header></Header>\n          <Main></Main>\n      \t</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import {\n    ADD_TODO,\n    EDIT_TODO,\n    DELETE_TODO,\n    COMPLETE_TODO,\n    COMPLETE_ALL_TODOS,\n    CLEAR_COMPLETED\n  } from '../constants/ActionTypes'\n\nconst initialState = []\n\nexport default function todos(state = initialState, action) {\n    switch (action.type) {\n        case ADD_TODO:\n            return [\n                ...state,\n                {\n                    id: state.reduce((maxId, todo) => Math.max(todo.id, maxId), -1) + 1,\n                    payload: action.payload\n                }\n            ]\n        case EDIT_TODO:\n            return state.map(todo =>\n                todo.id === action.id ?\n                    { ...todo, payload: action.payload } :\n                    todo\n                )\n        case DELETE_TODO:\n            return state.filter(todo =>\n                todo.id !== action.id\n                )\n        default:\n            return state\n    }\n}","import { combineReducers } from 'redux'\nimport todos from './todos'\n\nconst rootReducer = combineReducers({\n    todos\n})\n\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { HashRouter } from 'react-router-dom';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\nimport rootReducer from './reducers'\nimport './index.css';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst store = createStore(persistedReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\nconst persistor = persistStore(store)\n\nReactDOM.render(\n  (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <HashRouter>\n          <App />\n        </HashRouter>\n      </PersistGate>\n    </Provider>),\n  document.getElementById('root')\n);\n"],"sourceRoot":""}